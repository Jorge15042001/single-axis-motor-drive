<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="class">
    <name>Gdk::AppLaunchContext</name>
    <filename>classGdk_1_1AppLaunchContext.html</filename>
    <base>Gio::AppLaunchContext</base>
    <member kind="function">
      <type></type>
      <name>AppLaunchContext</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a8c01210d7ce374946c5ab42303009997</anchor>
      <arglist>(AppLaunchContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppLaunchContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a0baaf70860c015856b2ed27deab38ee4</anchor>
      <arglist>(AppLaunchContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppLaunchContext</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a2355585322109f3ce70e06d952d8b48c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkAppLaunchContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a8bc3e6b3847b748d902276ba1cedee42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkAppLaunchContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a38da4309c87bef2e0b5457309675a010</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkAppLaunchContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>ae2cfb2bff0e620e09e1203a86e251f03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>ad975623791bd92e0dfec7d9057744a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>abdce30692e56ad74ce8ec81180c6a09e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_desktop</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a562759a651c8fad69b6c16ee557ea636</anchor>
      <arglist>(int desktop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_timestamp</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>aebd5ce2b21a62cc7c3b223bd1b1c6c1d</anchor>
      <arglist>(guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>aa1eee8f1afed8479c9fab7ecf6a3f582</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>afd7328e81c9340a28b3812c06bc76dab</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a5cff7a6052e26fe2f519147fc38a9eb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>ae6092a3a59fe206bbf623cf681eb24d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; AppLaunchContext &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>affc7a8941c53e3ff785b20e460f6ee63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AppLaunchContext</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a5628652a695be62136401c2228116e39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::AppLaunchContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a97da12504367f28d2f6e98beefe01b66</anchor>
      <arglist>(GdkAppLaunchContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::CairoContext</name>
    <filename>classGdk_1_1CairoContext.html</filename>
    <base>Gdk::DrawContext</base>
    <member kind="function">
      <type></type>
      <name>CairoContext</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>a08462c3798cab6c4f281ce031c17530f</anchor>
      <arglist>(CairoContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CairoContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>ae5d146c5b1ce2f3447874eacae87b306</anchor>
      <arglist>(CairoContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CairoContext</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>a6ae598dfd1ae3a04821243ece4d69d13</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkCairoContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>a75c8195507367f68a81769a2017c7e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkCairoContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>ab025485efbb8dda9e9c0a1b4f33f5893</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkCairoContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>a245a893ba6cc6cfcb68a7a8d7c997159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Context &gt;</type>
      <name>cairo_create</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>ac674a213c91602c45cfefddc404ada91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>a38a21671276c4ebeb5de1d8e9a30fc8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CairoContext</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>a7be0dc9715ba13d542f145b73808236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::CairoContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1CairoContext.html</anchorfile>
      <anchor>a647e488bcc9a2b7d341e4c529d1580e3</anchor>
      <arglist>(GdkCairoContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Clipboard</name>
    <filename>classGdk_1_1Clipboard.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Clipboard</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a786431d9aefda6d3a08e598e3fdc3dae</anchor>
      <arglist>(Clipboard &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Clipboard &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a79aac766247b55e09a0807b34c97cca4</anchor>
      <arglist>(Clipboard &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clipboard</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>ac39136a26d5d3cdfe0cd2f68c3e08afb</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkClipboard *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a4af2192fcd173bc5aca9fe29dfdff810</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkClipboard *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>ae39b1ebf2262d5c14979de239fe11694</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkClipboard *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a2bb1c75633223729dfa2cfe749b2ca83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a591a9ddcdb929995a21c2ad1b3810f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>aae20f3c1581ecbb41bf1f6104f7bca9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a74654b31929316294bf2931c95393010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>ab8f2332c26339b8e25f65ad1fe226fda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>abe147bbfb03cfb34d40a5391c86a2716</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentProvider &gt;</type>
      <name>get_content</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a00999d1eb210116aaea5de6ab545b03f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ContentProvider &gt;</type>
      <name>get_content</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>af02f6c66da4f509ac3dc1d65785a0e23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_async</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a7c79ce87ad1799e7229fd72ea2ff586f</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;mime_types, int io_priority, const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_async</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>ad2463ce01bfcbdfa28f3c685b9dee8fc</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;mime_types, int io_priority, const Gio::SlotAsyncReady &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::InputStream &gt;</type>
      <name>read_finish</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a2502af9e613b513dd289476888f3dd1b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result, Glib::ustring &amp;out_mime_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_texture_async</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a2ef0c02b00d4a6a202fb9f5bc0548c78</anchor>
      <arglist>(const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_texture_async</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a22d7a545c4385cb8e9382e155e8bf634</anchor>
      <arglist>(const Gio::SlotAsyncReady &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Texture &gt;</type>
      <name>read_texture_finish</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a4a37f7b51a74a9ada6471918a6b596eb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_text_async</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>afab5c0346cb99851ed66a493abfc5c78</anchor>
      <arglist>(const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_text_async</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>ac7d96e8c554b6fdf3f4cebf458b79558</anchor>
      <arglist>(const Gio::SlotAsyncReady &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>read_text_finish</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>aaa4485687c7d75fdbf76c7852d56b614</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_content</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>ae011e83be1be9be9fd7bf4e13e9ed4fb</anchor>
      <arglist>(const Glib::RefPtr&lt; const ContentProvider &gt; &amp;provider)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unset_content</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a9f8aed5f3acf58dc46bd5b9e17aa2037</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a412ab7f32cba2bfd0f00ff5f7338f750</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_texture</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>ac7bbd9228b65f1b0dfc2dbecd66bc58d</anchor>
      <arglist>(const Glib::RefPtr&lt; const Texture &gt; &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>aab577700588f3ed7de26917255823263</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ContentFormats &gt; &gt;</type>
      <name>property_formats</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a4085ea87e98fde205b377545cd1c15f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_local</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a3371ef2c6bf6e90175e72d87a264f59e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ContentProvider &gt; &gt;</type>
      <name>property_content</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a68fd2eea3e7ebd9a29a3042858c1fdde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a2e60ac4b1f3626cc367ed48d9c7c1e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a65d8e8d3f86e971af9d88b7d6ed38470</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Clipboard &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Clipboard.html</anchorfile>
      <anchor>a59c4078cb6f4fc6bb7e03e4032884383</anchor>
      <arglist>(GdkClipboard *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::ContentFormats</name>
    <filename>classGdk_1_1ContentFormats.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a146115c9c36aa10df72881aee4e280f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>af4eb7fb39e24096fa596a815b605b64e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkContentFormats *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>abfa7fbbc34171f55b6c2cfaf3a7c577b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkContentFormats *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>af8882e34da36e04a71abed683b9e6e6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkContentFormats *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a9a9fc46c5a222b8af74a5774438ae070</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ContentFormats</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>aaf2e352447742d1271c807849c00cc34</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ContentFormats</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>acebaa6d6a48db2667436eadeb1b07288</anchor>
      <arglist>(const ContentFormats &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ContentFormats &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>aa5aa38343ddc2d5100082124bf6e5cf7</anchor>
      <arglist>(const ContentFormats &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a46dcc86d644fb7c7103d99809e0beec4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; GType &gt;</type>
      <name>get_gtypes</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>aa662cc10aa41b0f8a41b0af5c7f95034</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_mime_types</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a1fff18521f79eaaa4278f152041ac995</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contain_gtype</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a9abecead2fc1dabd8b0c4347f8fae7d9</anchor>
      <arglist>(GType type) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contain_mime_type</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>ac93da9357abd6c03792f33a291ac9b62</anchor>
      <arglist>(const Glib::ustring &amp;mime_type) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>join</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a8f26f90e6d217b762733bed99e2fbb49</anchor>
      <arglist>(const Glib::RefPtr&lt; const ContentFormats &gt; &amp;second) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a7033404dc12c1894aa66f29fa07b0605</anchor>
      <arglist>(const Glib::RefPtr&lt; const ContentFormats &gt; &amp;second) const</arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>match_gtype</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a06923f426ae3dd3eae191840b17f0c77</anchor>
      <arglist>(const Glib::RefPtr&lt; const ContentFormats &gt; &amp;second) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>match_mime_type</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>abfa8e889d9cc81c9bf89133f79706db5</anchor>
      <arglist>(const Glib::RefPtr&lt; const ContentFormats &gt; &amp;second) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a330066fcc4996aaa8ba8d27ea2bdcbbe</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;mime_types={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>aae4cb08ad57e02e737f70f3dea7af159</anchor>
      <arglist>(const Glib::ustring &amp;mime_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>aad691de71e39312298e48bbb1d5335cd</anchor>
      <arglist>(GType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>parse</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a9dbe221b07878ba88bf4e768cc5f5258</anchor>
      <arglist>(const Glib::ustring &amp;string)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>a06f414191f19a19a4fb35d4111dd10c6</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentFormats &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1ContentFormats.html</anchorfile>
      <anchor>aed257aa4342193d80099e85b6a7475b8</anchor>
      <arglist>(GdkContentFormats *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::ContentFormatsBuilder</name>
    <filename>classGdk_1_1ContentFormatsBuilder.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>ae241caac73c311ce1c448477bda2dd1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>a3936badc32593af8520996f171188283</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkContentFormatsBuilder *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>a2ba93083bab665524e7024559ead0d98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkContentFormatsBuilder *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>aef9210c73f2824d57abfd3d3d7a1aafd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkContentFormatsBuilder *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>a78dd053cd495118c8a88c4ef603a9e4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ContentFormatsBuilder</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>ac976c91487a6b4b25af81ac25706b764</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ContentFormatsBuilder</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>ab36249bf6380f4306ad4ecb4e6cb7237</anchor>
      <arglist>(const ContentFormatsBuilder &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ContentFormatsBuilder &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>a7722765c8a93de4ce2c64fcbe4193403</anchor>
      <arglist>(const ContentFormatsBuilder &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_formats</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>aa5a72f4f6e9095bf9dc31606cbcf0077</anchor>
      <arglist>(const Glib::RefPtr&lt; const ContentFormats &gt; &amp;formats)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mime_type</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>a0f72a3b1791fc622de4de5cffec64117</anchor>
      <arglist>(const Glib::ustring &amp;mime_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_gtype</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>a8bbb67e0fed26ef96addd41935b16500</anchor>
      <arglist>(GType gtype)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>to_formats</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>aa4225fde48a1ebfcfeeafe6b0549dcb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ContentFormatsBuilder &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>affd46a6b686953bb52ff4373a70e7619</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>a2d8c5fd0cc015064caa6aa6ebe969066</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentFormatsBuilder &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1ContentFormatsBuilder.html</anchorfile>
      <anchor>aa4f17b59e3eaaa07c46867368f72bf38</anchor>
      <arglist>(GdkContentFormatsBuilder *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::ContentProvider</name>
    <filename>classGdk_1_1ContentProvider.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>ContentProvider</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a819573da3d816faab605fadbc557424d</anchor>
      <arglist>(ContentProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ContentProvider &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>ace40ef1390d1ec3cd3b308b1f44fe258</anchor>
      <arglist>(ContentProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ContentProvider</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a542394e5e1af7e48a76b35fbade5359e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkContentProvider *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a588879f63eceff195839436594b84c3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkContentProvider *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>ab4ca3940a8f0fcdc874d0e061cecdc81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkContentProvider *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>abc430f420f84fbb175e20a73074a488d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>ref_formats</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a1e825595bb3a3c71bcd51d76e2c36df9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>ref_storable_formats</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a11460e0ba920f5b113535d4e1b287972</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>content_changed</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a9815fdaae363db691d80893bf51b804c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_mime_type_async</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a2fb86c8352e595dd896d098de195548f</anchor>
      <arglist>(const Glib::ustring &amp;mime_type, const Glib::RefPtr&lt; Gio::OutputStream &gt; &amp;stream, int io_priority, const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_mime_type_async</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a996a610444bfb21e897f03b701f8ee27</anchor>
      <arglist>(const Glib::ustring &amp;mime_type, const Glib::RefPtr&lt; Gio::OutputStream &gt; &amp;stream, int io_priority, const Gio::SlotAsyncReady &amp;slot) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_mime_type_finish</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>ad1a7f32215b589bca22f24175bb6aeb2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_value</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a7deb36c4a04241450dcf38b1fb69caa6</anchor>
      <arglist>(Glib::ValueBase &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ContentFormats &gt; &gt;</type>
      <name>property_formats</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>af5efda9aa2ed72ceba773473d366a147</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ContentFormats &gt; &gt;</type>
      <name>property_storable_formats</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a3c680000396d7eea2b3bc9ebfd7d3f40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_content_changed</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>abf03585e6e00cbc1b03f953cc5c935c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>ad2914d75890c7d8b47d7c18822109c21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ContentProvider &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>add23c66e16d29a0cc6c4005f8b04f374</anchor>
      <arglist>(const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ContentProvider &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>af281ec709c4dd8bbf6ab8ea2b86ac10c</anchor>
      <arglist>(const std::vector&lt; Glib::RefPtr&lt; ContentProvider &gt;&gt; &amp;providers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ContentProvider &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>acf0b924d34127ac4159f1d14aa472b1c</anchor>
      <arglist>(const Glib::ustring &amp;mime_type, const Glib::RefPtr&lt; const Glib::Bytes &gt; &amp;bytes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ContentProvider</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a65b78877bff50ad459f692ffadeb0b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_content_changed</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a9c893c59fa6ff09c2f86492832f2a525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentProvider &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1ContentProvider.html</anchorfile>
      <anchor>a7de9e2e11d664fcc26303212ad0f3a19</anchor>
      <arglist>(GdkContentProvider *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Cursor</name>
    <filename>classGdk_1_1Cursor.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Cursor</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>acc25b4e5d1717db39f9b674aaec905c9</anchor>
      <arglist>(Cursor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Cursor &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>ac3bd89e9442296204a55fc34b2da2778</anchor>
      <arglist>(Cursor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Cursor</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a4c01eb9a08d758411af82b54d3461770</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkCursor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a99bdcdf475a617556312520a45fa05c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkCursor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a4a22c0bdd65b6bf1ffc931dd9083ef29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkCursor *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a34e7a1b9ba6ebf990c89fe980e0670d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Cursor &gt;</type>
      <name>get_fallback</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a43f557dd80deeb011247dd3cdd568372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Cursor &gt;</type>
      <name>get_fallback</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a2ef9212c6128698b739e975070a3dfc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>ac7cd20114536ed4b07e9493676ef00aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Texture &gt;</type>
      <name>get_texture</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a32a56a1864d7597d7e602b1b03149c24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Texture &gt;</type>
      <name>get_texture</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a049c55b6be9c4824cbc85fbf38f49d97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_hotspot_x</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a7a15e5c2301d61bacbafc5e821167779</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_hotspot_y</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a8074577cc5585f9ee40cd9bb4a329e4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Cursor &gt; &gt;</type>
      <name>property_fallback</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>aada3ba3cf48b28216d97e11d31f35a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_hotspot_x</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a98d7c89a57bf224981ec13323e8a79b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_hotspot_y</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a742732db5008752faece7139b96b67d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>acee2fed01523e6aca2b1f31cbf762c19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Texture &gt; &gt;</type>
      <name>property_texture</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a062c7298f3b790de0fdc45d25132caee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a09e0ccbec9d2e1f2453a89c52c065a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Cursor &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a33eae5679ef24a19f8780e07e4bb79ec</anchor>
      <arglist>(const Glib::RefPtr&lt; const Texture &gt; &amp;texture, int hotspot_x, int hotspot_y, const Glib::RefPtr&lt; Cursor &gt; &amp;fallback={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Cursor &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>afe995d6655e235bd6fc9c91701c8c38e</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::RefPtr&lt; Cursor &gt; &amp;fallback={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Cursor &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>aaf25140ea02e667d2bc74396846a9e20</anchor>
      <arglist>(GdkCursor *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Device</name>
    <filename>classGdk_1_1Device.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a5dd1f5444d52476a9781c9065a95c96f</anchor>
      <arglist>(Device &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Device &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aa3471771d5b05f60692df218cd8e8da8</anchor>
      <arglist>(Device &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2aa48319b4cf720a9a55a5175d616041</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDevice *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aeb0115eb479ffaa6f01314d5b09a84be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDevice *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aef3d22f3b3500e3db09f78728ed37aab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkDevice *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ad72b1db0d0407e69c976829bf1e7c620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a41310be2558d86684d77002c8207c23b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_cursor</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a76d4bf9ea83f5ae8661e23834ec70ff2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>InputSource</type>
      <name>get_source</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a83696bfb05336ed81d489d0ffa557387</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2a8201ff308802ad8b0c7c8d256cebb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a3fc08f5d444998389dae16d20924c5bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_surface_at_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a9969665b62693f2c8954962ca9139178</anchor>
      <arglist>(double &amp;win_x, double &amp;win_y)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_surface_at_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a09febbe63f9368116fd781770b71055f</anchor>
      <arglist>(double &amp;win_x, double &amp;win_y) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_surface_at_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ad37722bfd2f4edf69bbc6e3f06978dab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_surface_at_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a7dea77c3f439a194baa884af80666870</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_vendor_id</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aaa944d886238169d4d8fd5c65834c8ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_product_id</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a50ed006ce61829a9e76b2794c82d2a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Seat &gt;</type>
      <name>get_seat</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a6cfbe8318bce9f6a4dad63f293e88346</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Seat &gt;</type>
      <name>get_seat</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a6ff2fa350514358395946f6ab0aea94b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_num_touches</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ac15a7a7494c42a7f0562dcdfba46526f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; DeviceTool &gt;</type>
      <name>get_device_tool</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a7552cf507d81b4c3c51abca63c44aa69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const DeviceTool &gt;</type>
      <name>get_device_tool</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a9abf2a66376654777c736ea2d4e4c841</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_caps_lock_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>af36cf247bd589b147959fae594c0631b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_num_lock_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a8d20e8448238be0ff11c546579adf3b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_scroll_lock_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>abb51ceec7a53d0fe0b3de04ce17815dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>get_modifier_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a809626a67fa962b058b81c679ef9e65a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Pango::Direction</type>
      <name>get_direction</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2848fb9e56cf6851ff1f253d7468a2a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_bidi_layouts</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ae82228222f30a31e2f2658021ea303b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_timestamp</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a7774e67269ecc4fd991fbed8cdf68358</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_device_pad</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a86802d49a8417a802893cb96fc6e2f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; DeviceWithPad &gt;</type>
      <name>device_with_pad_cast</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a43f4abe8022979eb165b68f6577407b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const DeviceWithPad &gt;</type>
      <name>device_with_pad_cast</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a04ecaba010b59b0f785b395b2c4e3165</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a53cc6c119593de790f446d90767d34fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; DeviceTool &gt; &amp;)&gt;</type>
      <name>signal_tool_changed</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a4dca0c921e4cbcac4961058c6597c74b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a912b9b8af92598679fb3de42a007d29b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a0b8c3fc30e19410a850ef87553becd06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputSource &gt;</type>
      <name>property_source</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ab7bc48c17f382898411c5efd84d0f3fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_cursor</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ac17c8a7806db00acc7457b475473ad33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_n_axes</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>af163f824fcbf62ef6013fc5187e29733</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_vendor_id</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aef5784858a1d5f1a3b941df564fd8ac3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_product_id</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aab6d9ac06a3dca832078dea25af49204</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Seat &gt; &gt;</type>
      <name>property_seat</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>acf0be32b906581a068c9185cd7fa819b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Seat &gt; &gt;</type>
      <name>property_seat</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a07f067359a40fe01551a04bbf1d70717</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_num_touches</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a67e5104f6911b52f266e0eb04587d53a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; DeviceTool &gt; &gt;</type>
      <name>property_tool</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a11a64e2f414269f0d9662d77f8d6574d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Direction &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ac5e6a698c0b6218a11162a9984435eee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_bidi_layouts</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a069a5dc867bc1ef6b1812b004ae38de5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_caps_lock_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aa83608bd96fb1cecbd477ca2b39c3c09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_num_lock_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a8c9843fb9fb8c4f5188dc25792c3b38e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_scroll_lock_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a94e466eb3d5b164b649ed7abad208663</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ModifierType &gt;</type>
      <name>property_modifier_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a284fae5f20a3ad8e596dd7f03b8ab633</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aef8b7c4a44789d88a65cd8f9103d581c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a7b7cf9284ccf9d2bbc061205446b5f40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Device &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a8a6b8086fe4968ffed6f58f055a238c1</anchor>
      <arglist>(GdkDevice *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DevicePad</name>
    <filename>classGdk_1_1DevicePad.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0ffe4a95d79a93bc0b649fdfd6ab3970</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0ffe4a95d79a93bc0b649fdfd6ab3970a57b35198356d373bcd2a6e08abcb3795">BUTTON</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0ffe4a95d79a93bc0b649fdfd6ab3970ae69b8a2544417fb71e2767e95d7ac8f3">RING</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0ffe4a95d79a93bc0b649fdfd6ab3970a6989032db1002ec3fb0b2de2c970f184">STRIP</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DevicePad</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a643f67cc0adaf88e9ba4f949a2815a2b</anchor>
      <arglist>(DevicePad &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DevicePad &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a071562d649abe2ab3a1e527460fa6ee3</anchor>
      <arglist>(DevicePad &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DevicePad</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a162cd3dc1f8cf6d3cf0d8a81aac2224f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDevicePad *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a464a15b21bf05fc7f93156290ef0c723</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDevicePad *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a4858509542b3b45554034a1ce9526468</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_groups</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a05f32cf462ebc2eb771f9912ea30220c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_group_n_modes</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a4e52e8711b295dd4bde57d1f1be2a6bd</anchor>
      <arglist>(int group_idx) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_features</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a755b3cd0d87f27450df63d684267c4af</anchor>
      <arglist>(Feature feature) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_feature_group</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>aaac09b73e56ad40a703ebeb79fc19f0d</anchor>
      <arglist>(Feature feature, int feature_idx) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>afc9ce079664acd24d947273477bdc348</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>ae2f436ecbc2ae3ef083769d5a011adb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DevicePad</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a3a885c48a8569484774d6e32b1769506</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DevicePad &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DevicePad.html</anchorfile>
      <anchor>a5f9703cb075bfa8f0a10e091b3b74e6f</anchor>
      <arglist>(GdkDevicePad *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DeviceTool</name>
    <filename>classGdk_1_1DeviceTool.html</filename>
    <base>Glib::Object</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0a6469dddabc742695242fbf0ba62910</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910ad3fa1aa45b9fe56e1fc1b558d8ed6678">PEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a5727c5b09d265bc24423f126e89d6fd3">ERASER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a3a8c100f1870815a5863a675c2521c6f">BRUSH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910aebb4b61f7b8f6015b8e8461af1c0e5b2">PENCIL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a9fb056f19b33a724cd93c3ea7240511d">AIRBRUSH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a2ec2be318cc86a1224c0e9dcc71321e4">MOUSE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910acc66cf051fcfc1277ab42e77209361c5">LENS</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceTool</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>aa635882b7730ee4e173a7a76587f6028</anchor>
      <arglist>(DeviceTool &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DeviceTool &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a7c539fd995460d62c271c2bec8bef34a</anchor>
      <arglist>(DeviceTool &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DeviceTool</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a802db5d13e958539671e811b60c532eb</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDeviceTool *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a786a8dad747821d6bbb2cf6c0c5874ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDeviceTool *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a2f3d148eeee9a2482dfbc2af35b33b6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkDeviceTool *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a6eb40a35b232d6f1668bf42c449e3dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_serial</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a20bc2fdf20736a73b4ca4c49f50b7be1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_hardware_id</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a0da161a1908bc9a50c346281357b2a56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get_tool_type</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>af1690bc820d7084a5da51e3189065caa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>get_axes</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>acf80d18b0802f63c41c24ad6309a3b6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_serial</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a52ce1e6c1d97d2145712d29771870751</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Type &gt;</type>
      <name>property_tool_type</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a2c5376f7bef00cb5a6815527d918b845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; AxisFlags &gt;</type>
      <name>property_axes</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>acce551ac9bcb11c08f67c03fba376aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_hardware_id</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>a2cc43fdcff66fd0999a5796132eceb60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>ae8b0f479b2622119d7c8851415d29961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DeviceTool &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DeviceTool.html</anchorfile>
      <anchor>ab39aa0ecae831b450b6f98683def931f</anchor>
      <arglist>(GdkDeviceTool *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DeviceWithPad</name>
    <filename>classGdk_1_1DeviceWithPad.html</filename>
    <base>Gdk::Device</base>
    <base>Gdk::DevicePad</base>
    <member kind="function">
      <type></type>
      <name>DeviceWithPad</name>
      <anchorfile>classGdk_1_1DeviceWithPad.html</anchorfile>
      <anchor>a937a73e2873947e7171e3302de3592c5</anchor>
      <arglist>(DeviceWithPad &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DeviceWithPad &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DeviceWithPad.html</anchorfile>
      <anchor>acfd46af18d36f1a6074d7fc7b261f015</anchor>
      <arglist>(DeviceWithPad &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DeviceWithPad</name>
      <anchorfile>classGdk_1_1DeviceWithPad.html</anchorfile>
      <anchor>aedd4b2e57b0030d95c2c35694e2b995b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DeviceWithPad</name>
      <anchorfile>classGdk_1_1DeviceWithPad.html</anchorfile>
      <anchor>a6a235166958d83ad617052a2225f3bf7</anchor>
      <arglist>(GdkDevice *castitem)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Device_Class</name>
      <anchorfile>classGdk_1_1DeviceWithPad.html</anchorfile>
      <anchor>ad082e39bf8270db28e61a3f282c6d2eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Display</name>
    <filename>classGdk_1_1Display.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Display</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ae7d37751f4712891ff2d7df27f0cd6fc</anchor>
      <arglist>(Display &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Display &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a9ed2bdedf1c53372ee3c92dde3568878</anchor>
      <arglist>(Display &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Display</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a42dfa55c9dd99d81dce2a755a2488808</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDisplay *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aa5ba401c95c8f72ffbc974fa9ff7e2f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDisplay *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a1172cb8d02e502dc3c419571f6b1d8f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkDisplay *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ab90b102f28dc2ea9f1259b005acfba9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a05673304139bd56854048fd2dacb7dff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>device_is_grabbed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a3a837bd1f6c4bec2fe1cd9e349137c76</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beep</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a63ff8a09aa81f2bf1f7581ddba39fe69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sync</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad772046a33c0a1c6d071b1cf339faf63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a00b18a2be2cd6216c30b64330e8817b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_closed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aa408155f67ebbfcf500948d9734e6d3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_composited</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a68738efaf42b0180055823318417679b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_rgba</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0a119447b5b03fb87543f0f6bbeae989</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_event</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aa5b6887ef5f4f2e6f8014eae8ee866df</anchor>
      <arglist>(const Glib::RefPtr&lt; const Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0b8fa8a05a7208f9b717000fe1b74aa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Clipboard &gt;</type>
      <name>get_clipboard</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>abe5d5c8f44c86cc7821c8880652edca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Clipboard &gt;</type>
      <name>get_clipboard</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a5b2a74f36a90b61e3f7c9e4608d32857</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Clipboard &gt;</type>
      <name>get_primary_clipboard</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>acc273b19c1f6d66fa76e61fa57a548b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Clipboard &gt;</type>
      <name>get_primary_clipboard</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a1b5777c45f9813c585518d0e5ba048f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_input_shapes</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a7d438335204fe4f4af940a5142b74460</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_gl</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a30c7341b4558185fe18f5faa0fb9bfd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; GLContext &gt;</type>
      <name>create_gl_context</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ac1e6733c7c9cd44ab12ac47c937afb99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_startup_complete</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>afb9b36d3d1fab967f76f1f782319f5da</anchor>
      <arglist>(const Glib::ustring &amp;startup_id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_startup_notification_id</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>acd9bb7d6cd447bcf947de23ad65ca440</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; AppLaunchContext &gt;</type>
      <name>get_app_launch_context</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad948d39943838839ea2ab31cd609ef22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const AppLaunchContext &gt;</type>
      <name>get_app_launch_context</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>adaa5df95769e53245d1fcd3d71af07af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Seat &gt;</type>
      <name>get_default_seat</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0752d93a9dcff539aaf0313d205bbf4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Seat &gt;</type>
      <name>get_default_seat</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad52e58655c0c813d5ea3392755c1937f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Seat &gt; &gt;</type>
      <name>list_seats</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a70049908096f8483f38702e7f21e96ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Seat &gt; &gt;</type>
      <name>list_seats</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a5943938eb6fdf5447a2301317b6c9873</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_monitors</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aeacb7b725b2abb8ca6abd7192a154d83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_monitors</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aa7e6802802393563deb6c43327daa1f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Monitor &gt;</type>
      <name>get_monitor_at_surface</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>af53ed91f4cf86b93cf7cedeca2303032</anchor>
      <arglist>(const Glib::RefPtr&lt; Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Monitor &gt;</type>
      <name>get_monitor_at_surface</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>afe8731e4468cafd0aacc575e2ba66710</anchor>
      <arglist>(const Glib::RefPtr&lt; Surface &gt; &amp;surface) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_setting</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0ac9c5beeba5ba192140ecb068ac2eb4</anchor>
      <arglist>(const Glib::ustring &amp;name, ValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(bool)&gt;</type>
      <name>signal_closed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>acbfa15f717be0d21d2dabdec2fb52ccc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_opened</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a38e73b3f3e105a486fdacc467895e306</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Seat &gt; &amp;)&gt;</type>
      <name>signal_seat_added</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a6a44206d9cebf1c4d7c0ce93f3f3a9b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Seat &gt; &amp;)&gt;</type>
      <name>signal_seat_removed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a38e8beced9ca5e7b61eef12dfb428f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;)&gt;</type>
      <name>signal_setting_changed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>adf7522dce4103caa5c3e3ac0cd1ad1b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_composited</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ab6b6450818bdb25c2a560fa85c267804</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_rgba</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a804617535bde2eac5ba573f13c8a7422</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_input_shapes</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0c815a9cbf148425919425577f016e3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a394a1a77a07d3622b4cce1c3413945f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Display &gt;</type>
      <name>open</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a59cf8e3302a66aa24ba43b0c47dae946</anchor>
      <arglist>(const Glib::ustring &amp;display_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Display &gt;</type>
      <name>get_default</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0cbfb8aa89b6d2a7047b93909894b763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Display</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a343b97f710d20562739337c3f7ae7a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>af5e336efbe340163508427f1c476af68</anchor>
      <arglist>(GdkDisplay *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DisplayManager</name>
    <filename>classGdk_1_1DisplayManager.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>DisplayManager</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a5609b13130294cfcf2890ae0d1673733</anchor>
      <arglist>(DisplayManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DisplayManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a67590f9bc9a35e605f21a72be395f0a7</anchor>
      <arglist>(DisplayManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DisplayManager</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>ae3cea4e464ec8e4158b128cd33ecacb1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDisplayManager *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a92183d8df699c7a9ce286cd8dd6a4fdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDisplayManager *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a2be5e54e0ff12a6354b5f7fb83b6c0bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkDisplayManager *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a4040b551662c4550882dcbbc2f86267d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>abd8af5922c9387e779d7a5c4849a0290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>ab90533dbc52ae21bd163b220544eb102</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>aa35a8aae484348b5dc204c9eaadfdbca</anchor>
      <arglist>(const Glib::RefPtr&lt; Display &gt; &amp;display)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>list_displays</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>aa46adeef6542b879a280c55fdd706540</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>open_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a7a05b0efe4dbd84bd0bc0e9325957d6e</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>adf5eea65c547419ec7ba650a35b26b3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>af99fee4e9d29e914748b489a721445c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Display &gt; &amp;)&gt;</type>
      <name>signal_display_opened</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>ab90c8973d3427a223d0ee466a6e5105b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a7c20f9a19c0a8251db577a7b1e62766c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DisplayManager &gt;</type>
      <name>get</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>ac17b40997902dce84e1e9ed435e5e7bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DisplayManager &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a7b504d2596c8c203eba56d7899a21ff8</anchor>
      <arglist>(GdkDisplayManager *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Drag</name>
    <filename>classGdk_1_1Drag.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Drag</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a3410b8aea601ba108fe2dfdcc97d946b</anchor>
      <arglist>(Drag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Drag &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>ae16a1da83b3db5ee8bcd7a1eb0f4d72e</anchor>
      <arglist>(Drag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Drag</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>ab3954ba935cb7f6b34269651dc2af8f9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDrag *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>aa6d76adfaa3f4b91fc11c0c27addabc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDrag *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>adb7ba494137616b7b1136e8f25d5c44d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkDrag *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a74ae59562c57b0dfcd2bebb0bbd0a87f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a63e05c5fbfa6e89bde49cf0c1c56a7db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a3a7d2ab901248d1c2b1232201532b42c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>aaff94de52f8ced3c33da3c268cdcde3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a9e9dbc87fd0e931a05fa414d28807d2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a6131d246c8cc5daa507431472e456a5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a78d07878f84c33547a85c5717730a875</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>get_actions</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a3c825e8ee897231d711a38356f44a16d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>get_selected_action</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>ae56c8b505cf5f9d84b1457a061d64b46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_drop_done</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>aae93b1a07a16530f65cd4498e1fc2c97</anchor>
      <arglist>(bool success)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_drag_surface</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>ad11470f7c7347edcfc79f8e95f80f389</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_drag_surface</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>af57d937d380ec5d1cadf1236d17db68c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hotspot</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a105ec5008bc5e2aefe80c403f279a45e</anchor>
      <arglist>(int hot_x, int hot_y)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentProvider &gt;</type>
      <name>get_content</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a1b8800a3e6e96f96766876d89c610fa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ContentProvider &gt;</type>
      <name>get_content</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>aa3ad2850d7b099037edfe324440a3a0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a015f635fb41e557e2aebff7a32dffa26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a2bc8a9d8a5f7478e2fa60430949cadb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ContentProvider &gt; &gt;</type>
      <name>property_content</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a8e6934ce32b4612bf46675942cf8f8a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Device &gt; &gt;</type>
      <name>property_device</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a2e45305d7e2fb2cb5a3053507c134eaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a51f49132e7c02beb8fda55d32bc003ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ContentFormats &gt; &gt;</type>
      <name>property_formats</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a1876ae49c640688e5d44bbcfc6197728</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; DragAction &gt;</type>
      <name>property_selected_action</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>ac30313ed5de5207aa7c575b0f4a40949</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; DragAction &gt;</type>
      <name>property_selected_action</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a3bdf16f7a64660ba4a69ee68061c6f4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a9163fd7e5e9de17556c0d612feb56572</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>adff1640f9c0a0cadefb7d6b2c4dec96a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Surface &gt; &gt;</type>
      <name>property_surface</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a93ed7af9d77e1a911588a17da5dc4509</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(DragCancelReason)&gt;</type>
      <name>signal_cancel</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>ab89c1699a5f6ee850458105a7d2fd690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_drop_performed</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a3cf6412656438e53b00e21e10a941caf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_dnd_finished</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a4de389a455dafea87862c4ebd0e3a85d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>ab761fc9d3ae4441e13ad3726eaf6e79c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>action_is_unique</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a850088a93cfe4b16ce98f26898f17179</anchor>
      <arglist>(DragAction action)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Drag &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Drag.html</anchorfile>
      <anchor>a7450ed5773b920566d89dc53d215faf0</anchor>
      <arglist>(GdkDrag *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DragSurface</name>
    <filename>classGdk_1_1DragSurface.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>DragSurface</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>ae7084ec23c16135df756e8391c507632</anchor>
      <arglist>(DragSurface &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DragSurface &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>a89b86ed627c4dcab4d555568b758099a</anchor>
      <arglist>(DragSurface &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DragSurface</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>afffeead541e84cecd03eba29dd779588</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDragSurface *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>a2155d79a8ec21f7197da6ef54ceac00d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDragSurface *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>a7edcac76634fcdfecb91633775d79bfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>present</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>a70bedcd11de1007aebd04fd885b67f3f</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>a28ababb50bb9d9946aa6468a328dfa93</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>ab9212fa71c2a382ef802c914d6a1d9fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DragSurface</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>aeee5f2dddd6e272cbea2ac76f8fba1c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DragSurface &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DragSurface.html</anchorfile>
      <anchor>a2627b2ead3027bbd527d29520a8c8936</anchor>
      <arglist>(GdkDragSurface *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DragSurfaceImpl</name>
    <filename>classGdk_1_1DragSurfaceImpl.html</filename>
    <base>Gdk::DragSurface</base>
    <base>Gdk::Surface</base>
    <member kind="function">
      <type></type>
      <name>DragSurfaceImpl</name>
      <anchorfile>classGdk_1_1DragSurfaceImpl.html</anchorfile>
      <anchor>a085058b76961fb9b7959eccb65b07723</anchor>
      <arglist>(DragSurfaceImpl &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DragSurfaceImpl &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DragSurfaceImpl.html</anchorfile>
      <anchor>a6107d45af2576d90b6891807d3d87030</anchor>
      <arglist>(DragSurfaceImpl &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DragSurfaceImpl</name>
      <anchorfile>classGdk_1_1DragSurfaceImpl.html</anchorfile>
      <anchor>a7704d4e345f943fed605e3a5d5de7e54</anchor>
      <arglist>() noexcept override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DrawContext</name>
    <filename>classGdk_1_1DrawContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>DrawContext</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a645e668b0d8a931f5ebf57f38b0af885</anchor>
      <arglist>(DrawContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DrawContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a38a4f2851098bf9b0901c7da8a8fedca</anchor>
      <arglist>(DrawContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DrawContext</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>af5a3c1465f125acf4708c748f2459ae7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDrawContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a7e4a2e3b9ed84c1c307a78199acf6b54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDrawContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a01313d5c96262c257ee79f744e5a8aa4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkDrawContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a1c5fb679d74992fbcc35900ef15d9958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a0066a2fbca78e8a00363956382e95655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a61eff6cfbf33d5ad055b4e181d79378a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a0bd80e726965000d7950d777431ae17c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a0e5089dffdd3dc457d0af620608142ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_frame</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a55f3fa1c01ef5db448b7359e632429af</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; const ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_frame</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a1544f359c79f81326e6853105b75c456</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_in_frame</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>afbec837ef3177bb151f3253f46d0c4ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; const ::Cairo::Region &gt;</type>
      <name>get_frame_region</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a7986a8e3b2452eff45784d42b1324424</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a6b4fe62cb53e59be92cf55f14f59fcc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Surface &gt; &gt;</type>
      <name>property_surface</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>aab89e9612e5fdb77a3667fcf10fc92e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>ab3bedb18f2aad9e143285f5b6b293f81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DrawContext</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>ab2fd2a838308dc3b9dc54e8f875230b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DrawContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DrawContext.html</anchorfile>
      <anchor>a0d8381e015321ed881e64f9914573fe3</anchor>
      <arglist>(GdkDrawContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Drop</name>
    <filename>classGdk_1_1Drop.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Drop</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>ad912477d2dcc44fcfcfe53a1e563b0b1</anchor>
      <arglist>(Drop &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Drop &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a83346cf9dcfb0c1cdc337dbf46d0863a</anchor>
      <arglist>(Drop &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Drop</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a08b00dde6303e696f61430fc91d7c06b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDrop *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>aa10a0d438246f901eb49e1d984ece3f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDrop *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a83e5e1aaa123bc0f7880c64a5f640d2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkDrop *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a9f4c094371225ae08aacf70613eddf77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a8e90abe68d66f63cf240f0e3d5d28dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>ab12049599b12aedbe045b6413f97b483</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a727fa0954c3bcf83e54a357eebd2d625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a9bafdda5b8221c603eb02a5753b1198f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a1bb1a100ea850e4824b9243bac630335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a3a71a7b12399e9637e38cc5b415c0d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a3a9a81a509b2a2360128f645e91ae368</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a164d48a1f011ca342ee02d2584a4c798</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>get_actions</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>af8d604b95c9729e2b686f96b451965e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Drag &gt;</type>
      <name>get_drag</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a1f147ec78198caca45283e28bf217b51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Drag &gt;</type>
      <name>get_drag</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a857c3cf32c0c3b25b59ac19615ceff89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>status</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a736a1bd41e66d9900da77deb489f58d4</anchor>
      <arglist>(DragAction actions, DragAction preferred)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refuse</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>ab3a7fb46d8a8c473357a53c0325cc46e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>ae6826a8374399ff773cc4ea55d05450c</anchor>
      <arglist>(DragAction action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>failed</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a2bdb75bba0d18b8dae3035b0a84607e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_async</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>ace878a1d6aa3e97e39f75e3c65fc2ba2</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;mime_types, int io_priority, const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_async</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a9ae02c3bbe6c826ef8624cda5bcc5179</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;mime_types, int io_priority, const Gio::SlotAsyncReady &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::InputStream &gt;</type>
      <name>read_finish</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a7cb1698ed8fe3229fed5cf12e3051e38</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result, Glib::ustring &amp;out_mime_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_value_async</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a6704ca8864c1b23cd69118a9e8d74f20</anchor>
      <arglist>(GType type, int io_priority, const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_value_async</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a82976bb8347700ddbe06d7f362686666</anchor>
      <arglist>(GType type, int io_priority, const Gio::SlotAsyncReady &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ValueBase</type>
      <name>read_value_finish</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>ab05d210d3b96ddc11ce8ee99918a0491</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>adb6e9fa603e47b35a8a67b5b0b061adc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Device &gt; &gt;</type>
      <name>property_device</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a91015bf5f923b4e7fcfd87f0d72b3a63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>ac6be5eb1829300c3bf6c7c25400a804f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Drag &gt; &gt;</type>
      <name>property_drag</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>aa2baa837896d15a991797129a5cf478c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ContentFormats &gt; &gt;</type>
      <name>property_formats</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>aaf2aa3a2680a02ac580fbccb1fd445d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Surface &gt; &gt;</type>
      <name>property_surface</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>aba4267a7e62512a284842ae754ef9a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a4c409ad22808bd9e73b1f9a8ff7dbd43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Drop &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Drop.html</anchorfile>
      <anchor>a0941518143193eca35d34ce15dc41dd7</anchor>
      <arglist>(GdkDrop *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Event</name>
    <filename>classGdk_1_1Event.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac975d664f8bc7bf26f158b0a7b849fec</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca32f68a60cef40faedbc6af20298c1a1e">DELETE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaee39299a8dc632d0ad73f8f826b2fe77">MOTION_NOTIFY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca0f7a11c8b7f0f172e62d0a949ee95a0e">BUTTON_PRESS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaa2fad10c887dc8ab2209fbf83526bbef">BUTTON_RELEASE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaffa443ed64dc5ee08ddd51ec6b0cf09e">KEY_PRESS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecada0bda5f3ec88092f0b39c17981538c3">KEY_RELEASE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca80b451718a5f83315f226ec8f54de483">ENTER_NOTIFY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca1be27f71ede006112f44e9b7e16da20a">LEAVE_NOTIFY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca17cc3b816d656f42054012c5c455475a">FOCUS_CHANGE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaf58d89d32a18a217e21f2c59f0b8bb39">PROXIMITY_IN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca88d29d0a7552ab586db6f834ee1c14ce">PROXIMITY_OUT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecac3730b5d131423b74556cfddac8dfc15">DRAG_ENTER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca9ede34c76ce18a1ad6835595f959ca89">DRAG_LEAVE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca45f19d4463cc7655e9c5b20bffa755eb">DRAG_MOTION</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecad3eafa1ec913a20043e8fc9dc6a6e15f">DROP_START</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca71574275cadb387a5082e87e9dd60c25">SCROLL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca6826e58f68e7ec55b61c2a2468add503">GRAB_BROKEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaeeab9b6bf8a005872d294bfa0a20025a">TOUCH_BEGIN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecadd780601646655a5c0e3e4464c309197">TOUCH_UPDATE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca2eb2c753d4070138e8823f538643dbf6">TOUCH_END</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca0763d5920f131a203e1e14b5c207cb95">TOUCH_CANCEL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaa74f40ba0999a95dc53f48f846247c87">TOUCHPAD_SWIPE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca6a8d4ef383e8f6e2a71175e3e0bb0453">TOUCHPAD_PINCH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca9e6d267bac65c4e255e6693210c9a8a0">PAD_BUTTON_PRESS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecabb4c60feff09be64971fb8e6c8561a73">PAD_BUTTON_RELEASE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecabd37cf9748ee8b75defd3f3df67f61f9">PAD_RING</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca5404425a3b79bb69332c456e32491206">PAD_STRIP</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca7ef5950fdfe37f76c5bde6bb4aa0cdfb">PAD_GROUP_MODE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca30d2ca4ca1910d4b69484738acd2972f">TOUCHPAD_HOLD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaa3bc56b2b6e0e093922989480b94eb79">EVENT_LAST</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>adbea634acae9e3ab79313f99d20fb20d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a81ede66c9b6d2e5e971f9441b29ecca4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkEvent *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a21a5ddedef8a375f19412ce2d6c37d90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkEvent *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ab66103b209e0776d0da1ecf0534dc789</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkEvent *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a0dcaccb518bd45efd3311acfce5354b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a02da793925b3224866c39ac942172808</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a4b4473940c83781c019033fa49fdf5d3</anchor>
      <arglist>(const Event &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Event &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aa5d2e661a62c86e0315b68b8b0ca38e7</anchor>
      <arglist>(const Event &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get_event_type</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ad46eda0e248790c3bfa647b1f65c3f26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a639213074479ce52f49bf74cfa02d28d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a2d51d82112ad019446037a1121e14893</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Seat &gt;</type>
      <name>get_seat</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a9fc2361df8977821be9eb53b05b9bfc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Seat &gt;</type>
      <name>get_seat</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a09b0b3d4d3a91a2ad44b32b95ed20425</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a8f01c0ecee27346ff42a5a04325f8fdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a2521b66b22970e41082bbe88aece27bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; DeviceTool &gt;</type>
      <name>get_device_tool</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a7b91d6623c3ef3a281a66b8080db2f36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const DeviceTool &gt;</type>
      <name>get_device_tool</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ad47941f1ba60d3c5f83d3e5faf3e835f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_time</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a5f06613499bc659170283484e16efe45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a91570267ed2bc7e2160612fe2656c8b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a314cf85f5e912e2592f24f1399a95a73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EventSequence *</type>
      <name>get_event_sequence</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>af3e778aaebe791758363c92f15d9cc75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>get_modifier_state</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a45aa5f2545eb6ee33b6698a95e9d5fc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_position</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>add2e4318c2e9105bb3d7a5c4755578aa</anchor>
      <arglist>(double &amp;x, double &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>get_axes</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>adae98ba2e4843795d63318e41489dc6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_axis</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aee933d09b9cb6af45af52344fc325eea</anchor>
      <arglist>(Gdk::AxisUse axis_use, double &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_pointer_emulated</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ab7c557bdba8960f9d99f82e580f2e583</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_button</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a6e70caccdef185584e96e9157b49ad09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ScrollDirection</type>
      <name>get_direction</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a36c2e864d10346bc5480d37cb665a3db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_deltas</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a519c8a17161a732cbfcad6e1f070ce78</anchor>
      <arglist>(double &amp;delta_x, double &amp;delta_y) const</arglist>
    </member>
    <member kind="function">
      <type>ScrollUnit</type>
      <name>get_scroll_unit</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ae21e32b82a40bbf6b81f2ce8315421d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_scroll_stop</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a6039239ef87b3161264e6892b5a06c05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_keyval</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a3f6934a2038a9dc3345a5820afaf6f51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_keycode</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ab138f12a5e8c7ba425eeaf762025fd49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>get_consumed_modifiers</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ad5f0c4e041e92bac40c8a72b2da80b2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_layout</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a9780cf661764a6af4fa720e42fde6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_level</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>af504e6e2fa961e1191bcf6b6cb1785ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_modifier</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a0bc0b9b65486a091e5814f529e79c253</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_in</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a73e8b8e173645c538879c10c47ff71c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_touch_emulating_pointer</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aca21bb92afb3adea54a20349957cee9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CrossingMode</type>
      <name>get_crossing_mode</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ac83103e7946e2f9fa1cc562a665a3e2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NotifyType</type>
      <name>get_crossing_detail</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a10530a2c4b350bb4b774ddd492a018f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_crossing_focus</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a3371fb0d08f598b10b00b6ad51b97390</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TouchpadGesturePhase</type>
      <name>get_touchpad_gesture_phase</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a73f074eb68a50673a3919bfc9c9c4db0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_touchpad_n_fingers</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aa867cc6a85b909e570f53669234f0138</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_touchpad_deltas</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a407eaac4880bce9c1dd6462c47f599ee</anchor>
      <arglist>(double &amp;dx, double &amp;dy) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_touchpad_pinch_angle_delta</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a3483b57d6dc70170fd3a3c62232f9b23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_touchpad_pinch_scale</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a49ef40bc1edded25d2963b96f5404a73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_pad_button</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a5d51acd65c60fff35ac125cc71f51b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_pad_axis_value</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ac8d285095e12214fa50d199e24d85ea8</anchor>
      <arglist>(guint &amp;index, double &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_pad_group_mode</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a7069db25328ed80638259c6ef8d0badb</anchor>
      <arglist>(guint &amp;group, guint &amp;mode) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Drop &gt;</type>
      <name>get_dnd_drop</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a6bf10476d243e19fa7c4727e60a0c916</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Drop &gt;</type>
      <name>get_dnd_drop</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a9f5338ec189a484cf5d50759f60bc77e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_grab_broken_grab_surface</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aeffa62cbdb60962f5c96e02e81f675cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_grab_broken_grab_surface</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a1b2b73a938212305133db03adc6676ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_grab_broken_implicit</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a99f710d264e92dcfebd732417ff062de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TimeCoord &gt;</type>
      <name>get_history</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ab1bd88902f94c50703f0801426aec38c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>triggers_context_menu</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a254f6525076a4e131a3c0e1f38871ad6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_distance</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a67a5fb62e9b4f76d4a61cfc5ab305a37</anchor>
      <arglist>(const Glib::RefPtr&lt; const Event &gt; &amp;event2, double &amp;distance) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_angle</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a8891f25b03e2485ef3c819eb9c7071c8</anchor>
      <arglist>(const Glib::RefPtr&lt; const Event &gt; &amp;event2, double &amp;angle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_center</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a67369b8b0d2c0e1d1ccf3f7732517173</anchor>
      <arglist>(const Glib::RefPtr&lt; const Event &gt; &amp;event2, double &amp;x, double &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>KeyMatch</type>
      <name>matches</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a63c87c86be9c2341f935f41516782855</anchor>
      <arglist>(guint keyval, ModifierType modifiers) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_match</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a7da4ab1f2e28ae7c61c3a4bb4e2e3ef9</anchor>
      <arglist>(guint &amp;keyval, ModifierType &amp;modifiers) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aceb9eadf39ccaf4c50a9a2d0adb055d2</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Event &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a078fcc9f5f1301fe381b0a2e77095518</anchor>
      <arglist>(GdkEvent *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::FrameClock</name>
    <filename>classGdk_1_1FrameClock.html</filename>
    <base>Glib::Object</base>
    <member kind="enumeration">
      <type></type>
      <name>Phase</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga125818db4a47441cbff5d7ac1e6b32ae</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aeab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aea8cb52f673f8ad1fcf65083766dc5cdd0">FLUSH_EVENTS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aeaf4db3526368e9c4c5d7662a2ddf1ed3e">BEFORE_PAINT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aea15a8022d0ed9cd9c2a2e756822703eb4">UPDATE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aea2a279a31181940fb63fec9ac5bee340c">LAYOUT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aeaa89a8fd9820d4256f0b101626b40e6a7">PAINT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aea93db2371537409185b622a85d119e56b">RESUME_EVENTS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aeaaee3032279aba6a19340553059876d64">AFTER_PAINT</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>FrameClock</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a878eab863e01cea2ca355fe5d92f9dd2</anchor>
      <arglist>(FrameClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FrameClock &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a775b6985ac530d746efd79ce73989918</anchor>
      <arglist>(FrameClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FrameClock</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a9dde8589ba6df2a4f070c9e72f8f59f9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkFrameClock *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a98616130a67192e9b80faffe12ae9527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkFrameClock *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a89b64159cbdf2e5c6b55ea7255b9afd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkFrameClock *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a4eb716a9cf947b703e4e870fbcb63527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_frame_time</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ae7b2370d455459a18247c241be9d056c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_phase</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ae03cd92bfe720a151910529b3a40980e</anchor>
      <arglist>(Phase phase)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_updating</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ac8de211e1e1921683eafc64e8a2eaa48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_updating</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a7bb3338b17a7b2c6abb6ecef99bd9967</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_frame_counter</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a88189849bd01d3d3dbf11b2a675df71f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_history_start</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a5f20e0fd36874e1055b3b54d5b2b4cfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; FrameTimings &gt;</type>
      <name>get_timings</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>adba4b1b47b6a4595e6ca74b6bca7713a</anchor>
      <arglist>(gint64 frame_counter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const FrameTimings &gt;</type>
      <name>get_timings</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>aa7767a79aa6f16bfb3e3f4a106b66529</anchor>
      <arglist>(gint64 frame_counter) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; FrameTimings &gt;</type>
      <name>get_current_timings</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a187f6f6838c4170d80ecebfe17e70f28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const FrameTimings &gt;</type>
      <name>get_current_timings</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a4684784b8887af58fb0a100e4b54e555</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_refresh_info</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a3288c8c8f6ead2ede1743670088bc7e2</anchor>
      <arglist>(gint64 base_time, gint64 &amp;refresh_interval_return, gint64 &amp;presentation_time_return) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_fps</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ac0400e80bc3d7d871bfd979721481316</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_update</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ac0eaf1bcd1c4e89162ff6a30dd1af0f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_layout</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a81539e5aa17d9021dc63af2e3f8dd138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_paint</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a5d87af1d4125ebdbf03e7dddb3ff7e58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ae478f37dbc97171c6420920c71b41344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::FrameClock &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a96b9e47a44f74b1c7a65b250aed35542</anchor>
      <arglist>(GdkFrameClock *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::FrameTimings</name>
    <filename>classGdk_1_1FrameTimings.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>ad8ee75c0e3426d522c6094977ac385ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>afb5b0f500e3498a16e24e66a829c59a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkFrameTimings *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a9d97138c17d60b81ba22827434f164ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkFrameTimings *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a7f106104a893055e316f593ac7147bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkFrameTimings *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a1bb04f71cd62012ca26cfbeb24007812</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FrameTimings</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a1084773c7995e14fbcafab3b287ab92c</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FrameTimings</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a6403ed1ac16dd0bc80d1dccf260c94dd</anchor>
      <arglist>(const FrameTimings &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FrameTimings &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a6570501a0e5bb95321d7429c34641fd7</anchor>
      <arglist>(const FrameTimings &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_frame_counter</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a553ae16c9885b698a00ac411e731546b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_complete</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>ae575a665626801539e06e2a80f30e200</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_frame_time</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a057e38fa5784fedcde9ddeb547a4f0ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_presentation_time</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a56857e33abe07106bbb709d861057f98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_refresh_interval</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a88f021d73f6d78fd5de217763f303542</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_predicted_presentation_time</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>aa120db857cd3112f425a3408bca97435</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a5ccc72613776c43a4b631d60b7f20848</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::FrameTimings &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>ad1678a1cc0ccadcfde73661d7e04defe</anchor>
      <arglist>(GdkFrameTimings *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::GLContext</name>
    <filename>classGdk_1_1GLContext.html</filename>
    <base>Gdk::DrawContext</base>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a9e9e358eeae4c655dd1f3941c63a8fa6</anchor>
      <arglist>(GLContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a6a29deb062ccbb56318335dfe497e337</anchor>
      <arglist>(GLContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GLContext</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a53c4d2be805fe96e93ee2d56ffbfe4de</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkGLContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a1b68f4768b95eead91818aada3002338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkGLContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a4f706962d481db794e508a653851928b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkGLContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a6bc3e23ffe1e17c0c028fa9cde5a2bc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ace74dbb1713bb91c2cf4cc59956f270a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a3c24e2640c932649facd183ade6d6059</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a52f1459caabfa29b731d63620c73753a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a3e7acae91f5ef680c3548cc4552ac8ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; GLContext &gt;</type>
      <name>get_shared_context</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aa27d122e3afca6c31a526c01ce382b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const GLContext &gt;</type>
      <name>get_shared_context</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a18a2bc77fde929c345293b7467988dbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_version</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ac964f0383874ca15d1ba2e0c0db2809d</anchor>
      <arglist>(int &amp;major, int &amp;minor) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_legacy</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a96ec2f74f126421aa29be56ae9f4001d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_shared</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a547f6439134397468b59f4a9bd4f0959</anchor>
      <arglist>(const Glib::RefPtr&lt; const GLContext &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_required_version</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aabee7fb0b979725edf1ae65adf83bcef</anchor>
      <arglist>(int &amp;major, int &amp;minor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_required_version</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aaff54e69a94c9d3a96205310dfe97301</anchor>
      <arglist>(int major, int minor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_debug_enabled</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>af3215cd8d34becb8e4f2fb883c838cfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_debug_enabled</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a6d8dbc3f6a28fdae24948a221e558253</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_forward_compatible</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a07932cf6dc2a3595a180affc65ceea65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_forward_compatible</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>abac1723daeb06a2e7877c2e2de475bb1</anchor>
      <arglist>(bool compatible=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allowed_apis</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>afa551c7da01ad3a1799afe011e94a862</anchor>
      <arglist>(GLAPI apis)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>get_allowed_apis</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a728b80a93d63b497889bcbc8b485df39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>get_api</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a962595ff21585c893d3f80e8b2351479</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allowed_apis</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a7773df19a91808a0ac0db3754543415d</anchor>
      <arglist>(GLApi apis)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>get_allowed_apis2</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a6bdef94d77f052fd81bb704ae99cf54f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>get_api2</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a00486ac68f374fc6936c1571097b16ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_es</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aaeaaee7a42aa4efede8bf1938dfca8bc</anchor>
      <arglist>(bool use_es=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_use_es</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a20004ca7638cbbd1221b0fa1a8433e2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_es</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a36ca8ec6e3009bf8cc670bade1d70e00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>realize</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a436a1f34ae0e1e0f3dd1b5d7b1c3da46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_current</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ae8d0dfddc44e5b48ece1534b8a1a4e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; GLContext &gt; &gt;</type>
      <name>property_shared_context</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a5d56c75745b5c5c6c0181fb36bd25418</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; GLAPI &gt;</type>
      <name>property_allowed_apis</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a7cffc34935c60c3c498ecb79f6376fe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GLAPI &gt;</type>
      <name>property_allowed_apis</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aae46f0dd4c3d73bca1bb9dde86cdd8d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GLAPI &gt;</type>
      <name>property_api</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a4f8e598dc9394ef7b7e01bca4b01da18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a436f5edab9973f964f81f30dd041ddb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GLContext &gt;</type>
      <name>get_current</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ad30b00c25f995de29b2aee4ab1f27380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clear_current</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a767e4d190329a0ad78d9e0570e7ce9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a0d55396de934d6da23d7b15c09b6a6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::GLContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>abaa009f166b755ff080fdf5e5d6b2b18</anchor>
      <arglist>(GdkGLContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::GLError</name>
    <filename>classGdk_1_1GLError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_AVAILABLE</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657aa6c5f0a14f1e71c85dafdba0b3828d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_FORMAT</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a1690d9863f562bce14aab6c7bbd5a6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_PROFILE</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a9b0db9b80bdbb3adda1e724880e18f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPILATION_FAILED</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a3da4647b241d2a18f23cf7d9f92d09c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINK_FAILED</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a35aadb5ca11b47443e40d2b6d80491d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_AVAILABLE</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657aa6c5f0a14f1e71c85dafdba0b3828d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_FORMAT</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a1690d9863f562bce14aab6c7bbd5a6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_PROFILE</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a9b0db9b80bdbb3adda1e724880e18f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPILATION_FAILED</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a3da4647b241d2a18f23cf7d9f92d09c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINK_FAILED</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a35aadb5ca11b47443e40d2b6d80491d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLError</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>af704b04471dd969a97249cc440e16039</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLError</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>aaca6ad5d1cca8ec9aa2eed8251fb10a3</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>ac3be92c07eb5a0bde1b5a2ab07b68f8d</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::GLTexture</name>
    <filename>classGdk_1_1GLTexture.html</filename>
    <base>Gdk::Texture</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void()&gt;</type>
      <name>SlotGLReleased</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>a4cec50289b782a3470127ad78b5f3576</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLTexture</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>a96a748f1a8dc0ae8bf4f80502656429e</anchor>
      <arglist>(GLTexture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>a5dd6dc9bd7baedf3c2b633bf14eebbbb</anchor>
      <arglist>(GLTexture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GLTexture</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>a28af63a5cc281bfc2afc822d3e988bff</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkGLTexture *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>a892af1cef2254ec07617f9343a02fee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkGLTexture *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>ae5ac5584b2a3c0f85d8ba85a29508088</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkGLTexture *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>ad516ef25c9b04992d48fce102172b035</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>a92c1b2fe25b8bff84f9facc4052a7d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>a56c996649e8ad5dea9385bf505ada6c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Texture &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>ae9c27535d6e21cfcb321ae7e8539557c</anchor>
      <arglist>(const Glib::RefPtr&lt; GLContext &gt; &amp;context, guint id, int width, int height, const SlotGLReleased &amp;slot={})</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GLTexture</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>aaa928e246d0efd199b3e6cca69708d6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::GLTexture &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1GLTexture.html</anchorfile>
      <anchor>a977322b7f0f1ab2bc00163a1da648830</anchor>
      <arglist>(GdkGLTexture *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::MemoryTexture</name>
    <filename>classGdk_1_1MemoryTexture.html</filename>
    <base>Gdk::Texture</base>
    <member kind="enumeration">
      <type></type>
      <name>Format</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2505519670fd58d1214795f274b88b37</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a914156aad2dde2b1ec524926d9f53441">B8G8R8A8_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ab632c05a37824780d26ab99f86d193f3">A8R8G8B8_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a16a874a0151982ff1e3abb40b64aff96">R8G8B8A8_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ae215e7db2047be52fc29ac055c67dcc1">B8G8R8A8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37aca88c661141ffa0559f581536bd1da14">A8R8G8B8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a18787043100457c689d4fd80e956472c">R8G8B8A8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37adcbae61e336fdea6cb2525f86eba299c">A8B8G8R8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a11c8bb0f10ad92e8ffe73f7562091cde">R8G8B8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37aae081b4c5637222803ebd851bb41b061">B8G8R8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ae518bff54f9bc2b4e4cdd4d498adc32e">R16G16B16</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37aec0557c724630af51601b6b9553a1f19">R16G16B16A16_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a7ddfaad28210b8515486eed653011613">R16G16B16A16</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a420c8ad2ed26c21719e5889928c0622c">R16G16B16_FLOAT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a4194f91b1405c776c29e9161b488ed5d">R16G16B16A16_FLOAT_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a8877c88854b09a122f3533a4de543629">R16G16B16A16_FLOAT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ad05d603c5884ae9ccc392513becba305">R32G32B32_FLOAT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ad80ed99e3a91f8bdae117080e54ed6b4">R32G32B32A32_FLOAT_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a82bb90f92345314d9299d3e77d87f259">R32G32B32A32_FLOAT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a154624ce7115582b5ef99fc299a98ea9">N_FORMATS</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>MemoryTexture</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>ab39b0703e513b8c94eabb38e7e50f85a</anchor>
      <arglist>(MemoryTexture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MemoryTexture &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>ae9db4a7681a89950a090c680b10ca35d</anchor>
      <arglist>(MemoryTexture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MemoryTexture</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>afb888a9be8d98adfd4080f5510f1f453</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkMemoryTexture *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>abcc5c7fce4c18775fd9ba6573ed4666d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkMemoryTexture *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>a2a4481c78981931c5d1d1fefcc141eea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkMemoryTexture *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>ac7f2a80bb82cf6f6c341700e9e80a40d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>abb349d665bdb91f29a5a60469f5dafd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Texture &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>ac652f50511608a4cb91995b47df1b8a1</anchor>
      <arglist>(int width, int height, Format format, const Glib::RefPtr&lt; const Glib::Bytes &gt; &amp;bytes, gsize stride)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Format</type>
      <name>DEFAULT_FORMAT</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>a179a7b799f098b3e154c5eeef648ea60</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MemoryTexture</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>a5973147bafe5c10597ce0b681c637a05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::MemoryTexture &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1MemoryTexture.html</anchorfile>
      <anchor>af6b178789b0b4658258741134f93ebb9</anchor>
      <arglist>(GdkMemoryTexture *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Monitor</name>
    <filename>classGdk_1_1Monitor.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Monitor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a9dd0fb29505009bc526d4b2679b1eaf2</anchor>
      <arglist>(Monitor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Monitor &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>ad41b944a45af24b189539ee71195c7dd</anchor>
      <arglist>(Monitor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Monitor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>aa535486ac5d460786ff857717ba99698</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkMonitor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a5231d7e777d4c5398c335418f2a15533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkMonitor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a70a8ff886d237217d9bc22ba1085c053</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkMonitor *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a97d52173e17c89b36303ff66cb5f6e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a22c307d45ae8afcb876ae65f9267f6a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>aa4f1c94fe12f874aaf2e9202aa807f79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_geometry</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>ada2b5aa39bc117b152a69ea9ff43e905</anchor>
      <arglist>(Rectangle &amp;geometry) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width_mm</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a52f0ef8aed5996ec16227fd21f6a962a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height_mm</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>ad27eba28e879e351f6d166bea97925ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_manufacturer</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a71bee90204b66105d450c1732b24a311</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_model</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a31bafd5deb88d72a9c81e87d82d03f5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_connector</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a91fe36d228840a34d93e84254fd9c538</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_scale_factor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a7baaf0c1596492a4fd9cdeb40ed5dd0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_refresh_rate</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>acf69ea5e78456c456e3813da99055737</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SubpixelLayout</type>
      <name>get_subpixel_layout</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>af47c302b26c7a3b4846d8b8f64507511</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>afe4e8966a40eb04c869d8f9c62d60138</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_invalidate</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a6493208f5c6d7b425dd0a2e2bc8888ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a75786e694b694494636c98ea7dd55973</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_manufacturer</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a8e97fd4e58236bdd8753bbb2cbb759b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_model</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a9bb3606278a67ae3387f3e020d3d84a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_connector</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a8558cb1fab699c1e3067b6333aae2eba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_scale_factor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a454a5d22cbaae4c144e00908df7b1399</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Rectangle &gt;</type>
      <name>property_geometry</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>accd518fe9e9d69e4e6e3f7f7f276cc70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_mm</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>aca2e188fd17cbded978dffc5c13e2193</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height_mm</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a05c21ecc559ebb4f0c47669c4893a4f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_refresh_rate</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>ae42be0d5d01d5758ccfdd0004e709680</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SubpixelLayout &gt;</type>
      <name>property_subpixel_layout</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>aff3ce7df33f763039993e8b63b11a8bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_valid</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a2070aa27fb5c93d351defdfa170073a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a820f6b61af25c2a9b1bbffeca08a12c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Monitor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a8eecedd95aaae18b2eeff2fb6bef3929</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Monitor &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a532de1e0f37bdcd042d3354b6ad25c83</anchor>
      <arglist>(GdkMonitor *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Paintable</name>
    <filename>classGdk_1_1Paintable.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga55708df3e7ed5e1456f9d975884cd4fd</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga55708df3e7ed5e1456f9d975884cd4fda9238f80dd89170c64c3c89a4acc918f5">STATIC_SIZE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga55708df3e7ed5e1456f9d975884cd4fda216d32c720a13b90d7ab9b54ab4594d8">STATIC_CONTENTS</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Paintable</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a4803fa7fdfaf9a943eb508b42a9d9631</anchor>
      <arglist>(Paintable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Paintable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a11114850bbb206b5a8d5f7221618b2b5</anchor>
      <arglist>(Paintable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Paintable</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a21b2e3d7b96fdf471d2ff4e67b79de7c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPaintable *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>ab8976d5c0872db33f2b9cef5cdad9754</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPaintable *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a00f7761b9ac0ff6b7793b0d6b7d44847</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapshot</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>ac89e1bd5b7131439bb64fc9d7e9e7097</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Snapshot &gt; &amp;snapshot, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Paintable &gt;</type>
      <name>get_current_image</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a537cc37220b7a7706b901e69c5051133</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>get_flags</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a5a994c05059fc504e81cd9fe676dcc3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_intrinsic_width</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a693dbed82ae4e6d6d413c4259ee4373d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_intrinsic_height</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>ad9a1c0e343f60d90b0b4496b9ddb02a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_intrinsic_aspect_ratio</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a9bbeb265f523d3d2d32455e9f6d6c696</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_concrete_size</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>aa37fb8267439cc65501d304387a33823</anchor>
      <arglist>(double specified_width, double specified_height, double default_width, double default_height, double &amp;concrete_width, double &amp;concrete_height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_contents</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>ada7b3935b20919cc9a322dd4c7775852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_size</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a1b57e205e1025a0dd0cf4e0406536a36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_invalidate_contents</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a812167153b7a15e9e9470b243550b7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_invalidate_size</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>af18932c0528584eb8338fd1c74788aa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a304f3f81a59e8e9a0145d7bd63b225fd</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a71a7ecbd7cb7ed02d4c81b832d011c10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Paintable</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a3baff0bd13d8f0721df0f4f25c174a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>snapshot_vfunc</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a0b49fe027be1facbc438ffe1d7113c1e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Snapshot &gt; &amp;snapshot, double width, double height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Paintable &gt;</type>
      <name>get_current_image_vfunc</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a07b9d2f08b677e7549cb4f291028d27a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Flags</type>
      <name>get_flags_vfunc</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a7d4ed7e5306979b109f2e4ec5f3dd121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>get_intrinsic_width_vfunc</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a6b8300a94c96d9152df9847ca91c4d77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>get_intrinsic_height_vfunc</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>aea4d5d0fd67cc9f180455d4dd0833c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>get_intrinsic_aspect_ratio_vfunc</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a4baf7f9435492e7227a41b7c6572c116</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Paintable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Paintable.html</anchorfile>
      <anchor>a63ac674ec6d9eeb2b78d8e067fb40e36</anchor>
      <arglist>(GdkPaintable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Pixbuf</name>
    <filename>classGdk_1_1Pixbuf.html</filename>
    <base>Glib::Object</base>
    <base>Gio::Icon</base>
    <base>Gio::LoadableIcon</base>
    <member kind="enumeration">
      <type></type>
      <name>Rotation</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7897684c9ab27bd9f71b03ffee002f3e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga7897684c9ab27bd9f71b03ffee002f3eab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga7897684c9ab27bd9f71b03ffee002f3eab437c6ed212434e8984c403374fe494c">COUNTERCLOCKWISE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga7897684c9ab27bd9f71b03ffee002f3ea192dbfc5bfa68184fd40e1587ad89c7e">UPSIDEDOWN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga7897684c9ab27bd9f71b03ffee002f3eacfe39a5621dfe382d2991f32c4ae08da">CLOCKWISE</enumvalue>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const guint8 *)&gt;</type>
      <name>SlotDestroyData</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a7725e0453cd231935d7978fb7240c076</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a52b21528ec115d65475a2ea604261d51</anchor>
      <arglist>(Pixbuf &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Pixbuf &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a69554f490192e2adde55d0198ad42ce9</anchor>
      <arglist>(Pixbuf &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a79aa33fa1854d1a3ae653161e1b7924a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbuf *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a13edc3418dd409e931ed8f83b93b4cdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbuf *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8e713cc541754446a09273caaa45dde7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbuf *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ab339b9473c5d4f2eb646dc94d1606f40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>copy</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a9b0011e4ea383f4af9d953c4e7f0aacf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Colorspace</type>
      <name>get_colorspace</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>af9022c07472d1667d480b40c0a361be6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_channels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8ea4156409bf041577a39f1249bf0bf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_alpha</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>adf46449c46ca47aa28bdaaa275747f8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bits_per_sample</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aca004cab90658ff881ff9394941d8a7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint8 *</type>
      <name>get_pixels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a20f9a474ee76e095a1e29d602d7521b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const guint8 *</type>
      <name>get_pixels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad1d6df636bf474e751373e5de0f93618</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint8 *</type>
      <name>get_pixels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a07813fa546e24de958c0162c4035b784</anchor>
      <arglist>(guint &amp;length)</arglist>
    </member>
    <member kind="function">
      <type>const guint8 *</type>
      <name>get_pixels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a37d98e645e2e6903b47bb7bc803caec2</anchor>
      <arglist>(guint &amp;length) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a4914a7ba511090fe2848469239480a27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a34a98cf46254b96cfc5753d783027698</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_rowstride</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a47567d8b8c1f9004939a3db73502bfab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_byte_length</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a147e87eb5db76bb6d4711bb34f02d6c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a15afdfdd5d5d75b0b692f987e74cbae4</anchor>
      <arglist>(guint32 pixel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a63f18adec81ac9882986088f542b6147</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a4f145dfb3ac0951225c9cffca3d02225</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;type, const std::vector&lt; Glib::ustring &gt; &amp;option_keys, const std::vector&lt; Glib::ustring &gt; &amp;option_values) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_buffer</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae6fa8e3fccb4ab6809456f046c91a98e</anchor>
      <arglist>(gchar *&amp;buffer, gsize &amp;buffer_size, const Glib::ustring &amp;type=&quot;png&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_buffer</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae8e7d3d28caeda35a52b3fc6e4719099</anchor>
      <arglist>(gchar *&amp;buffer, gsize &amp;buffer_size, const Glib::ustring &amp;type, const std::vector&lt; Glib::ustring &gt; &amp;option_keys, const std::vector&lt; Glib::ustring &gt; &amp;option_values) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>add_alpha</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad8fd5419cc7fbe6545e2d11717c2654b</anchor>
      <arglist>(bool substitute_color, guint8 r, guint8 g, guint8 b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_area</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8a2d4d7cfeed5adace2f397e1b28c3a4</anchor>
      <arglist>(int src_x, int src_y, int width, int height, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest_pixbuf, int dest_x, int dest_y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saturate_and_pixelate</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a37d60f8ef672fd4ba311f1060ca58f22</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest, float saturation, bool pixelate) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a461856fc39274d19e4bf0ceb6b28e3ec</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, InterpType interp_type) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>composite</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae72e529195cc23222180f4d589bc9217</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, InterpType interp_type, int overall_alpha) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>composite_color</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae14aa10f8a0472655e1cf59fb281479f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, InterpType interp_type, int overall_alpha, int check_x, int check_y, int check_size, guint32 color1, guint32 color2) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>scale_simple</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a6b81ae2867b3cf74a27d11eb2efa9ff1</anchor>
      <arglist>(int dest_width, int dest_height, InterpType interp_type) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>composite_color_simple</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a160c7564e15e97cbd1e81372c36b4479</anchor>
      <arglist>(int dest_width, int dest_height, InterpType interp_type, int overall_alpha, int check_size, guint32 color1, guint32 color2) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>rotate_simple</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a88a62f09bb4da616d0db9e4579da6b2a</anchor>
      <arglist>(Rotation angle) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>flip</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae35657879daa6da7ed3f74d21cf56e3c</anchor>
      <arglist>(bool horizontal=true) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_option</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aea7fb2cb7d215cdd5a058e8048641b39</anchor>
      <arglist>(const Glib::ustring &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_option</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aba414125fa2d70271e9331797f171f80</anchor>
      <arglist>(const Glib::ustring &amp;key, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_option</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8e130d8de14efc90f86e6929de326aa2</anchor>
      <arglist>(const Glib::ustring &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy_options</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a2f967764b01eb62098fa953835f311e9</anchor>
      <arglist>(const Glib::RefPtr&lt; Pixbuf &gt; &amp;dest_pixbuf) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>apply_embedded_orientation</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>af1808b7279e47d7df62748a54b16a2a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Colorspace &gt;</type>
      <name>property_colorspace</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>acce99ec58c5e199af4241175c4dbcadd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_n_channels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a2a4827247d93ff11df9f490b6fdab14a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_alpha</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a3ca9d3c5be31c8dae94cfe586391b760</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_bits_per_sample</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad47101a5949c25a49b9b00f17c377777</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a71435385e1e53a5d7da266cf530aa140</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a5a0921ee9a8ca4cb19f7b771e797cacf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_rowstride</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a80e1d58adfaf5751dab9792155be183b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; void * &gt;</type>
      <name>property_pixels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a04482001aacecc298ee55fa4c92b168d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a2db5672d540799a640706e7da87ffd72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a2cf65f435b4e3747d6e78fb8e09819cb</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;src, int src_x, int src_y, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8c635f730b93c774c35a32e4338fda9f</anchor>
      <arglist>(Colorspace colorspace, bool has_alpha, int bits_per_sample, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_subpixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a35e610247014f8e2fe7969ff6c8da074</anchor>
      <arglist>(const Glib::RefPtr&lt; Pixbuf &gt; &amp;src_pixbuf, int src_x, int src_y, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a20d7a2a52dab246e4bb758ecba38e4ca</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a5000775e43142f3e764ba64236c95d47</anchor>
      <arglist>(const std::string &amp;filename, int width, int height, bool preserve_aspect_ratio=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aed492f5942ef53f12a20469ba72cecf4</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad932ebff2c5dd0892c92d64cc038b1c2</anchor>
      <arglist>(const std::string &amp;resource_path, int width, int height, bool preserve_aspect_ratio=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_data</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8a3b524f26acd2f9efc4abe9c294d341</anchor>
      <arglist>(const guint8 *data, Colorspace colorspace, bool has_alpha, int bits_per_sample, int width, int height, int rowstride)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_data</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a526129d481ff04e8953c18b0b12c4c55</anchor>
      <arglist>(const guint8 *data, Colorspace colorspace, bool has_alpha, int bits_per_sample, int width, int height, int rowstride, const SlotDestroyData &amp;destroy_slot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_xpm_data</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad00762020e4802e9bb0cbd7645a44032</anchor>
      <arglist>(const char *const *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_stream</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a1e29a1ac165b38764136eb26a9fd3c18</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_stream</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae757183c249a0e6d48b798482b0e3004</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_stream_at_scale</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a200f8adc8eb8903c09ded7c5685e5d7b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream, int width, int height, bool preserve_aspect_ratio, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_stream_at_scale</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a97aba56587ee9faa6ca358efcd1a9948</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream, int width, int height, bool preserve_aspect_ratio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; PixbufFormat &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a4469806e3c612bd9dd54641afc7ba1c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a9c0cdf8b381fcb1b9b181798f19b5dd2</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;src, int src_x, int src_y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a0688e4500d3b17ffcf12a93da257c312</anchor>
      <arglist>(GdkPixbuf *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufAnimation</name>
    <filename>classGdk_1_1PixbufAnimation.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PixbufAnimation</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>affda68c1f75c646e17d6bf4b00c7caa4</anchor>
      <arglist>(PixbufAnimation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixbufAnimation &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>aa86b4f518a1c5952e19ab0a6d7bbc008</anchor>
      <arglist>(PixbufAnimation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PixbufAnimation</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>af0aeed6c8bfe4882788637b8955d5d66</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufAnimation *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a2bd240996977822cb78fe557fc8c07f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbufAnimation *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a8130a4696ab6eb605798ca98ac273238</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufAnimation *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a4eba6a2ff85859cfc4171015861ffcbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a8c521a540c2f653fb558f150fb53ec6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a6e53cfab0c855353f5a9d1c755569f92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_static_image</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a881ce4656a75247deee9c6f598bb45b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>get_static_image</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a4efed6e73f1034242e787b454f485566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PixbufAnimationIter &gt;</type>
      <name>get_iter</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a34878aac92f91b8b6f62e867818cb91a</anchor>
      <arglist>(gint64 start_time=g_get_real_time())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a265bac68cda7306ca04c184a58270261</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufAnimation &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>aeb178f504b3a09a99b18443099684d0b</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufAnimation &gt;</type>
      <name>create_from_stream</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a3715dac0d29e1645f5406dffb38e5121</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>create_from_stream_async</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>ac126b0f8f3e7936f3aaac992973749d0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream, const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufAnimation &gt;</type>
      <name>create_from_stream_finish</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>acb308dd30d49b3bb77e22375d31a9396</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufAnimation &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a4a696e698d70a5de8f252d509925afdc</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufAnimation &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a2685688544b6da7582ab2eb2d4e51111</anchor>
      <arglist>(GdkPixbufAnimation *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufAnimationIter</name>
    <filename>classGdk_1_1PixbufAnimationIter.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PixbufAnimationIter</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a229a2e7585e709ce01d560d75a0848b6</anchor>
      <arglist>(PixbufAnimationIter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixbufAnimationIter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>aeb4b08d000e2e2c57d20f2ed3c1e01cb</anchor>
      <arglist>(PixbufAnimationIter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PixbufAnimationIter</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a73fcd4706530f2819ff6220c0072cf7b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufAnimationIter *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a5aac29041dd100a119b8aa703dbafe3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbufAnimationIter *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a2c29e1b0d94862aff9466fc9f4310953</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufAnimationIter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>ae2e23368fa026c6deeaacd4168074a44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_delay_time</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>aaffde7281a2de2ab0ee00bdc79a850e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a66d583297b87ac3f2b1424526afe962c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a0325f8c61851d9ac08fd6caae9fbc0b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>on_currently_loading_frame</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a4cd1a824c67019a6df7123ffd94836b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>advance</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a606f6ae28a2e172f07a529f0367f7049</anchor>
      <arglist>(gint64 current_time=g_get_real_time())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a31e2babdc64bd6bd10ee3c05178204f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufAnimationIter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a0c68bd7a2e248042af42c41d2aa11016</anchor>
      <arglist>(GdkPixbufAnimationIter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufError</name>
    <filename>classGdk_1_1PixbufError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORRUPT_IMAGE</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a8ee4bb924471ed440528905d97ab5c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSUFFICIENT_MEMORY</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833afc3853c0bb4343a7f01500a1d3667db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAD_OPTION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833abb31a5f2cebe695aced7bd48ad8669ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN_TYPE</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833aa8a68e071b921e214387642eb2873929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_OPERATION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833aae731d26b4d7379e223ca56c8462e07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a63eef36d9606b5b80dc748081f1a563e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_ANIMATION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a4613489e2f824e39c72d0b19b05b9181</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORRUPT_IMAGE</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a8ee4bb924471ed440528905d97ab5c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSUFFICIENT_MEMORY</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833afc3853c0bb4343a7f01500a1d3667db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAD_OPTION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833abb31a5f2cebe695aced7bd48ad8669ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN_TYPE</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833aa8a68e071b921e214387642eb2873929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_OPERATION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833aae731d26b4d7379e223ca56c8462e07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a63eef36d9606b5b80dc748081f1a563e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_ANIMATION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a4613489e2f824e39c72d0b19b05b9181</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufError</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>ab1f966ba0378e2253e56c268e87e50d7</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufError</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a04996cf35ac4f3b39a47795d618ec2c4</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a047e301b9f8f0d6282dc34f252140435</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufFormat</name>
    <filename>classGdk_1_1PixbufFormat.html</filename>
    <member kind="function">
      <type></type>
      <name>PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>affe69f159c677f39d534e4a7fc7b0565</anchor>
      <arglist>(GdkPixbufFormat *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a789c15bc347849baa3596d9e6c086af5</anchor>
      <arglist>(const PixbufFormat &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>PixbufFormat &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a0329767246dcb32c9deb1ce52d93eb7d</anchor>
      <arglist>(const PixbufFormat &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>abccd65afceb6a9acf006a3c516eccd4c</anchor>
      <arglist>(PixbufFormat &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixbufFormat &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a24abccbd469f8717fd71392956d3c44a</anchor>
      <arglist>(PixbufFormat &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a3f1f274ec13f6f0ce56334bf5371ffb5</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ac626e88abff7026670434dfa2ac5a025</anchor>
      <arglist>(PixbufFormat &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufFormat *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>af7c227a346029e1810a158621d83c041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbufFormat *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>aa9272591988f46d5001b167729360eef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufFormat *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a3ab50e8289cbd606054729e41196b0ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a3ede944d34e83194d621ce33df84c263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a42e1ecac32640c16e309b6481a0e0b2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ad464ae260d0b0ff4ae310a6ec76dc0a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_mime_types</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a24de0ac6534b0dbea7a45155ef53c7b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_extensions</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a87da766bc1bcac3cd89efc3fcf5e4f10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_save_option_supported</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a7fb32a3ce9bbf6e72272ec56dd531b3e</anchor>
      <arglist>(const Glib::ustring &amp;option_key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_writable</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a0130ea5582e08afa1b81b745b8df2150</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_scalable</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a6af809029542762053d410f462480acf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_disabled</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ae08c41e7d698f50cf33acb73a2640aa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_disabled</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a3f732791ce581721ebbcff8fd2ac2971</anchor>
      <arglist>(bool disabled=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_license</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ab31bfe31d1ffa6a9f59594089f518f42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a0a771b8747ea04bf6003f62a4348af55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkPixbufFormat *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a328714fac2d71be3d81c02b9fba8ea69</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a0b0944aec77c35dfe1eaf372e7a6b2fd</anchor>
      <arglist>(PixbufFormat &amp;lhs, PixbufFormat &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gdk::PixbufFormat</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ab5c5c21ce37bb09cfc9f30b830919e14</anchor>
      <arglist>(GdkPixbufFormat *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufLoader</name>
    <filename>classGdk_1_1PixbufLoader.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PixbufLoader</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>acfc3d4ce5b818556ee04e509a31b8f11</anchor>
      <arglist>(PixbufLoader &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixbufLoader &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>add207f0999051f15907b46fb978cefb5</anchor>
      <arglist>(PixbufLoader &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PixbufLoader</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a8cc86d90339f09335380efdcde51ec4b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufLoader *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a68a692fc8f18fac87659cb9ce4219df6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbufLoader *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a815ce842889fe717ecf5b794c81a69a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufLoader *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ab86dda7f88d82cf1374617ad978466c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a295cd5abb9e14975a6836f1bb568db58</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a90ce41040208597527cf2251631aad45</anchor>
      <arglist>(const guint8 *buf, gsize count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a9512407e3feac5405a6ac6e12ef23bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a4aa818981d7690da1fd23a10f5cde21a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufAnimation &gt;</type>
      <name>get_animation</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a9e69e076ec80ee35b0acaaf6824a3570</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PixbufFormat</type>
      <name>get_format</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a530e5a4ebb39640e268e7548fc45aae9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_area_prepared</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ace8937ccd985db8a355334dad59e70b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int, int, int, int)&gt;</type>
      <name>signal_area_updated</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ac722006357a0358c6150e72f24b04a31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_closed</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a61ca0b05b241426e631d78d3deb34c8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int, int)&gt;</type>
      <name>signal_size_prepared</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ad97dce6dc66990f6bd8bc377f796c9cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ab992c7f075ced8a0eb1a24b44da2d972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufLoader &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ae671a5fd6f63039b761f5d78475a3f92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufLoader &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a5d0a2be7c289b8b83e3ee9c8570b37ff</anchor>
      <arglist>(const Glib::ustring &amp;image_type, bool mime_type=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PixbufLoader</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a373c249cdae4df4563736169f68915f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PixbufLoader</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a8bb93227a052da0b9db5c51372a75351</anchor>
      <arglist>(const Glib::ustring &amp;image_type, bool mime_type=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_area_prepared</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a291dd42961d273faf6589f7400e30c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_area_updated</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a16df36c7bc304ff980973924133342e7</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_closed</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ade3595deb97cad8b7c569f9a66bfe03f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_size_prepared</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a8a53cb6a2d39a6cf97b80f5950136320</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufLoader &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ab9193291650c2cca2b9367be62217339</anchor>
      <arglist>(GdkPixbufLoader *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Popup</name>
    <filename>classGdk_1_1Popup.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Popup</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>aaf00a7fa2cdc392ba2ce55b9e1d1a3f5</anchor>
      <arglist>(Popup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Popup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>ad65b09d104aba380d2027c66c2966ef6</anchor>
      <arglist>(Popup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Popup</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>aee776055ae21427055c0e01621809da0</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPopup *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a7c3099807623c5f800673ac15667e141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPopup *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a497ccd169173603979b1206b19476a42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>present</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a98b7b5a45c0612571974b354310d17c1</anchor>
      <arglist>(int width, int height, const Glib::RefPtr&lt; PopupLayout &gt; &amp;layout)</arglist>
    </member>
    <member kind="function">
      <type>Gravity</type>
      <name>get_surface_anchor</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>aca3a727bab55d550450cef2084092f80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gravity</type>
      <name>get_rect_anchor</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a10f156b0e05adf9ae8b117644834b690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Surface &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a24888aa3332afc3db765c1c365d1f471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Surface &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>afc2ada993011ca3305f42dc86114938c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_position_x</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>ad0ed3137f6b211d736431f2e90f64642</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_position_y</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>ada980207c9c3bc1529b82821c123cf88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_autohide</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a6b2eda82c3e4d4144ee57a13b716b7df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Surface &gt; &gt;</type>
      <name>property_parent</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a084c6d4faf0877f7aab3454a7e0cde7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_autohide</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>af19916c52f06b5511ba773293dc5db68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a403a8eae1f9700ddc4bd91796e6ff669</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>a4a3eec847b19d38eea0ab945e58c57b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Popup</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>af8a62372b9bc716c0983e53fb7e24236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Popup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Popup.html</anchorfile>
      <anchor>ac536b965d5502db67a0f99ad6e7f07b5</anchor>
      <arglist>(GdkPopup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PopupLayout</name>
    <filename>classGdk_1_1PopupLayout.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a45d0f2e829a4536d871826bf8a7cf4cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a92d0ccc8dce376ad407ee133e0164382</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkPopupLayout *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>add6467437aea869b6c4778ba2389e57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPopupLayout *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a6e370af8bc285c270062032a53b8ad24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkPopupLayout *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a068e0a7d40d0e6245149bc1b7ecc99b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PopupLayout</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>aa755c997cb44455208b907a764cec4ca</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PopupLayout</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a5d28f06bbeadc78f866d63ef259d1f00</anchor>
      <arglist>(const PopupLayout &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PopupLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a80dcaac76f8800bff8272e718d9372a7</anchor>
      <arglist>(const PopupLayout &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PopupLayout &gt;</type>
      <name>copy</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>acb686b0a90f9cee02845032f102befc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>ac6bb6cde5076481f206b2158acee9494</anchor>
      <arglist>(const Glib::RefPtr&lt; const PopupLayout &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_anchor_rect</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a85b88ca2356f881cdd5bdc586e2fde41</anchor>
      <arglist>(const Rectangle &amp;anchor_rect)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>get_anchor_rect</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a95a34d141c70e83a9185fbae60788341</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rect_anchor</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>ad3776d21149de230d9f233b89132f1e4</anchor>
      <arglist>(Gravity anchor)</arglist>
    </member>
    <member kind="function">
      <type>Gravity</type>
      <name>get_rect_anchor</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a82b466596d6c715d1c4a263d861780c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_surface_anchor</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>ac6d6207ccba25246fa7702dab7048cee</anchor>
      <arglist>(Gravity anchor)</arglist>
    </member>
    <member kind="function">
      <type>Gravity</type>
      <name>get_surface_anchor</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a218ecfffc82532bb319bec10256e1295</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_anchor_hints</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>ac200bfddcd580b403b3f9e9128d7c8a6</anchor>
      <arglist>(AnchorHints anchor_hints)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>get_anchor_hints</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a9e287f3c97ce1b6bd69b131d2da9d9fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_offset</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a0132365cfcc94b5372d821e3b3e7cbad</anchor>
      <arglist>(int dx, int dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_offset</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a494f5bcf438bd89d21b7ed7e661824f9</anchor>
      <arglist>(int &amp;dx, int &amp;dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow_width</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>adac1229e0800462254637229820da90b</anchor>
      <arglist>(int left, int right, int top, int bottom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow_width</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a2565d26bb5585ed3fa21c873393a5c57</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_shadow_width</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>abfe46ae9353a38bb8ed3e83228952151</anchor>
      <arglist>(int &amp;left, int &amp;right, int &amp;top, int &amp;bottom) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PopupLayout &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a7985f0b0c0e3dc5a5b86d4e0e520b266</anchor>
      <arglist>(const Rectangle &amp;anchor_rect, Gravity rect_anchor, Gravity surface_anchor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>a83637f8bc745ec129c2e2178fc2f4151</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PopupLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PopupLayout.html</anchorfile>
      <anchor>af352343e393cd799f20584f66c571d0f</anchor>
      <arglist>(GdkPopupLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PopupSurfaceImpl</name>
    <filename>classGdk_1_1PopupSurfaceImpl.html</filename>
    <base>Gdk::Popup</base>
    <base>Gdk::Surface</base>
    <member kind="function">
      <type></type>
      <name>PopupSurfaceImpl</name>
      <anchorfile>classGdk_1_1PopupSurfaceImpl.html</anchorfile>
      <anchor>abcf72a8211bd712d7783b1b05a6a07fd</anchor>
      <arglist>(PopupSurfaceImpl &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PopupSurfaceImpl &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PopupSurfaceImpl.html</anchorfile>
      <anchor>a64fb9b2e7fe1d9dd8443999dc16c2f54</anchor>
      <arglist>(PopupSurfaceImpl &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PopupSurfaceImpl</name>
      <anchorfile>classGdk_1_1PopupSurfaceImpl.html</anchorfile>
      <anchor>a345aff218adaa7143068440d0b1847b7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Rectangle</name>
    <filename>classGdk_1_1Rectangle.html</filename>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a7e9e1877d21525d7ad19b1ac1222ee18</anchor>
      <arglist>(const Rectangle &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>af3c88badd0508cb920783b0372c692d5</anchor>
      <arglist>(const Rectangle &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ab4b9b3749802792dd7e4e6787cfdc40d</anchor>
      <arglist>(Rectangle &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aeda6b8a264f8d06f2abb508d551a7078</anchor>
      <arglist>(Rectangle &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a4355c251991e793a3d1223a570636a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a6a5cee08222e450ce0634133f0b2dcdc</anchor>
      <arglist>(const GdkRectangle *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GdkRectangle *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a523818baad192ae7116554867446a8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkRectangle *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a5c70faacebe1a188965008a6cc518399</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a4fc9fdc9c79bfb6e290630c91ed36796</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aa2a5dfa0b5bc5baed7d405c8454baed9</anchor>
      <arglist>(const Rectangle &amp;src) const</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>join</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aa3482aa592511793902d1eedcb854ba7</anchor>
      <arglist>(const Rectangle &amp;src2)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>intersect</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>af7188c817c550890323012e543a96594</anchor>
      <arglist>(const Rectangle &amp;src2)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>intersect</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a0de9fe1fd7955800242844a35eb3cf5f</anchor>
      <arglist>(const Rectangle &amp;src2, bool &amp;rectangles_intersect)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a08bd09accee8cc26f8e8d2634e3c851a</anchor>
      <arglist>(const Rectangle &amp;src2) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_zero_area</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a31db08afef90495a9f76b98e2615e8b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains_point</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a0a32deacd5661321677845df8ba59b7e</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_x</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a731617a697e59482af6f0a2507bde610</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ab4cdda52ab2748841ee867406a80e3bb</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_y</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a6efc35f695e15d87ea3b32c268c8eb84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_y</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ac001c280afb816507db7ee1448b51ff4</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a5c8cce789f96930a0e0b51ac285c4164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a4ee72346a08bf546dc0763f19f6f713b</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a9c62c98d2823e45d0698c39afa59224d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_height</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a0fe5422ce2c1cdef0e54802390bb6d63</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aff96bb222b0aa56f34006dbc61e35068</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkRectangle</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>afdbfa8f303faffbb217db17de152eda7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>join</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aadf7d3c02a3817ab4d656dd4055190ca</anchor>
      <arglist>(const Rectangle &amp;src1, const Rectangle &amp;src2)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>intersect</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a291ca74c1aa0f0e32845c53fd945b232</anchor>
      <arglist>(const Rectangle &amp;src1, const Rectangle &amp;src2)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>intersect</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ae99fb9c8d4e5c4bbe48ab96f6062e816</anchor>
      <arglist>(const Rectangle &amp;src1, const Rectangle &amp;src2, bool &amp;rectangles_intersect)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Rectangle &amp;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ade8b8c02001ee3d868068c10743a13dc</anchor>
      <arglist>(GdkRectangle *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gdk::Rectangle &amp;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>abdb81cb65b494d2e4a50888a1e29f64b</anchor>
      <arglist>(const GdkRectangle *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::RGBA</name>
    <filename>classGdk_1_1RGBA.html</filename>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a2115e798cad936178eb2881c1f5aae63</anchor>
      <arglist>(GdkRGBA *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a387617df9015b6ae4a64fead6e82c620</anchor>
      <arglist>(const RGBA &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RGBA &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a0183f5ab571f2b280a5a1d653ceee49a</anchor>
      <arglist>(const RGBA &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5a18b4f2256a941ac597a8dd899ab8b5</anchor>
      <arglist>(RGBA &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RGBA &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5d17f602d848d0ca91ae2b621270df71</anchor>
      <arglist>(RGBA &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a78d12d74a3977de79b59ef01b8ccd7eb</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5022e4b777cb94d8e0431ab537c18875</anchor>
      <arglist>(RGBA &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GdkRGBA *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a641a928b6fae31357413a4d7f62b8f0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkRGBA *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a923de48d7a2d74b39032a1f81b87d340</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkRGBA *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a7f4a5ce75b1f9847549c00f92385f509</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a225c4a2932fb62f58043836735d0c577</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>af8571dcfabcee0090ac9f0bc8fc7c1f7</anchor>
      <arglist>(const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a01b4f772a02914444f10827b5a5c18f5</anchor>
      <arglist>(float red_, float green_, float blue_, float alpha_=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grey_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>af847ac1842ada91dff450e587f4e14bc</anchor>
      <arglist>(gushort value, gushort alpha=65535)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grey</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a66e2bb3062f196567a845d2f95c4cd12</anchor>
      <arglist>(float g, float alpha=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgba_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a316020bdba50565eec26e20662cf707d</anchor>
      <arglist>(gushort red_, gushort green_, gushort blue_, gushort alpha_=65535)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgba</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a7ff655694057f532aac3f62c4beef69d</anchor>
      <arglist>(float red_, float green_, float blue_, float alpha_=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hsv</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5edbe3f82e186b063bad8a8bb2835c78</anchor>
      <arglist>(float h, float s, float v, float alpha=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hsl</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a473e9d1c823bfe21b99f099be9cb2665</anchor>
      <arglist>(float h, float s, float l, float alpha=1.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a8a75cacaf30f5db4252d43ad00bce735</anchor>
      <arglist>(const Glib::ustring &amp;spec)</arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_red_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ac72e929c1727769b9cb787fabb082b52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_green_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ae80447d17e55f4db3cf373c3e42357b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_blue_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a951fe93bffa10108d25b9c7454dd5804</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_alpha_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>af82c2a3adda7fbb32a5f4bc14bff0b18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_red_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ae713444b58bd84d0c5eda398ac2dc869</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_green_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a89ce3ec51b21c76d307c06d922e7fb0c</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_blue_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aa238998dd7638240e8178d4d7c5faf1c</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alpha_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5eb1bb08e62b5abe4a0ad00dee254b92</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_red</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aa4a43194855fb54b90150fcc5aa4ce91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_green</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a8a2ddf6025c35281df4e4bce4c76a186</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_blue</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a3e2040d70311e0c2d0b92d8c6a61c3a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_alpha</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aef017e0e0422ad5c90e700659a6c417f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_red</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aae9fbef600be8820fbe95e46ecc82ae8</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_green</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a1bf11478ab115afe421a5510097b55f3</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_blue</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5c871514e5e6279b3a00ed8f0488f1ca</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alpha</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a7065f22a89dabe2bcfb3a7a2e8fce99b</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aaad00eef7ed2a7e3b5c0f49c957c7306</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_clear</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ab3765b8c9a39b54f922fe3b94a0b4597</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_opaque</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a05fa322b38b053a7d95213b5d1fb3fd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a0685ce57286ea3f72712198505427a17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkRGBA *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a4d0cd0765f7a9ba4a8d491e424fe4a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a664191a133d17b5cf49621203faf49a2</anchor>
      <arglist>(const RGBA &amp;lhs, const RGBA &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a4dede59ab7d7b336f22fde3724286b66</anchor>
      <arglist>(const RGBA &amp;lhs, const RGBA &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a7603c42d6861082abff42f27f9f666d0</anchor>
      <arglist>(RGBA &amp;lhs, RGBA &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a54eb086546a60f78bbc595b8b5c07ac4</anchor>
      <arglist>(GdkRGBA *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Seat</name>
    <filename>classGdk_1_1Seat.html</filename>
    <base>Glib::Object</base>
    <member kind="enumeration">
      <type></type>
      <name>Capabilities</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf0c363f57b016b94f165a85bfb5117fd</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdaa5f41c79d3f86121f0f658eba49128d5">POINTER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fda2b40a1ea27beb450618885ec87f0ee15">TOUCH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdab14e30776b1ee1510c1b48b6be25932f">TABLET_STYLUS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdaedda266cdb6345b9f6914cc2e7577475">KEYBOARD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fda824aebf2c6d32530c206fc0c38c5db06">TABLET_PAD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdae6ddd62144f3dc3b1add7843f1316e0c">ALL_POINTING</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fda5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Seat</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>aa062464e3bbe7993f099ccb30ae1168f</anchor>
      <arglist>(Seat &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Seat &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a489a7ed2d3f407c6a609ddc02729e4c1</anchor>
      <arglist>(Seat &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Seat</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a6f26d7604ba2d2e98ee5d00984676514</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkSeat *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a644bab54313c45918ad0c934aee519a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkSeat *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a99b53a203009b5e6890381a8dea7d597</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkSeat *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a58272ac9d394c2fbd72d9ab3d604a10f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a5a4270da723ac130c5b1227a397709b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>ae85019449b4f197407b2f282db5b85b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Capabilities</type>
      <name>get_capabilities</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a68198d12d33b7aaf886a67babadeb8ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Device &gt; &gt;</type>
      <name>get_devices</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>ae89256f3216ca1087faafa21a7018cf8</anchor>
      <arglist>(Capabilities capabilities)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Device &gt; &gt;</type>
      <name>get_devices</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a694446fb3a51e4e94c7efe23eadeba75</anchor>
      <arglist>(Capabilities capabilities) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; DeviceTool &gt; &gt;</type>
      <name>get_tools</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a2866fe1efbfba0dbf274830cb398234a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const DeviceTool &gt; &gt;</type>
      <name>get_tools</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>afd4a1ede62e7f98c4ca95a1bd96e2e35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_pointer</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a252060543f9c2d992fd172a1117339eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_pointer</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a38d808864ef51040122857eecf4dac25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_keyboard</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a73d701fa197e66709eeab3af9abc90e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_keyboard</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a04a0a12e0e6ad54b2902a93bddc56826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Device &gt; &amp;)&gt;</type>
      <name>signal_device_added</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a8b9b7628854da9a56a906aeb29c07901</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Device &gt; &amp;)&gt;</type>
      <name>signal_device_removed</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a98758467195f9fb147c6ccdf7688ff10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; DeviceTool &gt; &amp;)&gt;</type>
      <name>signal_tool_added</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>ae02f0e5ea3642a455831ffae70521192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; DeviceTool &gt; &amp;)&gt;</type>
      <name>signal_tool_removed</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a1441ed0709d7ab7ce953b27a0f10956f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a9817b624a2319e173d1e33df8b999c48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a28a966f22f4826ffc9d606f9a9d3c909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Seat</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>ad3513d75c33c51aee51e435bc8f4b48c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Seat &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a2092ed11ab0654ba6f888d875864e02d</anchor>
      <arglist>(GdkSeat *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Snapshot</name>
    <filename>classGdk_1_1Snapshot.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Snapshot</name>
      <anchorfile>classGdk_1_1Snapshot.html</anchorfile>
      <anchor>a88df6e58e7a7b63ee28607ea6a55f046</anchor>
      <arglist>(Snapshot &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Snapshot &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Snapshot.html</anchorfile>
      <anchor>a2cc00042765dec783804c9b37b2b27b0</anchor>
      <arglist>(Snapshot &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Snapshot</name>
      <anchorfile>classGdk_1_1Snapshot.html</anchorfile>
      <anchor>a501972459dc349733166fde077771483</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkSnapshot *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Snapshot.html</anchorfile>
      <anchor>a22edce4ee7f2a57bb23c308507f23d30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkSnapshot *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Snapshot.html</anchorfile>
      <anchor>ac0926156fc790eaed7b655d837889c9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkSnapshot *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Snapshot.html</anchorfile>
      <anchor>ab20c699d1a49d5cf2e4b9140ef39978b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Snapshot.html</anchorfile>
      <anchor>ab57e1be28fe4684cfe59c26acddaaf89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Snapshot &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Snapshot.html</anchorfile>
      <anchor>a9ecfc5c74ae794e98eaa1dc3a517acba</anchor>
      <arglist>(GdkSnapshot *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Surface</name>
    <filename>classGdk_1_1Surface.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Surface</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>af13b81beaccecfdd06d240e4ce406a90</anchor>
      <arglist>(Surface &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Surface &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a1c7a7342f20dedc3c98e4345ea10a644</anchor>
      <arglist>(Surface &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Surface</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a3ca49952eeb480aff5abf0b36dfaabf3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkSurface *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>aff13b400f3cbc06c3e7b0c254c05242d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkSurface *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>aff526eaa708888e951b269a32061cfb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkSurface *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>aabdde498b6ec1f57e897d5da5e08fa73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a373d3a862404e0bda2d1d303b8194328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a285f92bb21e65d54d050569eb6319946</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a96d0c79b0f5ba72404f9646d3a2ab6b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_region</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>abf1670597bb2d0ad2a3723b829b8ef23</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_mapped</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a8a8dc4f4c6b7c0ca0cb1796b3c9652aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a9b177ec05dbba03a7a6878e06d72a516</anchor>
      <arglist>(const Glib::RefPtr&lt; Cursor &gt; &amp;cursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>aee2437bd977a84adecf10e68f9298fbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_device_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>abf01df0e1a5211695a6c422b6b62291f</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device, const Glib::RefPtr&lt; Cursor &gt; &amp;cursor)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Cursor &gt;</type>
      <name>get_device_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a5ebcb69fcaac585a6d377577ddb7ec1b</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Cursor &gt;</type>
      <name>get_device_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>acb064934d721d1f5ce9c942d53abc030</anchor>
      <arglist>(const Glib::RefPtr&lt; const Device &gt; &amp;device) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Cursor &gt;</type>
      <name>get_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a523612ac3621af3a2b19cfcaa96cd380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Cursor &gt;</type>
      <name>get_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>af5c078c7b16e70acddb079231faba1fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>ad659fe25adda4792bfd9bdf42f9fb21e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a54037b493ebbd1042cb30fe5d2b8f4af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_scale_factor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a60cefff16b9c43c1ef295f4596882bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_device_position</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a12c6ff990d4fa5900df9e215401c405e</anchor>
      <arglist>(const Glib::RefPtr&lt; const Device &gt; &amp;device, double &amp;x, double &amp;y, ModifierType &amp;mask) const</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Surface &gt;</type>
      <name>create_similar_surface</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>af8c7f86ad54365a60342d1948e2e76e2</anchor>
      <arglist>(::Cairo::Content content, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beep</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a3a223efc020bcfff5d0a6eeff1fb683a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Drag &gt;</type>
      <name>drag_begin_from_point</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a20528d148fc7696f9e692824e54545f2</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device, const Glib::RefPtr&lt; ContentProvider &gt; &amp;content, DragAction actions, double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_render</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>ab8ba9ceacec519b0a162738b61cf4817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_layout</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a514b59c06283d9140b3f5194fa538d22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a85fb3731e5013daa38cc37e352117b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a71aff9e77239c1581715752fa7c82f01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_opaque_region</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a76ef4152cdf621312932eed1ef058f5c</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; const ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::GLContext &gt;</type>
      <name>create_gl_context</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a4ff601b0180acd6682cff7968ef48445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::CairoContext &gt;</type>
      <name>create_cairo_context</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a95d36bab827f7806281b6748e8d3f26e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int, int)&gt;</type>
      <name>signal_layout</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a857a4f1c3b986ef6d29ca5bec91f202b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const ::Cairo::RefPtr&lt; const ::Cairo::Region &gt; &amp;)&gt;</type>
      <name>signal_render</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a3f46bd86b511356f8bc60e0979c339cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; const Event &gt; &amp;)&gt;</type>
      <name>signal_event</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a7f783457b3f37d685a7dbed461e13382</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Monitor &gt; &amp;)&gt;</type>
      <name>signal_enter_monitor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a17554c1d9a609bca53b6bf08b6534b68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Monitor &gt; &amp;)&gt;</type>
      <name>signal_leave_monitor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a8c7fdb86d8229ff96d5053f1026bc5be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Cursor &gt; &gt;</type>
      <name>property_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>add1a96bd239bda6adab517080bd2c9e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Cursor &gt; &gt;</type>
      <name>property_cursor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a6d5db3af4aff5d3508f89aa81b4646de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>ab7350fbea45f767475de6934e5c43e5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; FrameClock &gt; &gt;</type>
      <name>property_frame_clock</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a175380cdeee0250d2b804896f1f69dde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_mapped</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a95bf91482450fff08e4e4fdb9d80133b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a0622d1397b0f7e30a90970ea8a5a77ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>ad43a0f8f5114def4be677bfea598a7cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_scale_factor</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>af8841ffe94a777f916db347c29450e7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a209484283e97bfd766fceff044163d09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Surface &gt;</type>
      <name>create_toplevel</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a54d2a145701c8ce0e7c47934d8c9e40c</anchor>
      <arglist>(const Glib::RefPtr&lt; Display &gt; &amp;display)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Surface &gt;</type>
      <name>create_popup</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>a2dab71a096ef3cd1c0f8ad68ce9ec30a</anchor>
      <arglist>(const Glib::RefPtr&lt; Surface &gt; &amp;parent, bool autohide)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Surface &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Surface.html</anchorfile>
      <anchor>ad8f8bae212c63f66927413562fc8b78e</anchor>
      <arglist>(GdkSurface *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Texture</name>
    <filename>classGdk_1_1Texture.html</filename>
    <base>Glib::Object</base>
    <base>Gdk::Paintable</base>
    <member kind="function">
      <type></type>
      <name>Texture</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a18cd6454646d83f2022a7c6d551054ca</anchor>
      <arglist>(Texture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Texture &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>ad206b42429a158c847ec5280c85af2a8</anchor>
      <arglist>(Texture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Texture</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a3843ea69c1d489c5d3aee5063d9310c4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkTexture *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a3e6843ed6d771e4ef37b6ebf69c3c0a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkTexture *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>ab3aa6e7b594414c8a396fe83df043e5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkTexture *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a14efcbf6197b0cd97dbcbfa06ee71872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a6141c60e3bcd4c9fa8a093b2eab94207</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a3f4cc027b3f675caf98a88444d2e496f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>download</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a3c409b3a6a91f9c45b357b175016edea</anchor>
      <arglist>(guchar *data, gsize stride) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_to_png</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>ab8ec1e6415de5043af589604fef3b7d1</anchor>
      <arglist>(const Glib::ustring &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::Bytes &gt;</type>
      <name>save_to_png_bytes</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a15745f6763bc8e9ba0a19f221a03caca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_to_tiff</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>af40426c264b668ddf1a1626844155707</anchor>
      <arglist>(const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::Bytes &gt;</type>
      <name>save_to_tiff_bytes</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a708d77e5f17168f84e4957a8d83a0451</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a1709b322153801a0a7d98b446c432ea9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>ae1efafc3e608ed49d5b13b7725a74990</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a48414bfa36e7555f34a56a1380ddb2ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Texture &gt;</type>
      <name>create_for_pixbuf</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a89fcb349599128c6565e695eb07364c7</anchor>
      <arglist>(const Glib::RefPtr&lt; Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Texture &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>af26ce29ace92ebbc3f9abced17bf68a7</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Texture &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>adec908b616001605c8f897ba422590c1</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Texture &gt;</type>
      <name>create_from_filename</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a3542ce8267fe0567ec0cecd6c1988236</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Texture &gt;</type>
      <name>create_from_bytes</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a9a8c66036d86c29f4183e77f6d56b868</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::Bytes &gt; &amp;bytes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Texture</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>aee7af251b8f3506b8cce5ee3cad88ecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Texture &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Texture.html</anchorfile>
      <anchor>a1106e74d81234beeb493badd79c6e579</anchor>
      <arglist>(GdkTexture *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::TextureError</name>
    <filename>classGdk_1_1TextureError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LARGE</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168aaeee2ad746e926d482cad9247c8c4cdee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORRUPT_IMAGE</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168aa8fe14bfaabb59122249d0d2d506b7f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_CONTENT</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168aa644228651ab5b5cedc3c24d38af96e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_FORMAT</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168aa5372a2d5fc9cd0c471a10cbdc30dcb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LARGE</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168aaeee2ad746e926d482cad9247c8c4cdee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORRUPT_IMAGE</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168aa8fe14bfaabb59122249d0d2d506b7f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_CONTENT</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168aa644228651ab5b5cedc3c24d38af96e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_FORMAT</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>afca07c04d35586eef4dde0c4a8d3168aa5372a2d5fc9cd0c471a10cbdc30dcb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureError</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>a1a2e7dd280f3468f0b589e9a8d84c476</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureError</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>ac09501af135a4501cbeabbe6563dfdba</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGdk_1_1TextureError.html</anchorfile>
      <anchor>adf9e188a92e093188db210bdb5313de9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::TimeCoord</name>
    <filename>classGdk_1_1TimeCoord.html</filename>
    <member kind="function">
      <type></type>
      <name>TimeCoord</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a1c57878725bc06c26615c79d96cb11c3</anchor>
      <arglist>(GdkTimeCoord *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeCoord</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a20b246af86457ce57b5b126d6a465f52</anchor>
      <arglist>(const TimeCoord &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TimeCoord &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a1112ca603b4d46418f5163a4c8aef28b</anchor>
      <arglist>(const TimeCoord &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeCoord</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a7a8793feda0b63b3e1f672dc1f6d26bd</anchor>
      <arglist>(TimeCoord &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimeCoord &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a3f9b5e3a26a9c4653b8ae9012d47d2f0</anchor>
      <arglist>(TimeCoord &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeCoord</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a6750d77f38f24c6a052bd9ad548721b5</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_time</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>abac1e9c41c16fcdb22ac4a0894baf225</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value_at_axis</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a422b9c9f521df29a5a86800f89cb1662</anchor>
      <arglist>(guint index) const</arglist>
    </member>
    <member kind="function">
      <type>GdkTimeCoord *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>af515d6def273ed3d05962e8d343ee486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkTimeCoord *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a2a0058ca48ef0b9f1c08aeb08a2bdba0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkTimeCoord *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a521b90160149b582a61f66c9ec1e15ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Toplevel</name>
    <filename>classGdk_1_1Toplevel.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0d3b45d7793abb591c907f7118a4a527</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a43245b4788b59a22d5357a7146c06deb">MINIMIZED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a2f33d682f3a4e19c31ced6cb4fd022e3">MAXIMIZED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a27a5fc888f51915241ab4c1fa0ab8157">STICKY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527ab89c3d897b196ffff1537331bc659a97">FULLSCREEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527ac2d92b81beeac9bfc89fb870c1a20767">ABOVE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527aa25949e21299b84cc33c4b00c740f08f">BELOW</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a3bccbab2a35cb78388a0f4a8e2003b07">FOCUSED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527afad40d340617c5a41352ba36b8cdf219">TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a41e923477bd417805a8e37436565fde6">TOP_TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527aca151aa31d56584f50860246123976f1">TOP_RESIZABLE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a380bf7e5f43cbc9cd7c7e183c83840d1">RIGHT_TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a1b9c6698ef54c0401a0d9ba4eca3b554">RIGHT_RESIZABLE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a127fb57a524b25f090d9e5ff4e626963">BOTTOM_TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527ad60b3e58244be682682e6c3e291b3a93">BOTTOM_RESIZABLE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527ad7c3be858022df5235809a436baa6bea">LEFT_TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a1185c10701e2693d96692a4d28407098">LEFT_RESIZABLE</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Toplevel</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ae9543cc67fd554dc76729db9ae966b3e</anchor>
      <arglist>(Toplevel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Toplevel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a89fa94c71dbf274be06ae2559ff257ba</anchor>
      <arglist>(Toplevel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Toplevel</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a21cbe885520aaaccd7b34ffab0c21380</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkToplevel *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>aafb6aac10e5e2b188e09231ee692cda9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkToplevel *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a0c92c1e8b95fcd63bd54795d6f74e92d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>present</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a40eacecc5afe536fc823115a9cf6ed75</anchor>
      <arglist>(const Glib::RefPtr&lt; ToplevelLayout &gt; &amp;layout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>minimize</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a918e4d88fb718a54e3eb57830785c5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lower</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a87c54a473401033b937b2081c5891150</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>focus</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ad71e7097320ab3c75cb94bf824236081</anchor>
      <arglist>(guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>get_state</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ab87d0c8378999f6a227baae9885f1936</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ae8dceaa5575f7385ca6886bd7187c95a</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_startup_id</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ae4d436e67dbf5e1e996b632b440c4c6f</anchor>
      <arglist>(const Glib::ustring &amp;startup_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transient_for</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a5f6f84f4ca54b468d81fb54307a4100d</anchor>
      <arglist>(const Glib::RefPtr&lt; Surface &gt; &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>acbd0680db11c7272adf08eae6c391f0e</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_list</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ae0830a0795b2de5c8af92353a5d02447</anchor>
      <arglist>(const std::vector&lt; Glib::RefPtr&lt; Texture &gt;&gt; &amp;surfaces)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>show_window_menu</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>aa6f6eec58cf71635ec03cef799f00b61</anchor>
      <arglist>(const Glib::RefPtr&lt; Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_decorated</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a40ef04d817642d741fc89100fc53cedf</anchor>
      <arglist>(bool decorated=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_deletable</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a6337af225444858d51f9cf202e2c4429</anchor>
      <arglist>(bool deletable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_edge_constraints</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a1b58a7fb58aec35a31c6dbb1de2e0763</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>inhibit_system_shortcuts</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a0948c7a486d491af58c36ae82a2a5d1a</anchor>
      <arglist>(const Glib::RefPtr&lt; Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore_system_shortcuts</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a7876107667791dad973d3b0937f6ed34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_resize</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a4088de3288c146cc406a6565aadf4c66</anchor>
      <arglist>(SurfaceEdge edge, const Glib::RefPtr&lt; Device &gt; &amp;device, int button, double x, double y, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_move</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ac7eef45edeb66293bdffd1db405422e8</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device, int button, double x, double y, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(ToplevelSize &amp;)&gt;</type>
      <name>signal_compute_size</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a2214fa74db19b3322b1183a9202979c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; State &gt;</type>
      <name>property_state</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a8d1883ecdad4774992eecb7a84f59215</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a554c09415997a10bbe6f9903eb47bdf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a1f15b458a944db199dc456dde4b9abb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_startup_id</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ac9409c2d52224bfa012b18ea22bde90f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_startup_id</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>aa9ea3ba1027f3b0761a060851a89d972</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Surface &gt; &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a4872b2c143d4096debe366d6531490ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Surface &gt; &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ad30df0a00662816a747b46bef699b06d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a808c5a6dbf6106d9a68a49338fcdf6c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ab0b65ba1d28d20dc5e29379e52fcd56e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_decorated</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>af861e2f960b4e6797ec35f23f5b2310d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_decorated</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>ab56d1c3f34cabec42c8a4664b9bcb9d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_deletable</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a570f103263e30d1a40cbbd74a0021772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_deletable</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>aabc9646fe6414b8295d2b1e49b195561</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; FullscreenMode &gt;</type>
      <name>property_fullscreen_mode</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>aea2ffec82507bede7163a038f47ae143</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; FullscreenMode &gt;</type>
      <name>property_fullscreen_mode</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a76f00dccc02a565e6d609c67539b1058</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_shortcuts_inhibited</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a12aac086fe12cd6900a12f2460e93615</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>aba879382aaad6fcd7ccb56237c005fec</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>a0f8d2a9e48ccb08bb71d3d573fb5b618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Toplevel</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>acb4d6289470f23f2b82b3787d426bd13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Toplevel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Toplevel.html</anchorfile>
      <anchor>adf98e2a8ddd6de21c35772de06567426</anchor>
      <arglist>(GdkToplevel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::ToplevelLayout</name>
    <filename>classGdk_1_1ToplevelLayout.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a376ae98f8c11886ba7db01f3cd879495</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a0d3f79b5cd51ea32e70d14e0d0ca3eda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkToplevelLayout *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a1c1d2208aa4ca4a273d73966dd80b38c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkToplevelLayout *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a11f525f5f03db5baecb13150daa73867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkToplevelLayout *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a407162c317ac67eccf16da73db3661ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToplevelLayout</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a728cf589d43887653fdea412167a97af</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToplevelLayout</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a0bc56b86f7554e4d7d2a568dc629e99a</anchor>
      <arglist>(const ToplevelLayout &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToplevelLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>af0963a427aeca490f93cea6c383093f6</anchor>
      <arglist>(const ToplevelLayout &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ToplevelLayout &gt;</type>
      <name>copy</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>ad14441d23f2bab6cc8af30e7880061ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a183232f95b9b155b1e24abe27aa6d444</anchor>
      <arglist>(const Glib::RefPtr&lt; const ToplevelLayout &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_maximized</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>aa3db5fab1b5a272e09c00a2059670b35</anchor>
      <arglist>(bool maximized=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fullscreen</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>ade83fb3ae241276c83db3d394d380789</anchor>
      <arglist>(bool fullscreen=true, const Glib::RefPtr&lt; Monitor &gt; &amp;monitor={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_maximized</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>ad74d5bfabe1782c1c391bbc7738eed39</anchor>
      <arglist>(bool &amp;maximized) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_fullscreen</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>ad2b57cd2b545d99c224dd8088db92e22</anchor>
      <arglist>(bool &amp;fullscreen) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Monitor &gt;</type>
      <name>get_fullscreen_monitor</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>a9f9915593bb5fe777a1fca23d1fdf93c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Monitor &gt;</type>
      <name>get_fullscreen_monitor</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>aa8e554e6836078438a6016df0ca6d27e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resizable</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>af57a2c157ed4f511409d5decabe33d30</anchor>
      <arglist>(bool resizable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resizable</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>aceb181843e07e69ee400069e2dc922f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ToplevelLayout &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>ae5a2f2794e67af7be4b5bd6ca5852fb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>ad1ff553ab532df7967b87022aa798c18</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ToplevelLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1ToplevelLayout.html</anchorfile>
      <anchor>aa0c5d441145a3b17756090d784a3da60</anchor>
      <arglist>(GdkToplevelLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::ToplevelSize</name>
    <filename>classGdk_1_1ToplevelSize.html</filename>
    <member kind="function">
      <type></type>
      <name>ToplevelSize</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a4544454e73bad4239d717998b00e707e</anchor>
      <arglist>(GdkToplevelSize *gobject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToplevelSize</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a165752229f156b60a5e6dd2f6ac58e2a</anchor>
      <arglist>(const ToplevelSize &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToplevelSize &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>ae8254ca1b9edf1e425ccccb110829d26</anchor>
      <arglist>(const ToplevelSize &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToplevelSize</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a77278e17c3389de8bdc734df4926be1b</anchor>
      <arglist>(ToplevelSize &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToplevelSize &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>ae45dbe74fe1744514854f9888e2afb95</anchor>
      <arglist>(ToplevelSize &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToplevelSize</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>aea3c8d5f5718f33c894c95329aa8e102</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a92e6bf8d494c33856eb831d1517bb63d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GdkToplevelSize *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a61bc0c7a6275cdae71708529b99cf70d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkToplevelSize *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a662f65b2bb1b3c383fa9eb9b3a98c187</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_bounds</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>aa150dafbd8ce354068fc06db135071c8</anchor>
      <arglist>(int &amp;bounds_width, int &amp;bounds_height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a7ff8a71f2df336f8badfcdcf140f0632</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_size</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>aa8aec7a637902065e57a602575de2189</anchor>
      <arglist>(int min_width, int min_height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow_width</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a235e334dc7a2fd584dcc5018b232956e</anchor>
      <arglist>(int left, int right, int top, int bottom)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkToplevelSize *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1ToplevelSize.html</anchorfile>
      <anchor>a79ce22ef4aefb409067951f7319d6578</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::ToplevelSurfaceImpl</name>
    <filename>classGdk_1_1ToplevelSurfaceImpl.html</filename>
    <base>Gdk::Toplevel</base>
    <base>Gdk::Surface</base>
    <member kind="function">
      <type></type>
      <name>ToplevelSurfaceImpl</name>
      <anchorfile>classGdk_1_1ToplevelSurfaceImpl.html</anchorfile>
      <anchor>a0d02a8497a57023ff4555ee2d36a8e55</anchor>
      <arglist>(ToplevelSurfaceImpl &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToplevelSurfaceImpl &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1ToplevelSurfaceImpl.html</anchorfile>
      <anchor>adebbae9b35168e12f82effdc8c67a12b</anchor>
      <arglist>(ToplevelSurfaceImpl &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToplevelSurfaceImpl</name>
      <anchorfile>classGdk_1_1ToplevelSurfaceImpl.html</anchorfile>
      <anchor>af50de2db23376dfa3c2d089689549bc8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Glib::Container_Helpers::TypeTraits&lt;::Cairo::RefPtr&lt; const ::Cairo::Surface &gt; &gt;</name>
    <filename>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_01const_01_1_1Cairo_1_1Surface_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>Cairo::RefPtr&lt; const ::Cairo::Surface &gt;</type>
      <name>CppType</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_01const_01_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a335ca86e488f555697fa3e6fe6849553</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const ::Cairo::Surface::cobject *</type>
      <name>CType</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_01const_01_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a581e8a0b427d44cf27a507ab2fbf1d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::Cairo::Surface::cobject *</type>
      <name>CTypeNonConst</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_01const_01_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>ab418177a687c2aea2974afa0deb4cdea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CType</type>
      <name>to_c_type</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_01const_01_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a0499956feebbe024b13491d058f9d28c</anchor>
      <arglist>(const CppType &amp;ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CType</type>
      <name>to_c_type</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_01const_01_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>acd0c0766fdebeefb6afa458e2917d4cb</anchor>
      <arglist>(CType ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CppType</type>
      <name>to_cpp_type</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_01const_01_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a21824e5bed0fd4401759fe328aacf9c0</anchor>
      <arglist>(CType ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>release_c_type</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_01const_01_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a6edd43b4e2eda5028e46bd0ee72f451b</anchor>
      <arglist>(CType ptr)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Glib::Container_Helpers::TypeTraits&lt;::Cairo::RefPtr&lt;::Cairo::Surface &gt; &gt;</name>
    <filename>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>::Cairo::RefPtr&lt;::Cairo::Surface &gt;</type>
      <name>CppType</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>ab492fd7eb05b26956fc7a49da6f24ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::Cairo::Surface::cobject *</type>
      <name>CType</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a55bea881a88aef59a056bc78c1ad724d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::Cairo::Surface::cobject *</type>
      <name>CTypeNonConst</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>afa5894921f77a4804206aceddb09fc53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CType</type>
      <name>to_c_type</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a9d7db873550e93264f4c99d2d670cd43</anchor>
      <arglist>(const CppType &amp;ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CType</type>
      <name>to_c_type</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a8b9939df183db60f14ea2cd674a4454f</anchor>
      <arglist>(CType ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CppType</type>
      <name>to_cpp_type</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>ab2435f41ccbd97d110b95a0a5a76c2ec</anchor>
      <arglist>(CType ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>release_c_type</name>
      <anchorfile>structGlib_1_1Container__Helpers_1_1TypeTraits_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a36d18baa09f05a1658e809317b7be61e</anchor>
      <arglist>(CType ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Glib::Value&lt; Glib::RefPtr&lt; Gdk::ContentFormats &gt; &gt;</name>
    <filename>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gdk_1_1ContentFormats_01_4_01_4.html</filename>
    <base>Glib::ValueBase_Boxed</base>
    <member kind="typedef">
      <type>Glib::RefPtr&lt; Gdk::ContentFormats &gt;</type>
      <name>CppType</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gdk_1_1ContentFormats_01_4_01_4.html</anchorfile>
      <anchor>ab24fed54eee3b8e807a785991d161ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GdkContentFormats *</type>
      <name>CType</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gdk_1_1ContentFormats_01_4_01_4.html</anchorfile>
      <anchor>a86ff99d2049721d74a898df01daddb00</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gdk_1_1ContentFormats_01_4_01_4.html</anchorfile>
      <anchor>af0e2b202220269647458e4f8c3180763</anchor>
      <arglist>(const CppType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>CppType</type>
      <name>get</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gdk_1_1ContentFormats_01_4_01_4.html</anchorfile>
      <anchor>a2d6221891fec05a4dfd536b7f1f9c85e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>value_type</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gdk_1_1ContentFormats_01_4_01_4.html</anchorfile>
      <anchor>a68433ac12b460eb9392e5998a5983680</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Glib::Value&lt; Glib::RefPtr&lt; Gtk::RecentInfo &gt; &gt;</name>
    <filename>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</filename>
    <base>Glib::ValueBase_Boxed</base>
    <member kind="typedef">
      <type>Glib::RefPtr&lt; Gtk::RecentInfo &gt;</type>
      <name>CppType</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>ace5bee59af50db7dcddd7844ce291f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GtkRecentInfo *</type>
      <name>CType</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>a03c3634552b0e7ab76fab4f3bd50b8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>a1d0b4d0dff9c2cbd10a9c1557a3a805b</anchor>
      <arglist>(const CppType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>CppType</type>
      <name>get</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>a243857a6bca93952cc4a421ef9893816</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>value_type</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>afb8299f863bf79eef3768c25fa616369</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Glib::Value&lt; RefPtr&lt; Gtk::Expression&lt; T &gt; &gt; &gt;</name>
    <filename>classGlib_1_1Value_3_01RefPtr_3_01Gtk_1_1Expression_3_01T_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>Glib::ValueBase</base>
    <member kind="typedef">
      <type>RefPtr&lt; Gtk::Expression&lt; T &gt; &gt;</type>
      <name>CppType</name>
      <anchorfile>classGlib_1_1Value_3_01RefPtr_3_01Gtk_1_1Expression_3_01T_01_4_01_4_01_4.html</anchorfile>
      <anchor>a1bee882e820f09250fd0f50df62e582b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGlib_1_1Value_3_01RefPtr_3_01Gtk_1_1Expression_3_01T_01_4_01_4_01_4.html</anchorfile>
      <anchor>a393ab12f703897d9be7d7b46e07fde5b</anchor>
      <arglist>(const CppType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>CppType</type>
      <name>get</name>
      <anchorfile>classGlib_1_1Value_3_01RefPtr_3_01Gtk_1_1Expression_3_01T_01_4_01_4_01_4.html</anchorfile>
      <anchor>a5684b2dea00fab9428869fb12189c830</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>value_type</name>
      <anchorfile>classGlib_1_1Value_3_01RefPtr_3_01Gtk_1_1Expression_3_01T_01_4_01_4_01_4.html</anchorfile>
      <anchor>aebae4abab6ebf6d9d18b69accab87578</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Glib::Value&lt;::Cairo::RefPtr&lt; T &gt;, typename std::enable_if&lt; std::is_base_of&lt;::Cairo::Region, T &gt;::value||std::is_base_of&lt;::Cairo::Surface, T &gt;::value &gt;::type &gt;</name>
    <filename>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_01T_01_4_00_01typename_01std_1_1enable__if_3_01std_1_13bba8fb3dca154a8f85bdfb84c622b44.html</filename>
    <templarg></templarg>
    <base>Glib::ValueBase_Boxed</base>
    <member kind="typedef">
      <type>::Cairo::RefPtr&lt; T &gt;</type>
      <name>CppType</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_01T_01_4_00_01typename_01std_1_1enable__if_3_01std_1_13bba8fb3dca154a8f85bdfb84c622b44.html</anchorfile>
      <anchor>a95f78add26ffbaca7b1d025a1d21774f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename T::cobject</type>
      <name>CType</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_01T_01_4_00_01typename_01std_1_1enable__if_3_01std_1_13bba8fb3dca154a8f85bdfb84c622b44.html</anchorfile>
      <anchor>ada8147f5f5fdfa4a055355de18aad20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_01T_01_4_00_01typename_01std_1_1enable__if_3_01std_1_13bba8fb3dca154a8f85bdfb84c622b44.html</anchorfile>
      <anchor>a5c03f33cc059ba0351c1c49544068102</anchor>
      <arglist>(const CppType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>CppType</type>
      <name>get</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_01T_01_4_00_01typename_01std_1_1enable__if_3_01std_1_13bba8fb3dca154a8f85bdfb84c622b44.html</anchorfile>
      <anchor>a5f5b2981a7720a8d15e9be82daeaf221</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>value_type</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_01T_01_4_00_01typename_01std_1_1enable__if_3_01std_1_13bba8fb3dca154a8f85bdfb84c622b44.html</anchorfile>
      <anchor>a11a995debadd60191e0d3b99d8199644</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AboutDialog</name>
    <filename>classGtk_1_1AboutDialog.html</filename>
    <base>Gtk::Window</base>
    <member kind="function">
      <type></type>
      <name>AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a39d0f0369a03e1f6d7d3f686600dc562</anchor>
      <arglist>(AboutDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AboutDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad0dff15c0d513f1691ad7bba9e212f81</anchor>
      <arglist>(AboutDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a5583d0d373df4b47f68941717069ea91</anchor>
      <arglist>(const AboutDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AboutDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a89f927e0466e750b9ea1690345a6bf60</anchor>
      <arglist>(const AboutDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a1e705a5eb1b1dc721791ccb54b4d6d50</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAboutDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a154a7b18752a8770891c424aee419763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAboutDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a284788ef0e053eff6cb642a25738bd39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a93f3de1d206303a208b5eaec8cd935d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ab283d314678e33c6944329a17b35ee90</anchor>
      <arglist>(bool use_header_bar)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_program_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a9ef63e782f694be4c2f2040e6967277c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_program_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a7a53fe5b7fcc8061a096a8183ae117e9</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_version</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a4cdb36ce5a35a22fd8f64a58bc8f05fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_version</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a46ba72a65a81ed6e528730de0fc02e29</anchor>
      <arglist>(const Glib::ustring &amp;version)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_copyright</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ae81cfb7f46261cc77344e4af83855ae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_copyright</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a3a7889f5da5f0d92495628fa9d67580a</anchor>
      <arglist>(const Glib::ustring &amp;copyright)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_comments</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aaca6265ece270b27329c18999fd62a96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_comments</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a90e175fa9d686f78f793dffe74fa9a64</anchor>
      <arglist>(const Glib::ustring &amp;comments)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a42474c803c1608820ddc329583fefe95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ace39ba43998ef0962da1f02830ab322c</anchor>
      <arglist>(const Glib::ustring &amp;license)</arglist>
    </member>
    <member kind="function">
      <type>License</type>
      <name>get_license_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a9de0de638e26e1de843e17daa340fc3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_license_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a9b89d7db70042a375d34c33999f3adf3</anchor>
      <arglist>(License license_type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_system_information</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aaf281b0db60c51e15aae58b97dcffa93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_system_information</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ae448855877eb0caa1e488c69b8390263</anchor>
      <arglist>(const Glib::ustring &amp;system_information)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_website</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a8dc73d2b96d96a285c211f226943f251</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_website</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a34ba00172f995f95d9b70984df76b607</anchor>
      <arglist>(const Glib::ustring &amp;website)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_website_label</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a54d445e3272880be0dbf3d12b3201b3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_website_label</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aa3d04115d068363be314414899703caa</anchor>
      <arglist>(const Glib::ustring &amp;website_label)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_authors</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a24a2e6c5bbd513f8f575b19dc24f353e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_authors</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ae598b05ebe4e5c083dffe437fa1fe038</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;authors) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_documenters</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a1b5a41ba0b5578265d29dd8666af320e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_documenters</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a4e361487d99c5dd83b312ae68a9049b0</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;documenters)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_artists</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a66101c5784d513525428c631fe00e75d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_artists</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>afef0904b49ea5cca887efd4bc90b5491</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;artists)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_translator_credits</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a8f8f7232e08ededb36a47e323bac2b4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_translator_credits</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>afbe5045ba430d8e882ec9753eece7a01</anchor>
      <arglist>(const Glib::ustring &amp;translator_credits)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Paintable &gt;</type>
      <name>get_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a8b5668436b0e493291725403599bdc5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Paintable &gt;</type>
      <name>get_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aabeb4a52ad522ecb82b647209aad28ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a84f506dd9322cf09da0b27f31709289f</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Paintable &gt; &amp;logo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_logo_default</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a4e6cdd7f8df55e4f84e7067a7105f74c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_logo_icon_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a1cd26ca71fab445898776e5e0d165481</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_logo_icon_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a8a22c3c62a25d80433276a5f1e8e79e6</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_wrap_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a2523d991c75dcd6e060c05d18b091bc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad05699f5a01a4084f06a07aeaefcc0a1</anchor>
      <arglist>(bool wrap_license)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_credit_section</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a98874e2a3b6b83e400dc528a1dc0d5b4</anchor>
      <arglist>(const Glib::ustring &amp;section_name, const std::vector&lt; Glib::ustring &gt; &amp;people)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_program_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aef1fe3cf0b1e050c3d19c5286be00f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_program_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a12261c4c051e6709269fb594fa5488b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_version</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a768a9a017a4d833e851682db9915357e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_version</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a65d6631ddd564b6aff5eb69334d654cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_copyright</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aff17aa4c79b3d392b50ff7073c9465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_copyright</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>af5277d4067a279a325d1ebf7804d10f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_comments</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a67c8b3823b2c0462da00240b9ef3e863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_comments</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a93795ac65ac07e1c828982731af53ad4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_website</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a3ab156130c303fe4c9da6c009f2f80ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_website</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aae21aca1c315717fac2717ef381743f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_website_label</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a95f6eacfbebbfb06a5a4c6858a05bbde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_website_label</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a3d9749ffa4bfad3ec7ec1f43f9ae0808</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a5caba781a4fc15505c471844dcb5a0fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aa604344bdbbc40b10c9ced97f0f11cc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; License &gt;</type>
      <name>property_license_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a5fea7602311347436bb4fb390e5dea30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; License &gt;</type>
      <name>property_license_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a207bd8744d922f151e927f2cf6925243</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_system_information</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a6e42220abe4185cd78194177051187cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_system_information</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a01ff06d8495f1cb4ec47ce8fce765d61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_authors</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a601ba4926bf675bfd5396e3b3476f66c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_authors</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a931898da326f3d392548f6cc78d7ceeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_documenters</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aad501c64622b208b93ab2ee42c18efce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_documenters</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ab883e1c0f61ee0ff168517741847639f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_translator_credits</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a9bb8e94c7aff30ed0973120165a9705d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_translator_credits</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>adff71a8ce00edcd8d1939da5addb522b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_artists</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a041780902a44e06c11d992d82271ea6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_artists</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a1a62791e7c1cbb6a4f7a3d80a54d4236</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>abef0c8f3c57779132c4f6bee87c937c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>adada09c1692bf69f38dc2a14b5802cb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_logo_icon_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad0e10a4e2eedef2d998ae53dfbb52aa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_logo_icon_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ab7c52968907e0ecfa54d3315d72b212d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wrap_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a92ba02fbec2cb56bedb3bb9e3cc09b0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wrap_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a3150c503ade800ab9141e07db1137af6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const std::string &amp;)&gt;</type>
      <name>signal_activate_link</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a4e1cea0b3a1c20214c8ce072f874b0d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a139f10a3ea108791f646365d50ce2a30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AboutDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aa5d5873b3e3da742bcefe338fd47d47b</anchor>
      <arglist>(GtkAboutDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AccelKey</name>
    <filename>classGtk_1_1AccelKey.html</filename>
    <member kind="function">
      <type></type>
      <name>AccelKey</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a1a3ff31a0cb67142659342eb9896feb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelKey</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a253b69bd9259f2cf44b8729fb8e5a005</anchor>
      <arglist>(guint accel_key, Gdk::ModifierType accel_mods, const Glib::ustring &amp;accel_path={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelKey</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>afbeae28b915c76a6bad213f296f29c4f</anchor>
      <arglist>(const Glib::ustring &amp;accelerator, const Glib::ustring &amp;accel_path={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelKey</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a26e7c5af7f5bdfa1948d03c418c1755e</anchor>
      <arglist>(const AccelKey &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>AccelKey &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>abe7f9eebbe73ed3a30bc5942b3027eac</anchor>
      <arglist>(const AccelKey &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a8b8559a07da614c2238b21c48cc94cc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_key</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>aadc2f3139c62b717b4e2b0573be7ee6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_mod</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>acefc23c8267df611a97222c35406e449</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_path</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a11721893ff875917a8c7cade6e21f794</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_abbrev</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>abdbee2adbf370d1bd431116fef5586ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>guint</type>
      <name>key_</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>ad29fd938a58696299af2fc3a5403940d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Gdk::ModifierType</type>
      <name>mod_</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a884a3b68a6860a609b0cbc9b988dfd03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Glib::ustring</type>
      <name>path_</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a115c69bb0f29e66757db3dfd3ae78fa6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Accessible</name>
    <filename>classGtk_1_1Accessible.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumeration">
      <type></type>
      <name>Role</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1ab58f6e3d8aca72cd1983f549c792dc</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca320f86f60f25459ba5550e000b2c3929">ALERT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae2c1fc3dc24b47b7f543199e1a9d0874">ALERT_DIALOG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca001bd74e24a00403a292608ec2853cb9">BANNER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca57b35198356d373bcd2a6e08abcb3795">BUTTON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca4e817727ebb5d8566c54ee5ba9a1e2dd">CAPTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcadeaa44e5e872be992b4109cf1fbfe41e">CELL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca22ab9eebdf3d8e32268c02e577520333">CHECKBOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac01b0c29636651b53025a16986a09a1a">COLUMN_HEADER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcabdd67efa63416cd121f92526917dc4df">COMBO_BOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca26097a57f572fe88a7cdf80543422cb1">COMMAND</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca817e60c93ea667a3b1f99f516a56fa62">COMPOSITE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca51a2fc9427485236e89ca31fc55d66e5">DIALOG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac231fa48df3ee393c92dccac4dba5e7d">DOCUMENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae352a08d4fba713e5ae1e538bf27258c">FEED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca03c37111e264eee423ada395dd6474aa">FORM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac942dc2a9f958acddc67e11472d3ca0b">GENERIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcabc899ea5d6a94a8e4e60c16244919ba0">GRID</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca73555203545bb4623322fc6bff01cb7d">GRID_CELL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca720909a4b948fc9e33633b61960d6b3c">GROUP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcacc65dd7b535ac7fc2363aeb572cc2a8e">HEADING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcab03d9d40b1fb78805d1552b3d29c9ef3">IMG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaa84cc046d48610b05c21fd3670d0c829">INPUT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca6f434c508ad901b8667ed22f713e52bb">LABEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcada0100dab39349825d3307f72050b72d">LANDMARK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae986ff2a70aff886e574f489aa8d55ee">LEGEND</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca58c0a0e97e6d2f615bc264c2775fda44">LINK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca298cb25408234de02baf2085803a464a">LIST</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca93acd75af8be088fceba3c5a613f7645">LIST_BOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca383ec3822ff1c025e1509afae8fe4d98">LIST_ITEM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca4b5ffcdaf38ce4d463171f5c977c5ab3">LOG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca186495f7da296bf880df3a22a492b378">MAIN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5077fb50cee3bea4422edef805343fd2">MARQUEE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca65571aa0536447fb1cf47a2b5a98954b">MATH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcacc7ab7853e03a21956737fb272615996">METER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca3ed53fbeb1eab0443561b68ca0c0b5cf">MENU</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5077b97d66f96b05615971ccb62797b7">MENU_BAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaf7fb892d03bec2a0e9b44f040ab76266">MENU_ITEM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaa1229e84a68c990ec9341ca08658fab1">MENU_ITEM_CHECKBOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaf1b052ee0002a0c398ebd394c274584f">MENU_ITEM_RADIO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5995d98caf31b9445202b0f054fdc54e">NAVIGATION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca10de4bc81f754b19b0d27246a0589c05">NOTE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae1c4a02aed2e485ae96bc5a5b1d01ee5">OPTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca740819a7dc6b0b1a8a7fa0c871d9b878">PRESENTATION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca0d32e02396c223148b9aadf9894521d8">PROGRESS_BAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaf46d45b52139dc3fa782c53f701ada0d">RADIO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca445f94b595faf015861b8eab1b764b37">RADIO_GROUP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca01036ddcc971d02f6c32c3da31a119f2">RANGE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca69aede266809f89b89fe70681f6a129f">REGION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca54c1ed33c810f895d48c008d89f880b7">ROW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca230e2a2ff4cb04440bb2add619818132">ROW_GROUP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca0cae80a0cf92a708becd8a6d52a53be0">ROW_HEADER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac77177961ab05e4a38832dcd6e30627d">SCROLLBAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca0f544d682c3a664870f025f48c4b04b5">SEARCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcafc4b1ef43ea5f430dcd46e835f976710">SEARCH_BOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca3d0d6f3b89d94934de83ca41b85e6ce4">SECTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaebb61c975ebeec81512a5e96c63f6bd0">SECTION_HEAD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca63225f19fccb18e7c709f1fa11bc738e">SELECT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca70bb8dc90aa233a66b91ae2e9dc1a850">SEPARATOR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca3c93f85078b290625b7c4db299979c4f">SLIDER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5214661864b506ebf144ee02e5946e82">SPIN_BUTTON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5f241c8c8f985b3c51e05d39cf030f4c">STATUS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca63d18c02d55fa0ce66b6368177bdcd22">STRUCTURE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca4239f063a3d4fb9d38a0182be6e39e76">SWITCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaf684bf05fa3e81528c84d1d281d839f1">TAB</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca34bbae0aee41ddd6a73697584a20afc6">TABLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca483739686769c47853ad5cc1bf56b7ab">TAB_LIST</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca0c059bcc42755f597c9527963b422c21">TAB_PANEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae9f204874f73deda622034819e9a92ef">TEXT_BOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca346ff32eaa3c09983fb2ec057816d352">TIME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcab127d163c55a6603f3a37ce3a642c36d">TIMER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcacf4b2ed50ec6bdf4d8e85e76e22f89fb">TOOLBAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcad324c1dd47c2c44f621c1e67dfecb915">TOOLTIP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac0f8e24cf041639c4fc457ebec9490eb">TREE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca07dab3099643bedf96139aab23321641">TREE_GRID</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaa5f85922b5538d224e9ba3d1177fbeab">TREE_ITEM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca14dc79e11f9bdd15c996c5755c7cef4b">WIDGET</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca70e2a9fa5d5ec49dc67453eab551251d">WINDOW</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga490296d236fbf86a0427ef8b6286d8a2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a802706a9238e2928077f97736854bad4">BUSY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a758f9c8c8110e53f8c8e0c790f855560">CHECKED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a59fd6ceac734b3855e74b57d00a1db1f">EXPANDED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a347e628a8f72626a0611ef842fe9d304">HIDDEN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2accc0377a8afbf50e7094f5c23a8af223">INVALID</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a5381dc876ab002103a027265bc14ae52">PRESSED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2ac841881b7f65d9e69aa9c932ca4427c8">SELECTED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Property</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac658da0ea0eaa205df39642efa90d564</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a2c7a0318c82cfff19c1802f918e98390">AUTOCOMPLETE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a35ba4a2677442e210c23a00a5601aba3">DESCRIPTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a5713d2c112d751695983bb852f7c9cef">HAS_POPUP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a94455c33d4253390507b6caaad9bb94e">KEY_SHORTCUTS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a6f434c508ad901b8667ed22f713e52bb">LABEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564aec46cfef93df98a48cda0c5df179485e">LEVEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564ac0c047e39e77804b75bbfcb81cb58867">MODAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a8e729acc1d7af6eb333dd399b48a132c">MULTI_LINE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a8c4054b8081405cb7943107b55e339c1">MULTI_SELECTABLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a76b8a0c10dc65011f6062b5172cd2e2c">ORIENTATION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564ae54e6f6ba0c7cbb4eb7a2016e2f17842">PLACEHOLDER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a47c7e7cb36a953a8c47e02000036bb44">READ_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564aebdf9721be38d1fc1cd6db8c737d1be0">REQUIRED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564aa093886d3c4d62d3019d396dfdf27ad3">ROLE_DESCRIPTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564aa7bdfbfac6ba2252b889996b1430abb4">SORT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a7d10f12e8e56d7c8856961516fa67c92">VALUE_MAX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a941489206c4d8a192b5d9f4a94ccd0e3">VALUE_MIN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564af1512f645e5d2ca26a8f8bba82cf6b1f">VALUE_NOW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a77a51f4bf0f0a08348f015b6ff36e3e2">VALUE_TEXT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Relation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3dcfd9d45f1ca01fde111168f48f5e81</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a44e6ea1efa23a7b6e5da61c105320405">ACTIVE_DESCENDANT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a1cf91b2c1c8f7fc323583af81881c2c6">COL_COUNT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a4328bf406df01a0cabb32a3ab2197222">COL_INDEX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a06a4b43d75f8e85c6ed86cee4c9dcaba">COL_INDEX_TEXT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81ae09d05962857a4722456f6ec73eccda1">COL_SPAN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81ae56516ff34a16dd1ff3515d65371b54f">CONTROLS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81acf8b36dbf69214b1f920322631315b24">DESCRIBED_BY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a3120001274fa32a921770c1b41e6dc0a">DETAILS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a736d9fa7654d470e073a4be93dc65241">ERROR_MESSAGE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a09e795572f3a2851ab186c5f6747c8c2">FLOW_TO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81aaffb20f59d70a9c04cf01be0d8cab781">LABELLED_BY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a22e915b459e6c42e7badf0927035af86">OWNS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a766664d4210b7d5d1b45ff2b6a466426">POS_IN_SET</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a528e714859c0ac8a1c138936f333c66e">ROW_COUNT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81af82301087d58a0ab0f97d7356cdbcf0e">ROW_INDEX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a42f5fa63c9d5979a45cedaa971948219">ROW_INDEX_TEXT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a4c2bd284a9a079315c28d23c69c9c9b1">ROW_SPAN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a81fdf91f6a4297444e68789f28129840">SET_SIZE</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Accessible</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>afcf9085c049892c2772044f949d7ba03</anchor>
      <arglist>(Accessible &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Accessible &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>ac118aa8d99d943097cc72e54d2e52dcb</anchor>
      <arglist>(Accessible &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Accessible</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a5d8c664faf63f0f6a283082f2ee7c78c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAccessible *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a6e28ef1996d0341c08cfb6f5c9d2eeb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAccessible *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a90eabeb38db7eab82c99005678f500a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Role</type>
      <name>get_accessible_role</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a7bf165cb3b022099d6cc6ee9cf60c67f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_state</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a55eb5b0f88a29a6a667a6c02857e8c77</anchor>
      <arglist>(State state, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_property</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a92b8bba97a2fef09fb8e5fad21ec91b5</anchor>
      <arglist>(Property property, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_relation</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a66b637c177b46301a5ec6262d1c980c6</anchor>
      <arglist>(Relation relation, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_state</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a6b1e78410b22a2eb33227163b03141d3</anchor>
      <arglist>(State state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_property</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a6837495c1713921179aa595c1d00deb2</anchor>
      <arglist>(Property property)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_relation</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>ac9a78b76363ce859f433ba9483e056c4</anchor>
      <arglist>(Relation relation)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Role &gt;</type>
      <name>property_accessible_role</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a707c2e955595749eadea5efe26ab5159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Role &gt;</type>
      <name>property_accessible_role</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>aee1eb93d253e6b146d9c00ae5f3f5293</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>ad6ed6bb4e08af916001907585aa78649</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>ada4fdeae10c76f8d15e9845b69fcce4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Accessible</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>ae975de570c9098be45e11e739b9610f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Accessible &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Accessible.html</anchorfile>
      <anchor>a4d6453a33c56cb1b87c7c77d78dc3361</anchor>
      <arglist>(GtkAccessible *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Actionable</name>
    <filename>classGtk_1_1Actionable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Actionable</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a12b7a59d171da682d7589ee26044a2cb</anchor>
      <arglist>(Actionable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Actionable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>aa7729fce25ea2543285fc56bc3eabae8</anchor>
      <arglist>(Actionable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Actionable</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a3f74643abd35dd42ac22f182d04d3c9b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkActionable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a375aae8d2cdb58867689450482a491a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkActionable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a076bdeb8f61d58016637e7721da47c22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a6c06f6ad0dc36512dce69dd832a25582</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a223ed1e1c45daf3d1191d07150dd9ee1</anchor>
      <arglist>(const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::VariantBase</type>
      <name>get_action_target_value</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a15f974d3408629cddd2516e57b8481b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Glib::VariantBase</type>
      <name>get_action_target_value</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>af8884959e8583b90c33cbcb06f793822</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action_target_value</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a965dbe405c294039a9cb4a081483ba1d</anchor>
      <arglist>(const Glib::VariantBase &amp;target_value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_detailed_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a78e2d6b01cc8b6f1fd80a5cb7f0c9536</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>abf6dd9c25556577d239b31ef35cc205b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a0702cdcb3c21bfd309620135103d917e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::VariantBase &gt;</type>
      <name>property_action_target</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a1f3f45de00fd93c40a82ac79e39ed006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::VariantBase &gt;</type>
      <name>property_action_target</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>adbe9d7f98520e4b666cff29097a3669a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a4245615913e22b7da65043bf2afdd2a5</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>aa8e3b577137e91b92b3c67f87acb8a71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Actionable</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>acb9d8d2f5662c92b55fecffba29bcaff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::ustring</type>
      <name>get_action_name_vfunc</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a8a22b2aaa8d1f5f1adac30d7162affa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_action_name_vfunc</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a45b52f602357b31f39ca72e5c1a4fba4</anchor>
      <arglist>(const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::VariantBase</type>
      <name>get_action_target_value_vfunc</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a2d2ec3d461bcc22f121ce6f434ba1185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_action_target_value_vfunc</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>aab5972b6f2b717ef582e64f151a32045</anchor>
      <arglist>(const Glib::VariantBase &amp;action_target_value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Actionable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a3335fa012919e672c9e5fe10ad219dcb</anchor>
      <arglist>(GtkActionable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ActionBar</name>
    <filename>classGtk_1_1ActionBar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>ActionBar</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>aff8bafee5f78944b26f8e4a262865bb0</anchor>
      <arglist>(ActionBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ActionBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a61d93e6a55caa58fd9848e3fafd8163a</anchor>
      <arglist>(ActionBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActionBar</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>aff9522143f36780c4026b6b56eaac01e</anchor>
      <arglist>(const ActionBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ActionBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a33a8edd0a77f23865cbe2dad4a535e90</anchor>
      <arglist>(const ActionBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ActionBar</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>af49c3cc1b50db411e80bc9b427302ec5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkActionBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a8230362369ef3e5858b5aa8c78bd89ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkActionBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>abbbb8355291063caf619055d0a9c4e45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActionBar</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a9d0e1451025979c869f6438fc8d2e743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a1ae8ecc84d841be13af9440c4c58d51f</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a0fe43d007543c53c5f3077a847243492</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a20bce02bc1efd24d1f1a264697ab4111</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>ad0b739ca8cd0855ae54a6c36ef59b3cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>aedec8646c3dea208d2d80a562143b2f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_center_widget</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a9fff196e6b53254d6a914936e43c8ac5</anchor>
      <arglist>(Widget &amp;center_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_center_widget</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a95cfc99eb634d8b53e7543efadd99e9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_revealed</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>afd98bed1aa04e1d0c38fafdacfb411b7</anchor>
      <arglist>(bool revealed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_revealed</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a00eb00fafb67524057cccdda1895e854</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_revealed</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a43c4f6b11a17bfb5340ac4419b5bbf0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_revealed</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a2b108413dbf797fb7457049192e3e1ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>aa4fe6bc434c344037e22d3c14de75462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ActionBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>ade1185220b7e629eb9f700df6134e88c</anchor>
      <arglist>(GtkActionBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ActivateAction</name>
    <filename>classGtk_1_1ActivateAction.html</filename>
    <base>Gtk::ShortcutAction</base>
    <member kind="function">
      <type></type>
      <name>ActivateAction</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>a47002bf5a57dd8b2d1a2daaf3d701123</anchor>
      <arglist>(ActivateAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ActivateAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>aaea00f22f925ab5b1a4af8b5a2118705</anchor>
      <arglist>(ActivateAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ActivateAction</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>ac2fd1f2ef48af62986d4387447363ef9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkActivateAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>af64a15c5987a3b177fca642973e96b9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkActivateAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>a64b83ce1c38779403d1c5a07805f2e9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkActivateAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>a5fdd0efcb665041aef418718be5f6ed6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>a833bffb472403d39fe1d556be15b49cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ActivateAction &gt;</type>
      <name>get</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>a20192fe08a1a0ba9d9aa4ad2c692440a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ActivateAction</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>a3d07f49fc8dbed173b8d8c2e268bdfa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ActivateAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ActivateAction.html</anchorfile>
      <anchor>a8f104bad4552d22a596427e3c295d7e0</anchor>
      <arglist>(GtkActivateAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Adjustment</name>
    <filename>classGtk_1_1Adjustment.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Adjustment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a918f7a00af8fb5094281f349feeb0927</anchor>
      <arglist>(Adjustment &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Adjustment &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>af149d5e3d3a9f5ab6fb92df0b93022eb</anchor>
      <arglist>(Adjustment &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Adjustment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a31f563c422b2e25941461df2197fce53</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAdjustment *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a73a1955c20e1a90ffffe17a597e43ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAdjustment *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>afa92a150a7a5529ca3b3c5623ce9a31d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkAdjustment *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a59e77a6c2ec4317cf1605697b4ba936a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clamp_page</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a721b1e2ccde935f7c7c13c7ebfba4c44</anchor>
      <arglist>(double lower, double upper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ac585ad50e95018cd4d0fe7b014102591</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a58b73ef161f3b07c2bc89e460de86ce8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_lower</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a8b64cd68e91a24d6b7dfc03d8d199437</anchor>
      <arglist>(double lower)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_lower</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ad89198d5b7eb068d0c2ac2c85bd5b8da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_upper</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ab093897a15d80dba99969abb9bce039f</anchor>
      <arglist>(double upper)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_upper</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a79979bbcf93b022a83cce389beea5918</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_step_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a0057e49eb57b09341b96a7c419ff1dfb</anchor>
      <arglist>(double step_increment)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_step_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a65f0e135cfa828769bcbc49dd5fb0ebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a7cb297efb8bf3bb30aa51c754718f22a</anchor>
      <arglist>(double page_increment)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_page_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a9b7871330774b5171fa66de0b50cd946</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_size</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a8ce619f778049f760ef25269d9da7273</anchor>
      <arglist>(double page_size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_page_size</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a5214341b8b44a0c4ec38138d2b8b2060</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a02b7d411bd640215392a4f1911028104</anchor>
      <arglist>(double value, double lower, double upper, double step_increment, double page_increment, double page_size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_minimum_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aa3c52f1afca714af43ac1f8bb66ce5a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a44a65b34cd732b31022d9b2d6b33ff1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aaea2ba19d682eaf4b92a1fb92abfcc8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aac369bfd56d9c3867d8e7f19360d74ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a9a799dcc6c087569c297aae8f1eb0f21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_lower</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a1e033745b6cb320717825ed34d92ae3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_lower</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a9db91e8e7d0ae1ab9472030fd0c0c5e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_upper</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aaf06b3b17c338b48e160d9670a589f2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_upper</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a1b986f9d22198a1df8faedc517c0592b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_step_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a723c8bc20104f0b1497c895d3b07a9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_step_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ab74a5ffef1eea32d392519024fd59422</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_page_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a558e75fb1d1a8d6bd26aae45dbb095b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_page_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aee1bd88a283c79212b8749d66c84ac17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_page_size</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a51ae8f796a0a04a4414a32ec178e632d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_page_size</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aac47bff6e4200963f11dd9cdf7252fe5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>adef454f7653695b5d46db99e3e5efd69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ae9b576b1d64173dbf9d1b035ff8e03ca</anchor>
      <arglist>(double value, double lower, double upper, double step_increment=1, double page_increment=10, double page_size=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Adjustment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a46faef0350c12e09a3e0249af5673d75</anchor>
      <arglist>(double value, double lower, double upper, double step_increment=1, double page_increment=10, double page_size=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>afd8640b87aa243aa63cf0b4205f26df6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a2aa54b26614f6824a3dce58afe1080b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Range</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>acfd895dc66f5fefeceaa97f725374689</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>HScrollbar</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ae69c6aaa3a137d794d097e2af6efa842</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>VScrollbar</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ade450f306f5819b3bff930f39105ec87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Adjustment &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a30d460e02add4a1c6e7b3577237b8bb6</anchor>
      <arglist>(GtkAdjustment *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AlternativeTrigger</name>
    <filename>classGtk_1_1AlternativeTrigger.html</filename>
    <base>Gtk::ShortcutTrigger</base>
    <member kind="function">
      <type></type>
      <name>AlternativeTrigger</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>aa8f175bd39123123ef17cd0fb2a02853</anchor>
      <arglist>(AlternativeTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AlternativeTrigger &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>ac0b7818ab5049fbbcfc37259bfc83c02</anchor>
      <arglist>(AlternativeTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AlternativeTrigger</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>a8af5f58dc416a85355c4604c998cbad8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAlternativeTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>acf8b9e7abd03b5d8a65b9fd18104dbc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAlternativeTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>a7bb58077e7b6637e90d57f7003be7796</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkAlternativeTrigger *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>abe1ca62c0f34a3f183dc3d42849f48eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ShortcutTrigger &gt;</type>
      <name>get_first</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>ab998a711f0e9d543ddecd78058dec70f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ShortcutTrigger &gt;</type>
      <name>get_second</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>aa70c5c40e2d73217f345b312bf376035</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; const ShortcutTrigger &gt; &gt;</type>
      <name>property_first</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>af28a486dfe062bbad69ffcc6e309fdfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; const ShortcutTrigger &gt; &gt;</type>
      <name>property_second</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>ae24bf6e018a50e9c4a1c957114d10dea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>a0df777e170199315536b30741cec70da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; AlternativeTrigger &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>a6b528144ae8c4abc64d3c8de12763809</anchor>
      <arglist>(const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;first, const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;second)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AlternativeTrigger</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>a93ca75c603ff3097a74fa329c66f6d33</anchor>
      <arglist>(const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;first, const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;second)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::AlternativeTrigger &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AlternativeTrigger.html</anchorfile>
      <anchor>ac37f68c1abb5801a78372578b797e33d</anchor>
      <arglist>(GtkAlternativeTrigger *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AnyFilter</name>
    <filename>classGtk_1_1AnyFilter.html</filename>
    <base>Gtk::MultiFilter</base>
    <member kind="function">
      <type></type>
      <name>AnyFilter</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a2b7e135372fc70448698cdc88c3ea3f8</anchor>
      <arglist>(AnyFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AnyFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a2024ff08fc95ed49a45560120a66fd46</anchor>
      <arglist>(AnyFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AnyFilter</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a91ab60b02a8a951ddb0541be75c65e6d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAnyFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a25d0d915b98aacdb56f69adb206d0edb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAnyFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a27e7021bd25ae5e5cddc0b94c1e96b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkAnyFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a2b87fb22786ddeda7cf2ec8d0b61d33f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a9e61d5651149e4e2320fbbc48333b838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; AnyFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a26e8ad3940f2d0e98d42c8f6114ca511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AnyFilter</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a8e39616fd591e010cfb7c7955f2d8974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::AnyFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AnyFilter.html</anchorfile>
      <anchor>a333209bd9e8d735a0700bce3addadda4</anchor>
      <arglist>(GtkAnyFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AppChooser</name>
    <filename>classGtk_1_1AppChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>AppChooser</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a0339e14a8f3c6d6d8b85da92e35a847d</anchor>
      <arglist>(AppChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a3d05afcfeec09916f0da9683dd085369</anchor>
      <arglist>(AppChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppChooser</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a2c37115966b6cd83507a921c786908c8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAppChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a9de0cbb13a32fc548398ec285660bf66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAppChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a70a0827f8b1c79cd7cb91abeeead7c2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::AppInfo &gt;</type>
      <name>get_app_info</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a51a4e87cdd125c6b5682c998948dd280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::AppInfo &gt;</type>
      <name>get_app_info</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>af0d93db297f24028b39dbb89364d97e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_content_type</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a7dbc4ad2197a742ca38818e3f5771db0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>ad1f9bf49bcb8425312a812556905418f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_content_type</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>af84735d9d4e217bd48eccf1690a6da1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>aab274009015bf6e3b57a8a3a53e2359f</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>acc433b3d5e80408c5d526d1392be1b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AppChooser</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a4e4dba06e67047f62a0bceeea80e9ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::AppChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>ad2cf2cfbc6c8241f9cda1e9ef4246c92</anchor>
      <arglist>(GtkAppChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AppChooserButton</name>
    <filename>classGtk_1_1AppChooserButton.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::AppChooser</base>
    <member kind="function">
      <type></type>
      <name>AppChooserButton</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a4be45cd641e5a97f257a4a1bade3787b</anchor>
      <arglist>(AppChooserButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppChooserButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a09f366cf64db7ad4dd092c03fd218923</anchor>
      <arglist>(AppChooserButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserButton</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a600b889255047a3bd61c1203894a308f</anchor>
      <arglist>(const AppChooserButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AppChooserButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>aecf63c4f4563fd0892ef4bf40df5fd37</anchor>
      <arglist>(const AppChooserButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppChooserButton</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a12f044653cc01f130af54092f99b696a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAppChooserButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>abb43b363a96c73be3d118bce2d954011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAppChooserButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a425e0147ae193a41f0e079ae69c397ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserButton</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>aeffd4e3d87c3e9b7928fe2273ddcbde1</anchor>
      <arglist>(const Glib::ustring &amp;content_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_separator</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>ac05c294c7296eb4d8a51c3ffddfb3d2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_custom_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a5fed67201ec59314a11ec948c7c72beb</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;label, const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active_custom_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>aae0e6e40a720b32c5f6cf98d18db60e5</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_dialog_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>abc62b96274a1f3be93a1fd534e0002ef</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_dialog_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>aa5631a8a9e78ea163ac4b7c32524784d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_heading</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a5b7698873f37a6abc5c4e46568a6720c</anchor>
      <arglist>(const Glib::ustring &amp;heading)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_heading</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a019cdd8b2fa9f5bfb958e6899f3cef4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_default_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>ac1b550aa14fd1902348a40fe531c7b9a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_default_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a306af9b49ba977bb6a28fa29d57839de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a5b9bdabe42831bbe92eca30b4ee5e7b2</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a354acb8dd6cd9c5ea5ea394c2dae8655</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a73e8039c03d84aed6e228eac292eac7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxyDetailed&lt; void(const Glib::ustring &amp;)&gt;</type>
      <name>signal_custom_item_activated</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a0d47d176a51bc6ae39c288075039ed60</anchor>
      <arglist>(const Glib::ustring &amp;custom_item_name={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_dialog_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a92c12014074249e532ea742be6992cc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_dialog_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a9746f011ed34633a1affaca560042d8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_heading</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>ada21d12b1417d0a604e13c69d5039f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_heading</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a2ec9a139814a11c16bfab52b33b2d737</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_default_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>abea0bb57dd18013a9f5ba9f55beea162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_default_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a42b8dfd4bd1d6fca1aa70f045093f413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a5de3d8db1dd00d7ed7ba2e5643f62e0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a3c6120a62cc21c8c80ae47108ea9ff62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a7ecdd0da12c02007dc7e1d6918933c47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AppChooserButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a80919bc53d7a9c1f18f87ffb7644c368</anchor>
      <arglist>(GtkAppChooserButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AppChooserDialog</name>
    <filename>classGtk_1_1AppChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::AppChooser</base>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a15ca415f3a13dac3a57f0f3cd5eeba24</anchor>
      <arglist>(AppChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a9cc14c180aa1ac3df211a725dea5450f</anchor>
      <arglist>(AppChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>aa65081816ebc07e3b05eb79a0c1bbcd8</anchor>
      <arglist>(const AppChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AppChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>aa32f166c9523750807f254ce2277637c</anchor>
      <arglist>(const AppChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>ab8c80d158bc03af3b8f0575b38860c55</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAppChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a3c854ea97f4f8affc5721b148721e1c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAppChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a27ecb80294faffd7ecc7a44513ae85ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>add9dbcb66e68af508d528186aed46321</anchor>
      <arglist>(const Glib::ustring &amp;content_type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>ad0f6656db818880bb290255cfbda4117</anchor>
      <arglist>(const Glib::ustring &amp;content_type, Gtk::Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a5c3a9a752fe2bc881fa9bd9c3c21b7f0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a7d17e152baade671ceaf15f33a684900</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file, Gtk::Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>af06daacc5cdab0ccda4dcbd3daa08012</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>ae9c5bba9f3303cc938fcecfe09c2330a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_heading</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a211d2a4a6f043d8549b3ddc0f7e17553</anchor>
      <arglist>(const Glib::ustring &amp;heading)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_heading</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>aa58036743145c9bf0b52361c035c3b22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_gfile</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a6bbe0dd263e75a1ba4eccf126e20e5ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_heading</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a596a1b7b0aeb85e27de94f226dd1b532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_heading</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>aa34387d37eaa7d013570e89e4cb0ca42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a39a856f4ad0b2b2e578af4b5a9f4df1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AppChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a26b36696ffdfd2b14a3004e436522c69</anchor>
      <arglist>(GtkAppChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AppChooserWidget</name>
    <filename>classGtk_1_1AppChooserWidget.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::AppChooser</base>
    <member kind="function">
      <type></type>
      <name>AppChooserWidget</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a2c95d91c9e0c3328c1cce5295ee6323e</anchor>
      <arglist>(AppChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a4d1e1dc8b046ed0e38cfc74d07dda36c</anchor>
      <arglist>(AppChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserWidget</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a8a042027dc74a8562e7dac3b670b2dcf</anchor>
      <arglist>(const AppChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AppChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a7520aba69fac12bdcddf28b53240d67d</anchor>
      <arglist>(const AppChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppChooserWidget</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>af6193870c57775d9e64c023a85888bf5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAppChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>afbf06341fb55a5f48caa9a04479f07e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAppChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a82a9c9ec02538dd4a85708e124644aaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserWidget</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a17fda5c170c6bf12b214ab9e3da4f3b6</anchor>
      <arglist>(const Glib::ustring &amp;content_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_default</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a77084e5887425d9360d1cd66a5748cc1</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_default</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a88b22f41f32c35a6d8c1e23dae6117bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_recommended</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a2bd21c65e999587fb97c81e0017901e2</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_recommended</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a0bfa00dcda7c8ff51b0d53e19d1da3a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_fallback</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a72a0111b3a2b6f8cced51b49fc32e67c</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_fallback</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a449710217ab08e13e2dee29c6679a983</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_other</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a7cc72e081df6ae56d71b30e1a456bc47</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_other</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a40b2b65abdad4de6422703fbf4a464e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_all</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a8552fa1fa25255025cfa138bbbff1c37</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_all</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a18ecc51168a8012e715cd31ab8d250c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_text</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a952fc27fb2a5363d3fac16486134922e</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_default_text</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>af43c08b23d00b699a1aa99389947760b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Gio::AppInfo &gt; &amp;)&gt;</type>
      <name>signal_application_selected</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a0b882b29b6086744d0b1b39065249c2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Gio::AppInfo &gt; &amp;)&gt;</type>
      <name>signal_application_activated</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>ab318c546ea88404ad09911a14801255e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_default</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a146f9d5f1ea426a17d371c5b77458cc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_default</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a0f67be062b8f3604b82d60b3a23d5bca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_recommended</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a4f2ae7e5c59cbb2df35452bd0f190eda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_recommended</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>af68b52c90837bdce1d95a6f8fabaaa87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_fallback</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>aacd088ea9379a135e243b0c7e859b965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_fallback</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>aa11836452fb1108af055e05b37fc83c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_other</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>adb598c550ab19bfe1e488f65177f995e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_other</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>ac595a1d71a97b5b5715eb1770affa07f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_all</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a5ae611096a61d1652345b8f804d66229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_all</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a101e9855d4b044632dd474a2556e5161</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_default_text</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a8ab1d24c4d424163bc31590da317b6d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_default_text</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a6bbca9bc53c397d5c5565ec09fb6b181</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>ad6254816b4df82d72374dbf185ecd40f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AppChooserWidget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>ab3e4d09f387468db6e333a93dab5f259</anchor>
      <arglist>(GtkAppChooserWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Application</name>
    <filename>classGtk_1_1Application.html</filename>
    <base>Gio::Application</base>
    <member kind="enumeration">
      <type></type>
      <name>InhibitFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae278666c28738b2f08e744359fd1210f</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae278666c28738b2f08e744359fd1210fa6b4ea69e17243db95f7b46c384d40370">LOGOUT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae278666c28738b2f08e744359fd1210fa4239f063a3d4fb9d38a0182be6e39e76">SWITCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae278666c28738b2f08e744359fd1210faee93a0b023cef18b34ebfee347881c14">SUSPEND</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae278666c28738b2f08e744359fd1210faa5daf7f2ebbba4975d61dab1c40188c7">IDLE</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Application</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a166483551669c74538d18df475c02503</anchor>
      <arglist>(Application &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Application &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a04077936b1aa7398749d54528b9064c9</anchor>
      <arglist>(Application &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Application</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a0fd81236de4d175fd829f8a20a7ceaaa</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkApplication *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aeb538b778c1d17c710b824ac0e383970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkApplication *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a97276d5de6163d9ac6075e1ea550a7c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkApplication *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a96b38ed46d42370aeb42afa1023053d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Window * &gt;</type>
      <name>get_windows</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a3ae48f4f9566b2a97a3f4c05c42d1eb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Window * &gt;</type>
      <name>get_windows</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ad6c7de956c5c6ed9fdd3a0a46c2440cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a2d2f04c1cb6c3093747626c4889376f1</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>afe36cb32c2f4dc3ddbc35faae81cfb8a</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a41ede16109c06bbefce5194f4b601780</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a2772d9f33a86b259238356d2fcf8048c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_window_and_run</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aae0f03cba00a3b5cf726c8488b75cfc5</anchor>
      <arglist>(int argc, char **argv, T_Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_run_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>adb4bfc45ad4c27678afdb095fef23293</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_run_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ae658ef3bdc318bd8e921f30e43fac1ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a172cbaf9caf30aeb6bd12fcfa2e9d23e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ae1ee14c635d158cf908ae345105f3ddd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aef25d09a3867f74fc48c36c65b3b2e7f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;menubar)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>inhibit</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a66b7dc011a43c713117fce537c27649a</anchor>
      <arglist>(Window &amp;window, InhibitFlags flags, const Glib::ustring &amp;reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uninhibit</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a9fb884b154e49195ebf245f2eabcaa78</anchor>
      <arglist>(guint cookie)</arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_window_by_id</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aa98871f45913f320abead5ff24fa2b63</anchor>
      <arglist>(guint id)</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_window_by_id</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a7dc3955c5ef8268195844fb1745dab9c</anchor>
      <arglist>(guint id) const</arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_active_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a6772829e0fb11aff67e836aeaa54bec8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_active_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a44e1d2528d907b855da4e3a700dc112e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>list_action_descriptions</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a3891a391d9648ef038107ffbc5e1b300</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_accels_for_action</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a2c99cd853487a3825256a72ee96995b6</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_actions_for_accel</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a61a763e953c85e68430c0f013191340c</anchor>
      <arglist>(const Glib::ustring &amp;accel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accels_for_action</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>af6e771048a9a77c94c36a25f93c66243</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name, const std::vector&lt; Glib::ustring &gt; &amp;accels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_for_action</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aff87b73d32976adda9bdc6398a7d1274</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name, const Glib::ustring &amp;accel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_accels_for_action</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a4f1a68e98dfc9659c1fe1f95cd9f1ce4</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Menu &gt;</type>
      <name>get_menu_by_id</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a987caa0b6660118ac529577dbaebd50f</anchor>
      <arglist>(const Glib::ustring &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Menu &gt;</type>
      <name>get_menu_by_id</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>acc2219c3b4a359cc70a09e62764b8187</anchor>
      <arglist>(const Glib::ustring &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a40dc9251e23f5b6849d582a3b5a2e948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a87792b689b772aa056b7e3e6045a0405</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_register_session</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a8f4d0dcbe37bb11e3bbfaea10af39c4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_register_session</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a5898855bedf18fc62cbd3e74312a4c2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_screensaver_active</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a1ccbff3c8373b166ec76ee12be80e490</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Window * &gt;</type>
      <name>property_active_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aa9071e0aba54228d1ac5172710478775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Window *)&gt;</type>
      <name>signal_window_added</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ad41a62eaa69fb8d035b8bd0325e6f1ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Window *)&gt;</type>
      <name>signal_window_removed</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ad2c7d1f83b390cc84b71f426924307b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_query_end</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a7436a724b8537462f915b6eaaa454564</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a2fad1bb7a36614589ca9a4ed6b9c2253</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Application &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a3a9162424cfce84b84aa8ba675abd4dd</anchor>
      <arglist>(const Glib::ustring &amp;application_id={}, Gio::Application::Flags flags=Gio::Application::Flags::NONE)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Application</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a78b0a0ede6fdfdec771e3f51017b6d91</anchor>
      <arglist>(const Glib::ustring &amp;application_id={}, Gio::Application::Flags flags=Gio::Application::Flags::NONE)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_window_added</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aa5f0f182f2292e4bf095a618eba5ac0c</anchor>
      <arglist>(Window *window)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_window_removed</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a3ee1588b96238b6d68cbda7c284727fa</anchor>
      <arglist>(Window *window)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Application &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a07644ff178af026cdb2c2aaa0758c15c</anchor>
      <arglist>(GtkApplication *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ApplicationWindow</name>
    <filename>classGtk_1_1ApplicationWindow.html</filename>
    <base>Gtk::Window</base>
    <base>Gio::ActionGroup</base>
    <base>Gio::ActionMap</base>
    <member kind="function">
      <type></type>
      <name>ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a77330587d69ad0f2773836668cd87972</anchor>
      <arglist>(ApplicationWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ApplicationWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a9d0ac13142d247ed8045ad91e2d980fa</anchor>
      <arglist>(ApplicationWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a7ea4691abd9f123e7513673ab7415f38</anchor>
      <arglist>(const ApplicationWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ApplicationWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>afb212692f8fe646b1d2f7a849719c4f5</anchor>
      <arglist>(const ApplicationWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a398497f433eddd6e69a04cdc94aa5e9b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkApplicationWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>af201f48ff47067c4bc996531927105bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkApplicationWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a5968ccdffe95ab0f3ad4c8c3f8843ce2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a73c76ebb6d745cd0e86105eff8f5ea9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a1aeabd5e36597952c244d47f9008dfc7</anchor>
      <arglist>(const Glib::RefPtr&lt; Application &gt; &amp;application)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_menubar</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a2643a0163bb874bfe42ba0af40349f75</anchor>
      <arglist>(bool show_menubar=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_menubar</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>af4f9631f4a455d0f694417faff7e9ed7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_id</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a7a89eb71658f1d2b02b784598ca4f46d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_help_overlay</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a2db8d78832081c8e46dac7072d58018b</anchor>
      <arglist>(ShortcutsWindow &amp;help_overlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_help_overlay</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>acecee55375beb705b7bb69f42a8ed003</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsWindow *</type>
      <name>get_help_overlay</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a6152cf00ab92feb6fa343eb761b3c232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ShortcutsWindow *</type>
      <name>get_help_overlay</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a8310363e0b43d92d2eb2e110dfc3760e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_menubar</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a1a057778fb255ce90fb8e894f80c8ed0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_menubar</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>ae99cc7a1266776d08b0063c0c4081985</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate_action</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a40f84ef5c6abe49edc518f8db20330e1</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::VariantBase &amp;args={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a0f93b87680ab1537c86bc94415a725d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ApplicationWindow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a75868f55c5818f3a412aad771a63782f</anchor>
      <arglist>(GtkApplicationWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AspectFrame</name>
    <filename>classGtk_1_1AspectFrame.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ae2d19cd03358407ee08e484690049a50</anchor>
      <arglist>(AspectFrame &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AspectFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a307f2eeb01bab216477e0cf3e78e02b3</anchor>
      <arglist>(AspectFrame &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a2cb0be72d7bee216990b7e00aef423c1</anchor>
      <arglist>(const AspectFrame &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AspectFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a20a4fbc91d5720e47d672f65c253f0a6</anchor>
      <arglist>(const AspectFrame &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a8b2b9055566f6cb3388b6c7de21c8a53</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAspectFrame *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a094c8844ef320a9736eba7f3a9d0bd66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAspectFrame *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a019862f860c944d956012edb9473f347</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a352dc10ff4ad3670f26244d6ebdad281</anchor>
      <arglist>(Align xalign=Gtk::Align::CENTER, Align yalign=Gtk::Align::CENTER, float ratio=1.0, bool obey_child=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ad865252f592d5584b2362c7a80472f81</anchor>
      <arglist>(float xalign, float yalign, float ratio=1.0, bool obey_child=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a621b3a5ec5b51fddcdb1f0d8923c43e8</anchor>
      <arglist>(Align xalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a3a2de696b537e17272b374811996da3f</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_xalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a79c0cc02193180ca8d0c0840b07288b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_yalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a25d675e267075119f06e5d17f5e66699</anchor>
      <arglist>(Align yalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_yalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a6b1efcf05f185214f13161e928b2a093</anchor>
      <arglist>(float yalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_yalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ad3f0090bba4d6adced5707fc92c05453</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ratio</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ac356f48aa1ce896865aff5fb1acc079c</anchor>
      <arglist>(float ratio)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_ratio</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>af82198294edd82a2440e7159027a0504</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_obey_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ad3090fe9bb1346d0fd96039845066346</anchor>
      <arglist>(bool obey_child=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_obey_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a52d34f6e778739e03a706de9a6cd746b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ae72e3222c540d3311bfcab99d2cd2320</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a6d685fcc82a2c51cdd42d634efc64251</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a352d523091492c226b1f2dc7242a6228</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a10babe3aad7a3bcdc80a255a4bc4f029</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a501f1dc1593539616ed318174af9a13c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a0bf371547303496a38187b185fa62a41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ac4c6b9408c47c846a74253c0389283ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a89ab9d314c5a1f5d268e375860a3dd48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_ratio</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>af3871a93e6ca278739ecf82052aa6a5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_ratio</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ac15de41d8beb437e547bfac2bec34aa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_obey_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a4afce989c7195ce1158af8a2ddb1cd26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_obey_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a830af5a8c88c413a7451a722a40b74c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ae4eeb9395e5a27610ca23a36f5d5b89c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>af70912fa44e1049db3e9523dae7d60cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a6f737c53b579c3aa7363b2c186673f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AspectFrame *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ab19eaa639f8f64ce540bee038e121fdc</anchor>
      <arglist>(GtkAspectFrame *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Assistant</name>
    <filename>classGtk_1_1Assistant.html</filename>
    <base>Gtk::Window</base>
    <member kind="typedef">
      <type>sigc::slot&lt; int(int)&gt;</type>
      <name>SlotForwardPage</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aa74e1b3deedd265d30d26ff49e2cacfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>af6a8c3a9bb29b32c717920508e6285b0</anchor>
      <arglist>(Assistant &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Assistant &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>adf0c024603ae73480b6ea456e2aa38c2</anchor>
      <arglist>(Assistant &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ad67f438a8ae63daeea633c434eef60f2</anchor>
      <arglist>(const Assistant &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Assistant &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aea5be1ef05b6292b26446c2cd2a0c6bc</anchor>
      <arglist>(const Assistant &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a2e01792f4937772592e0bc9f1afa2aa4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAssistant *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a78d17b7343a51083a6b1b9e02d32b730</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAssistant *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>af5287cbae83240e241678e53dcc0a5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a907f6de87e742c7174eaa95e6a536324</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a7360ffae7efa5be65771c802eee07885</anchor>
      <arglist>(bool use_header_bar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>next_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a4daa611140246d50429f7b2d6ba44c09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>previous_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a91052d897d6517a7bdbd794bd2a61ee4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a2818b8e74c4d6f139482228155f2c61c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ad9b263c4058a718fcaf560a6a1e9d847</anchor>
      <arglist>(int page_num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_pages</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a4f568d576f4519373ad597c98c046381</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_nth_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>af71ab8d6e2bd0e0d5d6631190388deaa</anchor>
      <arglist>(int page_num)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_nth_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>af456ec9da7aa6e949854df0a9fc7dfd4</anchor>
      <arglist>(int page_num) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a25de78cb8625390ad5a41eb3163b3443</anchor>
      <arglist>(Widget &amp;page)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ab8f7c8233130394b2180c109ae7cf71e</anchor>
      <arglist>(Widget &amp;page)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>abfe5aac9da831bd99cd5c64a1bd5de23</anchor>
      <arglist>(Widget &amp;page, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a4e804ddd9e0830ecd3aa3f628a271ce2</anchor>
      <arglist>(int page_num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_forward_page_func</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ab8cc9c392b6690da67c0b4ee4b309869</anchor>
      <arglist>(const SlotForwardPage &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_type</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a164772cc28e2296fbebb1dc9bc245265</anchor>
      <arglist>(const Widget &amp;page, AssistantPage::Type type)</arglist>
    </member>
    <member kind="function">
      <type>AssistantPage::Type</type>
      <name>get_page_type</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aa04cdef6bf25f5fdab370e666b342e07</anchor>
      <arglist>(const Widget &amp;page) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_title</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a8c146518969bda1e9a003d36a4c0a086</anchor>
      <arglist>(const Widget &amp;page, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_page_title</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a0bbea3a497c8354c937a419da294ab9a</anchor>
      <arglist>(const Widget &amp;page) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_complete</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a65f6446ad7ec44df70ac55ceb859e30a</anchor>
      <arglist>(const Widget &amp;page, bool complete=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_page_complete</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aa89fa9de13a8613f3aff9c217ee54ebe</anchor>
      <arglist>(const Widget &amp;page) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_action_widget</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>acaca72842488d02a69c70f5887579aef</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_action_widget</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a2979d33243ff74a9ef8a711960902b2f</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_buttons_state</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a7d791a2376d7e804e4dc598d370e7680</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commit</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a331e783f3f63f83392dd5506e5256d09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; AssistantPage &gt;</type>
      <name>get_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aa176e4a89492515bc9d7a3501bad7af1</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const AssistantPage &gt;</type>
      <name>get_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a5744ff0546e9af011be57953fd5065fa</anchor>
      <arglist>(const Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_pages</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a072429129452298682e53b7ccd8ee6c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_pages</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a283b4d6e9c13d585b927e8471b275ced</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gtk::Widget *)&gt;</type>
      <name>signal_prepare</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a683bdc45920a3d6c8834255751dd86a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_apply</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>abcd5aa050f7fe63234320a3b4e2ea28e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_close</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ac1fa87f3354bccdd9d93e3b103c4d7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_cancel</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a171dc906d576d9bec59c0eb15367e663</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_header_bar</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a5091e67f5205af050ddaeb7955781f93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_pages</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aa8e463221ad328eae65c039ae5e8c1fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ac710ec78f187541fffe1499e8ce9587a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Assistant *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>abf6f2a854862d49bd3c354eab9528cfb</anchor>
      <arglist>(GtkAssistant *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AssistantPage</name>
    <filename>classGtk_1_1AssistantPage.html</filename>
    <base>Glib::Object</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaba84fe97deaf61cbc7c37b0da747eea8</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8a45685e95985e20822fb2538a522a5ccf">CONTENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8ab467e83d416ac6465e889fd545099865">INTRO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8aa9b685a9e8c2047d4b9faac6217d7b4a">CONFIRM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8a36cbecb886c3fb994669cd10cdbd9f5f">SUMMARY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8aee88634543eb5c2b123bab1abd32c497">PROGRESS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8a72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>AssistantPage</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a4c568170ab1505e1b45a808769a0ccab</anchor>
      <arglist>(AssistantPage &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AssistantPage &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>ae40d2599b5c752f901c05514610091cb</anchor>
      <arglist>(AssistantPage &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AssistantPage</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a413b55e72243ff20cd151ad92bd11864</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAssistantPage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>ae5b9deebd2022184e716644c3db449ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAssistantPage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>ae0f23e94e4e3667b9c4f2e17afe1b8fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkAssistantPage *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a2778f1bcc13b0e4b2c031d6000f56b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a592502e43bd8ffb7593bc9d4e7fc2d95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>af683a9c9feb026378b6799daee7413a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Type &gt;</type>
      <name>property_page_type</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>ab7b07b19ee1f4a6f314f431f2bceeff9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Type &gt;</type>
      <name>property_page_type</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a0dd6e973f62899e988ec434f65963073</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>af3b593839f96a74d22c4c9eb0a855731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>acd1cbf1ecacca8f8b228239fa4242d62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_complete</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>ad8611a03bb2bb57b528aadf827bf8938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_complete</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a9286eedcaa4e3602244a0f4c11f0654c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a6b9a6d0343570720bead64a793eb1c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a46f9c757b62721cfd4840508d4023559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::AssistantPage &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AssistantPage.html</anchorfile>
      <anchor>a5c6d67778ac4bf2a8f0e19d77ed03aac</anchor>
      <arglist>(GtkAssistantPage *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::BinLayout</name>
    <filename>classGtk_1_1BinLayout.html</filename>
    <base>Gtk::LayoutManager</base>
    <member kind="function">
      <type></type>
      <name>BinLayout</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>a9f710b28485d0f0e8c0cb47a2ad29ee3</anchor>
      <arglist>(BinLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BinLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>af410e3c6b3bc6efe16b9b3f350ce5146</anchor>
      <arglist>(BinLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BinLayout</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>ad35061d375a9ed74f58e74e40e23c215</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBinLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>a8ef6b2b1f574e3ea95f691e8c1148956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBinLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>a64454658a341e45779d742a11dbd3f48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkBinLayout *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>a75aad7681173ac1fb305af0647b4d22e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>a6475b11c25b34bb48e25d9a18bb14299</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; BinLayout &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>ad9f0c657de8ca9c9de2164511f86e4a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BinLayout</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>a591af585d99f2a99b52784ef08713fff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::BinLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1BinLayout.html</anchorfile>
      <anchor>a0340cc6478e3ad656a77c5f1fab00380</anchor>
      <arglist>(GtkBinLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Bitset</name>
    <filename>classGtk_1_1Bitset.html</filename>
    <member kind="typedef">
      <type>BitsetConstIter</type>
      <name>const_iterator</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a854ae31d726af895bcbff1f6d638db9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a2f0c23b9b0467c4b908f2d175c5e643f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>acf2e5a6f38c3e6942a05540cb6ec3c1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkBitset *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>acf7d558499104c86d4893ecb53ac3689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBitset *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a88e72c860e6493f08e9b28216f008930</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkBitset *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a6c7977fdaa94ab96b9d3bd52bef8cfbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bitset</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a2b7b5c49f33e96bd535f1a06ad023cf9</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bitset</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>ad08a2c6d76b7c306f755146e8eb3ab23</anchor>
      <arglist>(const Bitset &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Bitset &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>ad499f9e3e79fae78f1da98c451925fc7</anchor>
      <arglist>(const Bitset &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>aee4c99dd84743e008f74c3724693e73f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a32a01d8965e239788afdd4c035b6f9aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cbegin</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>acc1553a39c1e9cbf3b0cfe0a49b37545</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cend</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a1e35315f1d8ee38f01018efcfeae6d91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a7c55dba60e4c96120376d39a59c9f656</anchor>
      <arglist>(guint value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_empty</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>aafef663d4b24a8e5d77dc55a8315691b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a243eea5ad740a0dc4d897241e9747f43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>adbf6fc81a675e8f3f8354d5e42269f6c</anchor>
      <arglist>(guint first, guint last) const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_nth</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a96f321dfb5c92d0b65d90e9a370181fc</anchor>
      <arglist>(guint nth) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a50487e72da3c980926f0f5096d0f4c66</anchor>
      <arglist>(const Glib::RefPtr&lt; const Bitset &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_minimum</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>ad5e5bb309734e92b8e1b57aaa12473a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_maximum</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a41596460776d7df6d463eecaefdff3e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Bitset &gt;</type>
      <name>copy</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a52acd368ea84c03e905afd6d655d09bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a2559b5cc8b9f6306de5a6524867329a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a03d54e8bc6e01d42f4a8b4e46f3db0db</anchor>
      <arglist>(guint value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a47a58ac3c21d0083a04b12a2bb0e1654</anchor>
      <arglist>(guint value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_range</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>adc749124991a80920bfd8db815ab6489</anchor>
      <arglist>(guint start, guint n_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_range</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a5aa221c46f9995422a53f16c369721bf</anchor>
      <arglist>(guint start, guint n_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_range_closed</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a7a65389e3b4082569093266a529b7f13</anchor>
      <arglist>(guint first, guint last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_range_closed</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a1f7f252db2090d0068528230326e82f1</anchor>
      <arglist>(guint first, guint last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_rectangle</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>aeedd3a0d56817b8581aa5acf13285edb</anchor>
      <arglist>(guint start, guint width, guint height, guint stride)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_rectangle</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a883ae200ffc4a096c8672b098b0238c5</anchor>
      <arglist>(guint start, guint width, guint height, guint stride)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>join</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a1ab98fdbdf99fa08f0054f048946f3d7</anchor>
      <arglist>(const Glib::RefPtr&lt; const Bitset &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersect</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>aa89f1656f04a4a7b28bd1382d48060b5</anchor>
      <arglist>(const Glib::RefPtr&lt; const Bitset &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>ade55610478c1f87bbafad99bec9285af</anchor>
      <arglist>(const Glib::RefPtr&lt; const Bitset &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a9a44e46ca31c977ef300bb80cfcb0cf2</anchor>
      <arglist>(const Glib::RefPtr&lt; const Bitset &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift_left</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a544edfc02b9f8137ae67e5c99084f610</anchor>
      <arglist>(guint amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift_right</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a4d896552fbce831300041fdd42ee05f7</anchor>
      <arglist>(guint amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splice</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a91bcba5cd4aec2b2b31869190c9f4318</anchor>
      <arglist>(guint position, guint removed, guint value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Bitset &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>a4f2af1b33df742740230f0b1be1895c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>acc1b644d7db567dad9ada41d88b8dde2</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Bitset &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Bitset.html</anchorfile>
      <anchor>ad8341af24f27c94dcf8f640a7c35c208</anchor>
      <arglist>(GtkBitset *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::BitsetConstIter</name>
    <filename>classGtk_1_1BitsetConstIter.html</filename>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a02717c4e6d6a75d080dd453eb3177680</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>guint</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a4393d946f7d20f12cfdce274ad106fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>afd27d3091fe4c0284ef6ba6a46002c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>af0af50b55ec9d9a35ec7196360023784</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>pointer</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>abd54c6b7404edf9202087d5f2607ece4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitsetConstIter</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>ae4a69c0b5e225ecf883e40b5b727e34d</anchor>
      <arglist>(const BitsetConstIter &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BitsetConstIter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a0e11824f7672a8d6d22de681abf5bce1</anchor>
      <arglist>(const BitsetConstIter &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitsetConstIter</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a8c45792870192046c6392619e0449544</anchor>
      <arglist>(BitsetConstIter &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BitsetConstIter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a593b32012d07b44b41fbb04508b59f16</anchor>
      <arglist>(BitsetConstIter &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BitsetConstIter &amp;</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a309abeccd65d461b5d6a77fd24596a02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BitsetConstIter</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>ab53853e1f5f863fd01ad864e4301e66a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>BitsetConstIter &amp;</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a6029bb85cfe25d168d31818cc1ac2f0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BitsetConstIter</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>ae8b31526ac1fd62ed8a7190850d6efcf</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>aa3822bfd85c64485d586de44c6958ccd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a57ee1cea8372f9335bad244277d70450</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a01a49d117768fe22d32be2ef880a691a</anchor>
      <arglist>(const BitsetConstIter &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a844b774b36101f4d9d08cc78f35d356e</anchor>
      <arglist>(const BitsetConstIter &amp;lhs, const BitsetConstIter &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1BitsetConstIter.html</anchorfile>
      <anchor>a68e306f9e8d2a3ee1ac9f7e560f90a2f</anchor>
      <arglist>(const BitsetConstIter &amp;lhs, const BitsetConstIter &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::BoolFilter</name>
    <filename>classGtk_1_1BoolFilter.html</filename>
    <base>Gtk::Filter</base>
    <member kind="function">
      <type></type>
      <name>BoolFilter</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a7c8dd20fc3c39c039e4192e9d5b3a723</anchor>
      <arglist>(BoolFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BoolFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a0f47148bf1e193440132d29be48e5926</anchor>
      <arglist>(BoolFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoolFilter</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a97cb02e10943d3f88dee1ad67a5e93fc</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBoolFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a66020b014a499bbf911998d6dc5018cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBoolFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a529090cfa7f1d47f10050efee4c92132</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkBoolFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a28c0a8efd71b00bcf700e7ad3efa2a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Expression&lt; bool &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>ab0aa6bd1bb2f6bfd36a15b925b1c073b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Expression&lt; bool &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a89e07bfb88e55cee7aae73b7c03d5d94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expression</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a6d8237ed315285e5c941cf9f37f27fcf</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; bool &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_invert</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a4f04f6543e165837ef751f34be0cf8ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_invert</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a5bedbd92f4080af06118545475175f1f</anchor>
      <arglist>(bool invert=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Expression&lt; bool &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>ab4833e19920334b17d260db2dca289b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Expression&lt; bool &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a8ca5c2b210bd712c87eaf5086a948bc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_invert</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a45219abcf39d54ae7b18102fcab3f0d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_invert</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a9929f67f3a6bc6c9e881e7088c6f4112</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a803736a944a44c65ddc437db2cef54c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; BoolFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a9373568223c5b6c785a913c008f450b0</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; bool &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BoolFilter</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>a111ffac8c4ff6344e022cc1e119e4a0b</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; bool &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::BoolFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1BoolFilter.html</anchorfile>
      <anchor>abb589563bab3fbb51db059cb72295837</anchor>
      <arglist>(GtkBoolFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Border</name>
    <filename>classGtk_1_1Border.html</filename>
    <member kind="function">
      <type></type>
      <name>Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a69b6866fc29d10f4561a8bfef57dbdae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>addb7469760afb844fa3da19ad121a692</anchor>
      <arglist>(GtkBorder *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a9276d025ac8ae896da7a6daf63199574</anchor>
      <arglist>(const Border &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Border &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>aebff09946686f815ec1521e259b1d7b5</anchor>
      <arglist>(const Border &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a4d320a532aa0ad96a3eac2b1956ec44e</anchor>
      <arglist>(Border &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Border &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a257bcb34efb3911ee2376673cd543ea2</anchor>
      <arglist>(Border &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>acf2636c9b6b3d7691665be9ab11ec564</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>ab7855f9d7ff3bbd48c5adcc72832b493</anchor>
      <arglist>(Border &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkBorder *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>adb055977f797045375454ee7a69c81f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBorder *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>ab6f46691f7ab3a656abfecd40e5b8937</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkBorder *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a0bf0d4875cf8838358959d55e0ce63bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_left</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a49653424f8cab1a1f238fcffb1e769dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_left</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>ac07e35dfa5d2c3424e24336d9e8b0876</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_right</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a4957c77cc798e79aae970da204c6449c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_right</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>aaeedd2506a8e421c8ec5d466279cf309</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_top</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a83d909b508dabe018f14b98fdf00da8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_top</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a2c9d581c9f2013de4fffeab17ae5ec18</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bottom</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>aaade048dc7b3f7f5c11eb36dfecd49f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bottom</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a8e13fe8d68ddd34d51c95e3b42e1b267</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a955400a9c20d2fe9b5ed2eb7d85a8448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkBorder *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>ad99a0f06f9433ed845b737f017e5bcfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a9acdf5876177f576856858afb69063b1</anchor>
      <arglist>(Border &amp;lhs, Border &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Border</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a85817bb7b03f5ffc79ee1c73e4e64c3f</anchor>
      <arglist>(GtkBorder *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Box</name>
    <filename>classGtk_1_1Box.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>afc18d8b087bbb8c541772ff4a4c1ed62</anchor>
      <arglist>(Box &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>aae389e4406b2ba12d78f73d3fcce4c02</anchor>
      <arglist>(Box &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a38bd7f171a310ecc9d5d828a10ed40ca</anchor>
      <arglist>(const Box &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a591c88c05918c1ff2ea988b58f750490</anchor>
      <arglist>(const Box &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Box</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a0f7bf8db9c36d028589e330d647b74c4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a0c7fda2b5be79b4bd7937f5d0c4be32d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a88eb53993c429c2d64daa8931c32995f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a297af3c1fbcec9c80274f4974c5f26d7</anchor>
      <arglist>(Orientation orientation=Orientation::HORIZONTAL, int spacing=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_homogeneous</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a1598f08c7a2b29fe26ccd5987c339328</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_homogeneous</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a4666f52a461bd22b1efc54354b40e371</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ab5396cb1385f8259bb49a0c78b55087b</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ae51601a532247f2cede9b60db5f90598</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_baseline_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a72dfb07ad798a201f12be42de439dff7</anchor>
      <arglist>(BaselinePosition position)</arglist>
    </member>
    <member kind="function">
      <type>BaselinePosition</type>
      <name>get_baseline_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>aa3e7b95ec3582042f339bee90b2a93dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ab15563620866352aaed4cf6a49f58ffd</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ab0a0487f8b4a7ebec3bfda8d164941e7</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ac3f1245a6d7fc96c1c216f240836f0b3</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_child_after</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a2fc4bb59e5539a72c4145803c92987a2</anchor>
      <arglist>(Widget &amp;child, const Widget &amp;sibling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_child_at_start</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ad9ea9c0d29e35aab03f75d4a6d199958</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder_child_after</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a82a41c14e3678750aa84f61800d8dbc5</anchor>
      <arglist>(Widget &amp;child, const Widget &amp;sibling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder_child_at_start</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a96e465afc8438fbbae2334b5e90f5ee5</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a1143958089177cb9667b227afe134cee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ab2ca948d1f92e89d53c5038ed17f0185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a5c541e19f6ce03ca08d47d23a30442f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a8818751e2f8900ba1cfb3c0a3be5cd5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; BaselinePosition &gt;</type>
      <name>property_baseline_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a2eb1c39853666369683789ec8f83b584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; BaselinePosition &gt;</type>
      <name>property_baseline_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>aed544517a26f82d0d1590fd44111374e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>aaf23834665f4e2f86c613cd2658ae636</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Box *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a780f8b0bce530c8dbacb01f64615cefd</anchor>
      <arglist>(GtkBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::BoxLayout</name>
    <filename>classGtk_1_1BoxLayout.html</filename>
    <base>Gtk::LayoutManager</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>BoxLayout</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a46dca3be0ccdb8d5c074956f76b223c5</anchor>
      <arglist>(BoxLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BoxLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>ab29bfd5b9d5fde9089e4c8ebfe7be7f7</anchor>
      <arglist>(BoxLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxLayout</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a906ac4a4b478829582aa258bb2827be9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBoxLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>aad21ebf6dfb55480417714f861ea7d14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBoxLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a8aac2a21d71cc419f818513b1ee64f82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkBoxLayout *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>ae794ceecbcae3015790ac6684034f5bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_homogeneous</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a25ac22ac3000a6d247d90c0fe1fe49cf</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_homogeneous</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a0fd4159f7301b824e266ac6ca62825ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>aff154491a071540f280fb96cbd80d686</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>accecc5e228bceb5074fb1beaa901236f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_baseline_position</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>ad7a3f5203d3244c3abdfa7fdc4aef096</anchor>
      <arglist>(BaselinePosition position)</arglist>
    </member>
    <member kind="function">
      <type>BaselinePosition</type>
      <name>get_baseline_position</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>ae637f95604de537218d8cacfa364d5a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a496c93e8563897c6c2ebf38ade36f583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>ada5a8a72f26048e47b0c128277155c70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a6064bb0cc8637b2cccc4bd7d34505a52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>ab0c7d2d26515eb77380d8889a04830e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; BaselinePosition &gt;</type>
      <name>property_baseline_position</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a3f993a24a05f17bf8b08b6f6d57e6052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; BaselinePosition &gt;</type>
      <name>property_baseline_position</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>abd3df5757f66005b3d5ba2d263e432e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a4bf692b8949e8c13dc9aaaf7bea4a0ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; BoxLayout &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a290addcca80a833501974f0a4c7c5379</anchor>
      <arglist>(Orientation orientation=Orientation::HORIZONTAL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BoxLayout</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>a2049196859c29ca5aa1eb8dfe1b31f76</anchor>
      <arglist>(Orientation orientation=Orientation::HORIZONTAL)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::BoxLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1BoxLayout.html</anchorfile>
      <anchor>ae24f5e6a1d87f5447460f25fc1f4cb4e</anchor>
      <arglist>(GtkBoxLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Buildable</name>
    <filename>classGtk_1_1Buildable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Buildable</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a169bd168906310ae757491fc66caba41</anchor>
      <arglist>(Buildable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Buildable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>afc542f6365f1ddd771b68fc95009819b</anchor>
      <arglist>(Buildable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Buildable</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>af70a624155fb5e254be59080412468de</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBuildable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a7985d36d675f0b8bb3bc8ce5cca2e986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBuildable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a0b9077423b729080c530a3c3a7ddd829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_buildable_id</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>abb402614695d237d6ed79b374d5d829e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a3088b7f65ac16a03e2ec7606cfec8ca4</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a6b3029d1f7713b06bcd79784ebbad44d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Buildable</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>afb1d5472f77f9f9176756ce0a3b94d5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Buildable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a988f06e5798940f0934ea76767d79d0e</anchor>
      <arglist>(GtkBuildable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Builder</name>
    <filename>classGtk_1_1Builder.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Builder</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a5a42baaaeb35446b0b341461a0796b12</anchor>
      <arglist>(Builder &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Builder &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a74a33dadbd26676d08cdd0af67d66e33</anchor>
      <arglist>(Builder &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Builder</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ae2f9332bb1b8bad02fcf6a94c4e77d0c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBuilder *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a16ab17cd36e636c3f1495ca2ef2a4f49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBuilder *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a9fb98b415b7d3f3e62c4e363c516e1c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkBuilder *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a43185cdda8ad880fab2b3a9a2c1332d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aa3f4af4e7eaf7861c8283dc0dbd5254c</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a80771efbfbe5bbc053e8deee93e1e118</anchor>
      <arglist>(const std::string &amp;filename, const char *object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a1f9c1e96d66b561bf63df23a32561f9f</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a91e457709626ac8e94172cee0ec7173a</anchor>
      <arglist>(const std::string &amp;filename, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a8d8d4cd407615fef3b71da364c1720a0</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a6f80afb3deb00ab1ca7416d7f5e7c6b8</anchor>
      <arglist>(const std::string &amp;resource_path, const char *object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a25d428b4bff9b39d91c6887524483bd5</anchor>
      <arglist>(const std::string &amp;resource_path, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a516f4c7802dde8bdc6e022ecec20140d</anchor>
      <arglist>(const std::string &amp;resource_path, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ae3520ee31a98ac30b728f93522de8df5</anchor>
      <arglist>(const Glib::ustring &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aac7d6c42f7a53f8be084841948b157d0</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const char *object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a4fa5d22555a5e0f6e532685fde688734</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a994c45b0c9649b1cd48bb1f5cd545735</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>adfc7572f3c7ca879a01481df3404c60e</anchor>
      <arglist>(const char *buffer, gssize length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose_object</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a03e6205cda3bf808c4814a0421465882</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::RefPtr&lt; Glib::Object &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose_widget</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a22180b25c753955cd90d27f316931a8c</anchor>
      <arglist>(const Glib::ustring &amp;name, Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::Object &gt;</type>
      <name>get_object</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a2e2dfd63721cf7dd648e262ed6630f0c</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::Object &gt;</type>
      <name>get_object</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ac998f9890c9949916fd88d6324df5115</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; T_Object &gt;</type>
      <name>get_object</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ac04c9da6214c44fb1df2e23a58d5f5d8</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const T_Object &gt;</type>
      <name>get_object</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a7365a7bb5b43a371ed12e9234ba098d6</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>T_Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a127caae28678df350e90740baba2d981</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const T_Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>afd9f3f980f065c792dcd655c1be823fe</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Glib::Object &gt; &gt;</type>
      <name>get_objects</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ad66ffbd57ad7db95963daddfedec920e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Glib::Object &gt; &gt;</type>
      <name>get_objects</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a913ae55975c2def2b3431db6c1ab36a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_translation_domain</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a9f696bcf8d214f38d61d0d558d641245</anchor>
      <arglist>(const Glib::ustring &amp;domain)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_translation_domain</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>adb14b2699ed40d46a47d03885d968f76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_translation_domain</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a85a82715ada487e10d4f26de1a578f18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_translation_domain</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a0afe1a1d2f92837446339f9ebba76b5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a6064c85a8a8f5be8edaaa182d30ac7fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a3e7bd7f95c1ea1f06b4c2c16458403ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a6c5ea61bdb933606650e7f437d544edd</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ae851b019aeb1b8c0891be99ece184146</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a85a5dbb75e4d2fbdcfee52870eb582f0</anchor>
      <arglist>(const std::string &amp;filename, const char *object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a8dbdea67bb752eb66adec24451516df2</anchor>
      <arglist>(const std::string &amp;filename, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>adfd8cc8a1e10e53c6db6acf46e1c43c9</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a0eccb3ffec9dc9eb10d8eff8c81c11ac</anchor>
      <arglist>(const std::string &amp;resource_path, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a75140285cc33a3e61c333366224864a7</anchor>
      <arglist>(const std::string &amp;resource_path, const char *object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>acacd7a1a7cf55a17f0d4dd450c8fb4c6</anchor>
      <arglist>(const std::string &amp;resource_path, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a05f80c899de87e17683af6e5efcb4b41</anchor>
      <arglist>(const Glib::ustring &amp;buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>abba4d2c8c9eca2663137611854423f3f</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const char *object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a500d841b1e8c9b25034ed24625076227</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>adca4bd102fa23f4e5b824797699887da</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T_Widget *</type>
      <name>get_widget_derived</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a1276a9eca7f1c856392f125446d4998c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gtk::Builder &gt; &amp;builder, const Glib::ustring &amp;name, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T_Widget *</type>
      <name>get_widget_derived</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a96e4dea0dd10250cd23f19824b871b05</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gtk::Builder &gt; &amp;builder, const Glib::ustring &amp;name, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Builder</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a0ba100f27aca463391d4399f6f1880ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Gtk::Widget *</type>
      <name>get_widget_checked</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aff746219ab6618caab01984c57ee0161</anchor>
      <arglist>(const Glib::ustring &amp;name, GType type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GtkWidget *</type>
      <name>get_cwidget</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a94c23a6163a95da0cb5184dcf2544d4a</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Buildable_Class</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aff70e86ce70a48bcda46397dd2ad3465</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BuilderScope_Class</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a6b9c153a5cea05270c1a38b85f8777ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Builder &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a0eed615bfe0b8ce06257406172956946</anchor>
      <arglist>(GtkBuilder *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::BuilderError</name>
    <filename>classGtk_1_1BuilderError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_TYPE_FUNCTION</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9aa5dc4c393471582267494fcfedae3682</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNHANDLED_TAG</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a7d368b087ffbcc231be2de527b7e3301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9abf19cfed11a94160e5c1531e5219a4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a23dc485dcda432b523c307c4c52b43d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_TAG</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a5681960f6d33aefe7fba19c9e083062d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_PROPERTY_VALUE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9ae4af3b6fe81af26e835df022726decc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_VALUE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a89c9f4349f8b394c04872234f0ae145b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERSION_MISMATCH</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a0e56f05948ca1101e08ed8afe026878e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DUPLICATE_ID</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9ae83ab35f8108f9e8c15f497ef5f8822b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_TYPE_REFUSED</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a1bf738e5834f1def6b47b305cb1a7e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEMPLATE_MISMATCH</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a5c50660b3d4a92791df017db4f9c95f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_PROPERTY</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a1e40df6edeb155701f4989b24a7fcbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_SIGNAL</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a6ace9e20aa9d544e4d5f858e5a9d1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ID</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a6831711fd1460104cf2341705112b34e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_FUNCTION</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a790343fad5bdfd9883ffd7c789529686</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_TYPE_FUNCTION</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9aa5dc4c393471582267494fcfedae3682</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNHANDLED_TAG</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a7d368b087ffbcc231be2de527b7e3301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9abf19cfed11a94160e5c1531e5219a4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a23dc485dcda432b523c307c4c52b43d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_TAG</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a5681960f6d33aefe7fba19c9e083062d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_PROPERTY_VALUE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9ae4af3b6fe81af26e835df022726decc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_VALUE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a89c9f4349f8b394c04872234f0ae145b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERSION_MISMATCH</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a0e56f05948ca1101e08ed8afe026878e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DUPLICATE_ID</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9ae83ab35f8108f9e8c15f497ef5f8822b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_TYPE_REFUSED</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a1bf738e5834f1def6b47b305cb1a7e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEMPLATE_MISMATCH</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a5c50660b3d4a92791df017db4f9c95f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_PROPERTY</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a1e40df6edeb155701f4989b24a7fcbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_SIGNAL</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a6ace9e20aa9d544e4d5f858e5a9d1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ID</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a6831711fd1460104cf2341705112b34e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_FUNCTION</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a790343fad5bdfd9883ffd7c789529686</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BuilderError</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>a688d7bb3fa83eb006cb7ec51ec10a939</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BuilderError</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>a18b0b1431b3b0a0519dd5e48b40ffebd</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>adbd8deab787a04d6f565f659b30a0520</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Button</name>
    <filename>classGtk_1_1Button.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Actionable</base>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a5485e46625682236051028e0dad1a9a8</anchor>
      <arglist>(Button &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ad140d910740624195667ca6bb4d27dc5</anchor>
      <arglist>(Button &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a262eeb4749b6477a064ca771f5c64fdc</anchor>
      <arglist>(const Button &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a1bfd7be1d1d0a9f6a585e41bcfd825bc</anchor>
      <arglist>(const Button &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a273b4e38a5bb8ac755b2279682ccc261</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aac9db3896fa8b7576c6f3720846faa1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ae0feae414420fe321854c52e7103c65d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a122a26893f0efe761712c453b83e6714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a405a4a0363e4be77a71ed83c8fb61b44</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_frame</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a85e1bfce0ebe2014645aab78be22a2b9</anchor>
      <arglist>(bool has_frame=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_frame</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>adededec573a6d21ac3f012d07c7789b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ad3f9e419fc13a942f679a8545f0d96b6</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ae23117ece4fed8479f5b88c7ab9b64b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a9c5e6c68d197342c751a22e0403c8e95</anchor>
      <arglist>(bool use_underline=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>af9fa4f191bdb0a55d6233f973e5f2654</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aa0d892e7ff971d76ffca678d41052812</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aff60c256b424cd6e9c9a1c013df633f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_image_from_icon_name</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a5b39630c2999b94e07c66cdd3775eb05</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, IconSize size=IconSize::INHERIT, bool use_fallback=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>adcdca9c1f6bf5eec1a1398de23a99fd1</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>af2aa7e39b2c28d0f976aaa804d67314d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a7712d9534a4ee9cd66c13dc4cb2a5109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a0bda2960dd7d78495b66042d4df11adc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_clicked</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a53fcbe39d09fde964876d730218cb46f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a010a4c64957e08a2a2274d8b7ba457e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aa015dbd6a7ea2ec8b081cdf2d9efa370</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a5e1d69ce0024c248b8c1f9228b9e025f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>abf887af470b65c1968289d346a818a43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ace742e092adfca1c411d934dd7f23e32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a33322bcf0c425298294ef68817f99783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a1de155ece00ae0d83a4dffbe10990476</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ac2a05177735e0c08164ee7d02b721443</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aa160894f42d79396b7f1639d96412b6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ab4f5b14f49b45dac78ff9f67df93e80d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a2c1da221200a5abac95338416094ba79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_clicked</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>abdd079e988525e00b432190866cdc59f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Button *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a97111e31bc75c69c524fa2a944719a03</anchor>
      <arglist>(GtkButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Calendar</name>
    <filename>classGtk_1_1Calendar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Calendar</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ade57bbfd07fb3efaf9d500a0678e48a9</anchor>
      <arglist>(Calendar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Calendar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a87d62a957a0b8d488bff03736fc9e28b</anchor>
      <arglist>(Calendar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Calendar</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>add1c5e6f15c1b04fc4e34c7d49579c0d</anchor>
      <arglist>(const Calendar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Calendar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae9c447b5c4e524d0fe3b6833b34a8da9</anchor>
      <arglist>(const Calendar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Calendar</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>adde14f7cbbc34f540164321da6c705bf</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCalendar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a5c77fb789d84dbd63f0a9cbc289ca3d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCalendar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a0e129065903d24669cbbada4a01b6f9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Calendar</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a44069a16e8d7d2fff4b2bea6d2191661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ab5931ea40817a4777ac41585132dce57</anchor>
      <arglist>(const Glib::DateTime &amp;day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mark_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>af92533fa25818edd3cb67f3fd9b971d7</anchor>
      <arglist>(guint day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmark_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a500a98035164ca01e0d7e063f41d9011</anchor>
      <arglist>(guint day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_marks</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae0a2704feea898f8d788a6549b09bcc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_week_numbers</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a52f70e5c5b703f93fb291b2b2190722f</anchor>
      <arglist>(bool value=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_week_numbers</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a4ba4131023993e8e0eb077e2ed1c93c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_heading</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ac89eb1eaf4add6cc855abd61b62e3c8d</anchor>
      <arglist>(bool value=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_heading</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a370d5c412f05d79657e00d080b1f3c13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_day_names</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aaa4d7c4341e69fa5522946f4519bd455</anchor>
      <arglist>(bool value=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_day_names</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a45e5689b552b416c12730d895fd05fe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::DateTime</type>
      <name>get_date</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ab75adc1d878a7669617f34c6b801dcbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_day_is_marked</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a460f1420ba37e7010a19269a349376e2</anchor>
      <arglist>(guint day) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_day_selected</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ac0170df271c70696394ffe5364b9b5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_prev_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ac816b8313040c86bf0b6da6cc4529b29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_next_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a3a41b83116f7a1a494eba76bb9995672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_prev_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aa479804d4fa0a22ad27429f23ffcd429</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_next_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a35af96cdcf9ccecdd4e725065e324450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a0827d9e2cc2989fc9bd19c072defa3f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a8008a4e98206679f0b647fc7632cf061</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a1f7f38b4ac96d91fdbd4f78495380e34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a6c566329015d67f324cf97d5a3e54caf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aca8612f01e641072e27a2b620ff5e0d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a0dca40f520ff4dd1171612fade5f7bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_heading</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ac6ebca5272de3bb89b92a90f707e803e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_heading</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a7d2877d5c7e1a0fdf20a023a54701865</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_day_names</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a6e7aa2bb303e55dce412a74d48da38b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_day_names</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a6e2bdf57b0466c0bc69c680d87194f52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_week_numbers</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a3c1e5c710d6227bfb0c216249b7f4559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_week_numbers</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a282204fb01ce081c03bccf2d23b39555</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a818f9a159d40703379724fad58e8405d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Calendar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae5253278f825c59dc7e971814fe74c6e</anchor>
      <arglist>(GtkCalendar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CallbackAction</name>
    <filename>classGtk_1_1CallbackAction.html</filename>
    <base>Gtk::ShortcutAction</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(Widget &amp;, const Glib::VariantBase &amp;)&gt;</type>
      <name>SlotShortcut</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>abe00132e20d91854633dd4f22601c13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CallbackAction</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>aabac680fddaa8043e6a70e7bb0423938</anchor>
      <arglist>(CallbackAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CallbackAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>a2d886d8df771ae350991a39263181ac4</anchor>
      <arglist>(CallbackAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CallbackAction</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>a8f6488193aba10739187c7e3e477c988</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCallbackAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>afabd62f2d220ce77e63ceef608fd124d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCallbackAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>a5aa0e759e92dd967e9df1720bf9ff72a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkCallbackAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>a14b7a5b4baee7668361189f0e1d793f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>a8972340782d86ca7ea49cd48bd6765cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CallbackAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>a7de3831f1ebcd76a1ca7b60dbc19e8be</anchor>
      <arglist>(const SlotShortcut &amp;slot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CallbackAction</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>ab0acd63b51c4fae6a6d1ce92dc494627</anchor>
      <arglist>(const SlotShortcut &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CallbackAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CallbackAction.html</anchorfile>
      <anchor>ade6062c671b4756df35d399fd2ca66e4</anchor>
      <arglist>(GtkCallbackAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellArea</name>
    <filename>classGtk_1_1CellArea.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::Buildable</base>
    <base>Gtk::CellLayout</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(CellRenderer *)&gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ab80974b7794d21a4c82ba15566026dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(CellRenderer *, const Gdk::Rectangle &amp;, const Gdk::Rectangle &amp;)&gt;</type>
      <name>SlotForeachAlloc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aa50371b9a6e44f3efdf22050755ea0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellArea</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a13603471814adcdaec95f57976bc9841</anchor>
      <arglist>(CellArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a71c8a02d72e5cf28f77f4cdde8c8e43a</anchor>
      <arglist>(CellArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellArea</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a8eb401b360fd80167a67b20ed40cda15</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aab368879a43f6d4f8c035c467c8c2bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7855345236e87b2db5d94282cb8a9956</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkCellArea *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a456fc286d5c27399f6aab21a9e58412b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ac9b1cfdfcf3b8ccfe4e60b4eb1871b65</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a520a63f3a112b55ed1ea3d1af9d34854</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_renderer</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a3de0adce00b8d27a667202d7953814f1</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a203eda500f751518538321346d5761f0</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ae43e394cdb508af89d8d61a96718c0e8</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget *widget, const Gdk::Rectangle &amp;cell_area, const Gdk::Rectangle &amp;background_area, const SlotForeachAlloc &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>event</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aae81b749f538320b52d0a0ec4d97b168</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;gdk_event, const Gdk::Rectangle &amp;cell_area, GtkCellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapshot</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a653b818893ae65c5d19c3bae9241538c</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Glib::RefPtr&lt; Gtk::Snapshot &gt; &amp;snapshot, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags, bool paint_focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cell_allocation</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a12ba3d906675a5e7d249f85da141f123</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, CellRenderer &amp;renderer, const Gdk::Rectangle &amp;cell_area, Gdk::Rectangle &amp;allocation)</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_cell_at_position</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a524935afa72300fe831edd257d1bcfc4</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Gdk::Rectangle &amp;cell_area, int x, int y, Gdk::Rectangle &amp;alloc_area)</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_cell_at_position</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a0f9dd284de656da0838d42bcaaf29793</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Gdk::Rectangle &amp;cell_area, int x, int y, Gdk::Rectangle &amp;alloc_area) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CellAreaContext &gt;</type>
      <name>create_context</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a80627075f25a0df62b706c75e9718fff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CellAreaContext &gt;</type>
      <name>copy_context</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7f4b713ffbb96a563ef394180bd6da75</anchor>
      <arglist>(const Glib::RefPtr&lt; const CellAreaContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>SizeRequestMode</type>
      <name>get_request_mode</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a07f0b407d00195550956bd45308f91de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aeba5a9755f2369479ea2faceaebd8afd</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int &amp;minimum_width, int &amp;natural_width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height_for_width</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a4691ab7cbc3defef40d7b7d9b1677582</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int width, int &amp;minimum_height, int &amp;natural_height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>af06a85fee1082f16d6d8b3c672d30c04</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int &amp;minimum_height, int &amp;natural_height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width_for_height</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a2d0412e210d4422950980e9dcd7ccb8f</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int height, int &amp;minimum_width, int &amp;natural_width)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_current_path_string</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ad28bd517c00f78ba54e778d16021971d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_attributes</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aa54e30a4ab94bc79c06fd79a0ec8d74e</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;tree_model, const TreeModel::iterator &amp;iter, bool is_expander, bool is_expanded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attribute_connect</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a5eb99d3b2a0cbf7b37545d66f8b5ec46</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;attribute, int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attribute_disconnect</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a66d20f296654d49bd1707629293c79d5</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>attribute_get_column</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ae0fc0d16c7dd20fba7cfeb76f8ff78dc</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;attribute) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cell_set_property</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a229254fadbf6b1933ed9f92c04dec852</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;property_name, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cell_get_property</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a667cec55417983c01ef76a57b7f30c6d</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;property_name, Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_activatable</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a9370abd2dcde4e7dc9f4adc2caf7975e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a33eef08789f8eed37be26f8e6ce6f162</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Gdk::Rectangle &amp;cell_area, CellRendererState flags, bool edit_only)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>focus</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a0dc4a1301f7fd3593488ec243e884b86</anchor>
      <arglist>(DirectionType direction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a8cadd20af1162268c82ebc10df1ca5f3</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ae0588a1de3d41637ce6c85c659efebbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aa6f8b0420358223d6d7529d43d59cfc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_focus_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>af602c09ddd7817febcc66d252be76835</anchor>
      <arglist>(CellRenderer &amp;renderer, CellRenderer &amp;sibling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_focus_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a223df15eae8c8420fb65f2e6e1d029f5</anchor>
      <arglist>(CellRenderer &amp;renderer, CellRenderer &amp;sibling)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_focus_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7566fdf7e64b442779b4d09e02d0dc4d</anchor>
      <arglist>(CellRenderer &amp;renderer, CellRenderer &amp;sibling)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; CellRenderer * &gt;</type>
      <name>get_focus_siblings</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ae99bbdbcd4ae1a6a960e632cf0fdafdc</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const CellRenderer * &gt;</type>
      <name>get_focus_siblings</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aee744b633dace2a4999a02683cc3e837</anchor>
      <arglist>(const CellRenderer &amp;renderer) const</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_focus_from_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a1f0eefd01fac75cbc959bbf8dfe385b0</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_focus_from_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a0582bd0d647b26a1b4ad096f9c2c8b54</anchor>
      <arglist>(CellRenderer &amp;renderer) const</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_edited_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a84636f609ecd4768fa64481ae41d5710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_edited_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a8c2629831e3dcb724d17a1fea1ffd1dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CellEditable *</type>
      <name>get_edit_widget</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a079f52e24a977e2c79e87a4a2f439466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellEditable *</type>
      <name>get_edit_widget</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ab3312ef0b76056f0a260719460e20cb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aa0528dda282d552529db22d8c1f86636</anchor>
      <arglist>(Widget &amp;widget, CellRenderer &amp;renderer, const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;gdk_event, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_editing</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aeb0488f07c84c8b5b93f66650c309114</anchor>
      <arglist>(bool canceled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>inner_cell_area</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a5e774b5a79721ab4743acbe086d60c75</anchor>
      <arglist>(Widget &amp;widget, const Gdk::Rectangle &amp;cell_area, Gdk::Rectangle &amp;inner_area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_renderer</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ab345aa630cec25fca8791eec098671f5</anchor>
      <arglist>(CellRenderer &amp;renderer, Orientation orientation, Widget &amp;widget, int for_size, int &amp;minimum_size, int &amp;natural_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a1cf48a42d767811dc34fb771587aadce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellArea</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7f8391dd7d29a8dc8214f7c198494acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; TreeModel &gt; &amp;, const TreeModel::iterator &amp;, bool, bool)&gt;</type>
      <name>signal_apply_attributes</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a8c51e9ca2708b5e73ae447848718f8db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::SignalProxy&lt; void(CellRenderer *, CellEditable *, const Gdk::Rectangle &amp;, const Glib::ustring &amp;)&gt;</type>
      <name>signal_add_editable</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7ab7456f9f7c4d45978f95ce958dabf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::SignalProxy&lt; void(CellRenderer *, CellEditable *)&gt;</type>
      <name>signal_remove_editable</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a338302edd067f3ddf5cc4d0a485f3174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::SignalProxy&lt; void(CellRenderer *, const Glib::ustring &amp;)&gt;</type>
      <name>signal_focus_changed</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a708a2abb6d2033ca9dc8ca5cdfd5b626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>snapshot_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7efab0a6702ae487619923d7ffa0070b</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Glib::RefPtr&lt; Gtk::Snapshot &gt; &amp;snapshot, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags, bool paint_focus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SizeRequestMode</type>
      <name>get_request_mode_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ac66244ca1d8c714c289eab8c496f56f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a0dd921aaa76582b45412bd5f9c61d709</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int &amp;minimum_width, int &amp;natural_width)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_for_width_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7ff719a02f2ba9a17e29891e66bc28e0</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int width, int &amp;minimum_height, int &amp;natural_height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a2cff57661051a69e0f01b74f3763f607</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int &amp;minimum_height, int &amp;natural_height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_for_height_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a31f558684fc4fe74370dc4a53c165f27</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int height, int &amp;minimum_width, int &amp;natural_width)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy&lt; CellRenderer * &gt;</type>
      <name>property_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ad2c194d4107bc99b7a67584f49de8a4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellRenderer * &gt;</type>
      <name>property_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a9881a74cf58572c7b30a3959c369a261</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellRenderer * &gt;</type>
      <name>property_edited_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ae28455dec4189f72d7bc887ab7974007</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellEditable * &gt;</type>
      <name>property_edit_widget</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a5100348a58eda50e4728d9a5f51f477d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_apply_attributes</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a3f4357cbac9919029b40af716bce613d</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;tree_model, const TreeModel::iterator &amp;iter, bool is_expander, bool is_expanded)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellArea &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a0033f6f33520fe06a8c37f96e6dc4477</anchor>
      <arglist>(GtkCellArea *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellAreaBox</name>
    <filename>classGtk_1_1CellAreaBox.html</filename>
    <base>Gtk::CellArea</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>CellAreaBox</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a48958cfb39929e3c9c52b006616f77ae</anchor>
      <arglist>(CellAreaBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellAreaBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a4377c3aa675a590b694bf4944baad81f</anchor>
      <arglist>(CellAreaBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellAreaBox</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>aec5b75b209dacae18f7e393c341202ad</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellAreaBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>aa393a19a0e95c95aef928b27db0f7450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellAreaBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a866551418451b185d03f9828f5067e1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkCellAreaBox *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a3a306f162ac4139b10dcedebc20b44d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a0df034222113a8a256009f6b85dc40af</anchor>
      <arglist>(CellRenderer &amp;renderer, bool expand=false, bool align=false, bool fixed=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a2e19ea79accd13ba21097c934e737890</anchor>
      <arglist>(CellRenderer &amp;renderer, bool expand=false, bool align=false, bool fixed=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>ac6395dc2725328a45bffb9e66ce7ebc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>ad34b290ac2f3372c592c928ad1d10ec3</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a71926f3fa61529ae3c91bb908c03cbb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a51c2f06aecc6a91b3e37f7331f9713fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a2bcf520adbf06cc105a4833309447aa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CellAreaBox &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a1aacc4dda14cb40bedc4db44facd0274</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellAreaBox</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>ab385612a0affb9021cb9ee444c0f184b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellAreaBox &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a9ccc19f3e2da47a483c253644ea7b6b3</anchor>
      <arglist>(GtkCellAreaBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellAreaContext</name>
    <filename>classGtk_1_1CellAreaContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>CellAreaContext</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a39c2f723c5e3cd4e5efcedd9daa7dacc</anchor>
      <arglist>(CellAreaContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellAreaContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>af2bc094231aa022c21819967d55a597a</anchor>
      <arglist>(CellAreaContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellAreaContext</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a4f5946bc0c7b0cf0b540f904bf4bb1b8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellAreaContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a023479acaaaea05bc24e62e58037610b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellAreaContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a71901e04745156a88fdca143c4183e3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkCellAreaContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>aa1b1b9b871976dcb77abafe15e66bd0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CellArea &gt;</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>aa8f20a6c5614feac8130102aeab13aec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const CellArea &gt;</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a2abbbeca80f4370f28a51957bd1c1170</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>abf46a8a29730c4894c957093080d2133</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a0024e5b765c99cbe5f2d5e96b1f07ec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a48ac49769fa9facb8f4e08e3c631aa47</anchor>
      <arglist>(int &amp;minimum_width, int &amp;natural_width) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a571de5d09ca7a94235536f2c10a72090</anchor>
      <arglist>(int &amp;minimum_height, int &amp;natural_height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height_for_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ae868f1d059852b47c20f81f97860612d</anchor>
      <arglist>(int width, int &amp;minimum_height, int &amp;natural_height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width_for_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a5c5fe4027b86ba786c74434f3cdd04ca</anchor>
      <arglist>(int height, int &amp;minimum_width, int &amp;natural_width) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_allocation</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a7e775b83827c4bdc994a9651cd117c4d</anchor>
      <arglist>(int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_preferred_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>af6c9524566779feba52e19ee35ec3737</anchor>
      <arglist>(int minimum_width, int natural_width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_preferred_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>afc04823b475bfa715232d94f3edfcf6f</anchor>
      <arglist>(int minimum_height, int natural_height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellArea * &gt;</type>
      <name>property_area</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a41bc48fb9dbb6951924d76eae83ceab1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_minimum_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ac659352bffd025079d80aee1f0331bf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_natural_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>addaecf942b17b7d65279a7603e3e7dd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_minimum_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a12cc496bb05eafb9127e77f497f36bc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_natural_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>adc1b8edf9387192bf813cdb47dd55cf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a6b77bbd75822bc65aa96d08a424e1dd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellAreaContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ad75e8519b766d7bb7c034c0a182a1332</anchor>
      <arglist>(GtkCellAreaContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellEditable</name>
    <filename>classGtk_1_1CellEditable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>CellEditable</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a3984e6dda5c04127e5aa928b46b9740d</anchor>
      <arglist>(CellEditable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellEditable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>aea25990e221667877b4674af38837f84</anchor>
      <arglist>(CellEditable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellEditable</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a69aea9f1ee9f990e911ba9177ddf453e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellEditable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a4ed72c5448845c421858991de86b31b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellEditable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>aa7f2ba4a332111282d917f5016243ad5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_editing</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>aaca3d7187c808d58d0e48cf1429d4a20</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editing_done</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a364374949e443a813185aa53f324e681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_widget</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a5dabc928ae791ae02651c50f93aeeb2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_editing_done</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>ae41ecb493ee0d1d1697d97b4cc0383eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_remove_widget</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>afae701e79770eb152255df93dca963cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editing_canceled</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a3902995583b263b9d7445ff1b1d5e7af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editing_canceled</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a429ed1945716a0680b220a0b01a0fcaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a824be5e18538271f751d56b8fa230902</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>ae830c61582b208385f600ca0d642ad1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellEditable</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>af29917f3ffa67959c570f7df88b59a80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>start_editing_vfunc</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a60f3373050bc8b6484205c70f49f812a</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_editing_done</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a93264b6708468f580cbd1966ee028ef6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_remove_widget</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a479fb3237d999c65677383ff1959a53a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellEditable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a8809c69ce71c7b9b889988ce0224ac3c</anchor>
      <arglist>(GtkCellEditable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellLayout</name>
    <filename>classGtk_1_1CellLayout.html</filename>
    <base>Glib::Interface</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotCellData</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a3351fccc10318416a5bc78cf5d86e976</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellLayout</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a57c8016404d666c9cb13a5347e61b8b7</anchor>
      <arglist>(CellLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a678bf45502c8a5f31db88942f75d429c</anchor>
      <arglist>(CellLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellLayout</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a84414aa5789871b840569beaaeb6643a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a175c08fa974896e5fe1cad77ac3de6f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a3df03bcfded0ab7654180f861a5a267f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a89207728ee8a7fce871f8b5afd2843c4</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a9bf15a714d0740e6f3e76e2b0223ddf7</anchor>
      <arglist>(CellRenderer &amp;cell, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a83e9262b85ca69cd513a110b1d5af4bc</anchor>
      <arglist>(CellRenderer &amp;cell, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; CellRenderer * &gt;</type>
      <name>get_cells</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a667bb6d38468750a30600575c540b9d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const CellRenderer * &gt;</type>
      <name>get_cells</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ab96a59ca8d7d53fe13bdcfccf89bf55d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_first_cell</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>aa822386b173fcc643b354a85e87bb03e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_first_cell</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ae5b5b2b55f9a08c379708654a4f46a71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ab87faf407763c4df8985ac7ff985fad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ae1e828ee890b1a27ea8992e67a43faa8</anchor>
      <arglist>(CellRenderer &amp;cell, const Glib::ustring &amp;attribute, int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ae5f84edaa30e5c586ca9266961bb4f96</anchor>
      <arglist>(const Glib::PropertyProxy_Base &amp;property, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a26f3fdcf770420862d59de5d81c63192</anchor>
      <arglist>(CellRenderer &amp;cell, const Glib::ustring &amp;attribute, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cell_data_func</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ac23a02cf056ff0187092f15051ca4433</anchor>
      <arglist>(CellRenderer &amp;cell, const SlotCellData &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_attributes</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>af6f996cbf2f5f5a447b3f3a3f7399512</anchor>
      <arglist>(CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ae29bdb7e0a9944c2ce45a70f43bcb5fc</anchor>
      <arglist>(CellRenderer &amp;cell, int position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CellArea &gt;</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a57a4c6c385897e41e8d1cd83376f1c0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const CellArea &gt;</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a4ccbf89fe08a1ebed210f92fc7275fb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ac844de9fca57125f55e64bf288b6d0c4</anchor>
      <arglist>(const TreeModelColumn&lt; T_ModelColumnType &gt; &amp;column, bool expand)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a9531924552d5f7d9d7edee932274fc29</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a648edf6000ee040c77ea1595235d4923</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellLayout</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a4ab166e93c529908830b3889c6116bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pack_start_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a0a7dc4f737ca7ceb5567ae90fefdfd20</anchor>
      <arglist>(CellRenderer *cell, bool expand)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pack_end_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a1db89a56eaf75ded6d722477b4ee02d3</anchor>
      <arglist>(CellRenderer *cell, bool expand)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a64ab4021e702f8715af7deb604561b52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>add_attribute_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>afc73bf38d630376599ba75a811c84051</anchor>
      <arglist>(CellRenderer *cell, const Glib::ustring &amp;attribute, int column)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear_attributes_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>af8e8726f66d164f8ea663a026dc0bc38</anchor>
      <arglist>(CellRenderer *cell)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>reorder_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a7b815026301beba230e7bbac3634c3c5</anchor>
      <arglist>(CellRenderer *cell, int position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a539219463fddd9da31cd97bbc5f622c1</anchor>
      <arglist>(GtkCellLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRenderer</name>
    <filename>classGtk_1_1CellRenderer.html</filename>
    <base>Gtk::Object</base>
    <member kind="function">
      <type></type>
      <name>CellRenderer</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a08ed25222fd88344a8b5ad39a129ab78</anchor>
      <arglist>(CellRenderer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a78846c9dd4dd1b053afae6327615c7c8</anchor>
      <arglist>(CellRenderer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRenderer</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a773794b7cedbb5a48ebb5e6db0c6d92a</anchor>
      <arglist>(const CellRenderer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>abe7702f0a6596f93a12339f572103612</anchor>
      <arglist>(const CellRenderer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRenderer</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>acef02e679e35c1a7cd917be9e19d8b40</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRenderer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ae40a869d68ddeb2601ed46c955514688</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRenderer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a0ad112cfefd1d05d803da62dc505dd52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeRequestMode</type>
      <name>get_request_mode</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3af3e2a275a374a453405fdc1bdaf98b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>adaae94cdaae11d98d4dadfe935c6336f</anchor>
      <arglist>(Widget &amp;widget, int &amp;minimum_width, int &amp;natural_width) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height_for_width</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a71fa4afbcaa59facf139b1dd6184adbe</anchor>
      <arglist>(Widget &amp;widget, int width, int &amp;minimum_height, int &amp;natural_height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a5d58f598bbbeaccbe4d337430905ffd4</anchor>
      <arglist>(Widget &amp;widget, int &amp;minimum_height, int &amp;natural_height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width_for_height</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a1d367a0343455e8b83397235f88fa266</anchor>
      <arglist>(Widget &amp;widget, int height, int &amp;minimum_width, int &amp;natural_width) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_size</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a9dfaf696104706d0241d77f971c0ebab</anchor>
      <arglist>(Widget &amp;widget, Requisition &amp;minimum_size, Requisition &amp;natural_size) const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Rectangle</type>
      <name>get_aligned_area</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a9162ee6ebb7cc4a8034dbf30fb32bbd1</anchor>
      <arglist>(Widget &amp;widget, CellRendererState flags, const Gdk::Rectangle &amp;cell_area) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapshot</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af3c72293fb3ecffc8ab9c06d0cf9ecdb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gtk::Snapshot &gt; &amp;snapshot, Widget &amp;widget, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab8e8bca60b997a0d8e51d9352426da29</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;event, Widget &amp;widget, const Glib::ustring &amp;path, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>CellEditable *</type>
      <name>start_editing</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a17c141dd8e86476e62719f386886e3b9</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;event, Widget &amp;widget, const Glib::ustring &amp;path, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags=CellRendererState(0))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_size</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a342d024078f987be56fe4e3d0e7fd3c4</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_fixed_size</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af4706abc232ab7df24dc55a037a37ea4</anchor>
      <arglist>(int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a4e9285de25fa7c05d48d6b45cbc36498</anchor>
      <arglist>(float xalign, float yalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a1347fd5f3964aaeeff3b37582f90d5b4</anchor>
      <arglist>(float &amp;xalign, float &amp;yalign) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_padding</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab1aac5488c6d6340d6a3ec6065383381</anchor>
      <arglist>(int xpad, int ypad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_padding</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a58d72ee28cd31a66adb628d05620bee5</anchor>
      <arglist>(int &amp;xpad, int &amp;ypad) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a8b70ee1d03b79b89d4b537bd1a49d8fe</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a5512efc679c5e5d06e201c9f49144423</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sensitive</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a464a4354cce4b7cf948d3fa7bccf1ddb</anchor>
      <arglist>(bool sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sensitive</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af6c86834413fe8ffe00b579eae748f11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_activatable</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a9cd46208e7463ceae552d88956ce5886</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_is_expander</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a4a70b86030be521d9a0c4c6620b34a3e</anchor>
      <arglist>(bool is_expander=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_is_expander</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a09f63bc9b648ab57b3def73f6591ba8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_is_expanded</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ae7bc7ee4b59627b9c455003026f96915</anchor>
      <arglist>(bool is_expanded=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_is_expanded</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ac9f49badce8740677e9d7d90fdf13a67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_editing</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab77106d860fed2839efeec69becde2a2</anchor>
      <arglist>(bool canceled=false)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a13b54ab51a16e340091d4d785dc48817</anchor>
      <arglist>(Widget &amp;widget, CellRendererState cell_state) const</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a7ebfe24f78d547b542bc8698af3ba107</anchor>
      <arglist>(CellRendererState cell_state) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_editing_canceled</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aebb904e360f486a89a13fcbddc9ed4aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(CellEditable *, const Glib::ustring &amp;)&gt;</type>
      <name>signal_editing_started</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a9aa8edc9b30891944d4a65bffc964308</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; CellRendererMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3deb3b229d34f94dfed24f126a8a22a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellRendererMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a44aca4e02b72790424da503ab295be73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af53c9a1f308d36c6a67aaeee8a0639f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a9017b9d065e0e6692e498eca4985779e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a02d86b5d3e6d8c01933005735eb8e3d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a6ee9e284675a90454b3d7034861b0a74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a4b7c2f7b770b15ddbb054a908e4fc4f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>afa0e80da852b7efe6bc5ef59568c6a77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ac8d2a9a1df611b36924bb35fb99bb3f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aa02322882cf0aac959e814c4ef0f9432</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_xpad</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3086fd79c791011c53af6d30f8c869f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_xpad</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af51ef9dedcdda531fcc303fdb7bba4e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_ypad</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a300c8c7165aa2027b2b02d7017847888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_ypad</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aa58b1cfbaa7def8b9f791a2e093065cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a9cd8190dff5232319e47c9744c09e579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aeac5e36a2288f8aaab5d40fb0d108d23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_height</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3bd864a4b69cc7f12d2d65128fc0c473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>abe900be56db3d10c246433eb225b4025</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_is_expander</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a2b13f9463d1153b87f0d200714c30613</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_expander</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a5171eef587b025508e6ee1114067557f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_is_expanded</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab07bdc9a8dcaea453516a8490bad8adb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_expanded</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ae54380fd47031f2fef1e543147896317</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_cell_background</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a1ea01a610f9c4f5b158f96a6b2c2898a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_cell_background_rgba</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>accc70bdc6ae285a4a9b951c58c0143b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_cell_background_rgba</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a78d39fc4941ca6891328b0470fa2a877</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_cell_background_set</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a24ac2b32c9fd6ade15c5884448453209</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_cell_background_set</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a1bc80b98d44eb44057327f41afc20f7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editing</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>abfa762b1ccc71366014870d7ceb38ade</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af01767676fbce8db0179a10fd29e60a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellRenderer</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ad0638b8a04dd1676d8619fcce1955576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SizeRequestMode</type>
      <name>get_request_mode_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a7766b1be763bc5fd4958713d0151bce2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a991b81846cf63e4fe09c59f0cff50854</anchor>
      <arglist>(Widget &amp;widget, int &amp;minimum_width, int &amp;natural_width) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_for_width_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a72ae1edbe01ad84187ed7669973a8407</anchor>
      <arglist>(Widget &amp;widget, int width, int &amp;minimum_height, int &amp;natural_height) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab535aa1f1ff94028272e1ab7717b3de9</anchor>
      <arglist>(Widget &amp;widget, int &amp;minimum_height, int &amp;natural_height) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_for_height_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af5ecbeaec1955fe104848cb8ffe9f7eb</anchor>
      <arglist>(Widget &amp;widget, int height, int &amp;minimum_width, int &amp;natural_width) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>snapshot_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a309cc6c1ae788d0520395c0422051d53</anchor>
      <arglist>(const Glib::RefPtr&lt; Gtk::Snapshot &gt; &amp;snapshot, Widget &amp;widget, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>activate_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ad05e961bf984bf12eb3009c2478dfa84</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;event, Widget &amp;widget, const Glib::ustring &amp;path, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual CellEditable *</type>
      <name>start_editing_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a290f6beddaa7cb80eaefa3c91cc7d873</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;event, Widget &amp;widget, const Glib::ustring &amp;path, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_editing_canceled</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a107db713a7444f11af9bd72d6201cc9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_editing_started</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ad15dd496e9fb3636e8c81156a9e85ee5</anchor>
      <arglist>(CellEditable *editable, const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRenderer *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a7658018083799e3966942a4bd06dc7cf</anchor>
      <arglist>(GtkCellRenderer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererAccel</name>
    <filename>classGtk_1_1CellRendererAccel.html</filename>
    <base>Gtk::CellRendererText</base>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga37ea379a87aa7113a70d1d5f0e528889</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga37ea379a87aa7113a70d1d5f0e528889a26a9c5c9d126e9d098be533639b5a74b">GTK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga37ea379a87aa7113a70d1d5f0e528889a03570470bad94692ce93e32700d2e1cb">OTHER</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererAccel</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a0393e57da46c6b098068153c4df97bcf</anchor>
      <arglist>(CellRendererAccel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererAccel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a844fcc70d031c25d0f3ee72d73ab7507</anchor>
      <arglist>(CellRendererAccel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererAccel</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a0e73a57b7d7a05acaa6520559e143596</anchor>
      <arglist>(const CellRendererAccel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererAccel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a37d315ba43a9b939a81432c556d40d16</anchor>
      <arglist>(const CellRendererAccel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererAccel</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>af527ac28895d9f3f85c057524fefdee0</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererAccel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a567331773f8279f30eb07888b648d576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererAccel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>ad4561f536b4b631a041af86cb7404d34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererAccel</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a8f035435e3c045e1d82c2ec854126727</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;, guint, Gdk::ModifierType, guint)&gt;</type>
      <name>signal_accel_edited</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a766637422874155e2910b8b164e4a0e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;)&gt;</type>
      <name>signal_accel_cleared</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>acb93b0797f1c8d5f08361bca0da9a408</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_accel_key</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>aaa4bba2600127173498236bda8f9cf0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_accel_key</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>afee292edc92c86afe39fc3615daf4756</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::ModifierType &gt;</type>
      <name>property_accel_mods</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a0e8eb5824a3300777aa6180802636194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::ModifierType &gt;</type>
      <name>property_accel_mods</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>ab5c51b096f1edbb01f09c2575b9992d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_keycode</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>aaeb252279c245ca69dcea8fbe491fe4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_keycode</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>ac3cf6996f5e94b793572923a71e9faff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Mode &gt;</type>
      <name>property_accel_mode</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a8f92e8a06cb0f7aa8b93a3e561d21cf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Mode &gt;</type>
      <name>property_accel_mode</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a35588a4729c78d4ec7308015fe66ce9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>aa40e5e4a312cebde4df085b67c46a95d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererAccel *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a0dec9aeb81020933ed85fefedf0390b7</anchor>
      <arglist>(GtkCellRendererAccel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererCombo</name>
    <filename>classGtk_1_1CellRendererCombo.html</filename>
    <base>Gtk::CellRendererText</base>
    <member kind="function">
      <type></type>
      <name>CellRendererCombo</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>ac8fc4336dfba8a03dbaeb8277da47498</anchor>
      <arglist>(CellRendererCombo &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererCombo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a1de0e9c83ac71084b36d6dd84f4b28c8</anchor>
      <arglist>(CellRendererCombo &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererCombo</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>adf2f67e779a6118b85bcde26bad61db2</anchor>
      <arglist>(const CellRendererCombo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererCombo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>afa3c0ab468f7d8ee3524f4cf06692bfd</anchor>
      <arglist>(const CellRendererCombo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererCombo</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a3e2f7054dea312dc1f1e0672a5182967</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererCombo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>afb041ac57316f84c87615f5d87a40f46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererCombo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a97260fc91879e1d66b79495c66fc2d1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererCombo</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>aae7577cfd6695e9e42576530419b1856</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;, const TreeModel::iterator &amp;)&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>ac131f5466178b8344822c800c8740997</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gtk::TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a7ccb0c81d21656cb8045c0cbe9e049f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gtk::TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a10a74f48b7fda1f1a4e51072d51212b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>ac49be590e47430e12481bce25e139044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a085e5aeed8182a3db4fd04f6b807d5d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_entry</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a39aa48d587c73aa60fa56c23a157e56d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_entry</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>aa1f357b0c2d234fc58434bf93274239e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a94de19d84e496c95a2ee14ebb9f271c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererCombo *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a7287f45ac06c7e15ccb5d12d1fbadd68</anchor>
      <arglist>(GtkCellRendererCombo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererPixbuf</name>
    <filename>classGtk_1_1CellRendererPixbuf.html</filename>
    <base>Gtk::CellRenderer</base>
    <member kind="function">
      <type></type>
      <name>CellRendererPixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>abee68ee4a647ec8b10d842fa9cf1a8d5</anchor>
      <arglist>(CellRendererPixbuf &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererPixbuf &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a078de9a121f1dff1e97da9880bad223d</anchor>
      <arglist>(CellRendererPixbuf &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererPixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a09ee5b7e18146cb3c94dfe3443764267</anchor>
      <arglist>(const CellRendererPixbuf &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererPixbuf &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a48fee9a8cedcc7367e100d38844e5787</anchor>
      <arglist>(const CellRendererPixbuf &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererPixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>aceb04386926b19f6e0471c56bc216f6a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererPixbuf *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a38ecaa50f061a147f204034f401c52a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererPixbuf *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ad9e39510980d8df6c5e7f80b324fa9fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererPixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ae9acd752c91bb56b1cd657e669aa74af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a8e9b9c0b34287734cef519fec6e44f9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf_expander_open</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a143da7ac2453cf6be65b0aef49f62e44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf_expander_open</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>add1986dc2b467d896e35eb52456ea915</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf_expander_closed</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a50129b2071f30e8c0b9e1446e250f988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf_expander_closed</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a86556aad579a14f01ec569bf46cddf3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a68a1128cb24f02454302a0ec4d5cd1c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a4e3ee5628544686b91b2322f17207084</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a82571dff99ba4c2f1a140aa377397e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>aa0cdfdd6c727c5759e082dd2cde13e78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a78c7ab185e9c5c4cb636ff052fe56ffe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a68df30f5ecac545f7a0e4d2a354e7f53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Texture &gt; &gt;</type>
      <name>property_texture</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>adeb192ddf9a15e3644c1bfcd7a246dbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Texture &gt; &gt;</type>
      <name>property_texture</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a49b253ff6df02725310290913aab9dff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a31ccbb017113cbc74a29da66159c8a48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererPixbuf *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a116087e1de83b5893eb8a2c7006fb452</anchor>
      <arglist>(GtkCellRendererPixbuf *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererProgress</name>
    <filename>classGtk_1_1CellRendererProgress.html</filename>
    <base>Gtk::CellRenderer</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>CellRendererProgress</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>aefe1c6d9e12f77721b3fc8562b3ea798</anchor>
      <arglist>(CellRendererProgress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererProgress &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>afa9a63bb9f120ed069365b41ca90cda1</anchor>
      <arglist>(CellRendererProgress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererProgress</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a52ef1dfacc9c6d6c0e5b20e3e1ad6984</anchor>
      <arglist>(const CellRendererProgress &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererProgress &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a294c1329a6fcd2482b31351c4aff489c</anchor>
      <arglist>(const CellRendererProgress &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererProgress</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a913295fb972cb19c703b728487f8c97b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererProgress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a3a42e75c6bbd36297994d1b60e1519c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererProgress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a4f83de124e4d8ec813d897bfc193661b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererProgress</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>afd8200e0531263d3244bee234879b5aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>ad8d359e85e926270dd2c2722d893f058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>ae13075692d62e1e6d72f8794b844d7b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a0b9ca38fb459ef0cf9d2d424aacaf8fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a921cd3ceface3a8422a2a513bb5962b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pulse</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>ad6f97e106c22f73195aafc72e0b43a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pulse</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a7fbccd31bbc2ab35b4a7087cdd42cef3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_text_xalign</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a6a6a65c66af1efb94d06aaa49eb3636f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_text_xalign</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>ae373a0180fb553f5b4b8ed2bd37dbef7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_text_yalign</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a97305bd6e35627079e42ced8d6050284</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_text_yalign</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>ace0d2f97665f8c9eee1a3f9ba4644d09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a169475e6b5c06e4b96f0e124a3fed3d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a05830ca4dc84a7d1b2aed6c47b8028a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a37955b6642aedd66af62f0c4ce34e537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererProgress *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a0708bec908981fce5f7963308ed117ba</anchor>
      <arglist>(GtkCellRendererProgress *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererSpin</name>
    <filename>classGtk_1_1CellRendererSpin.html</filename>
    <base>Gtk::CellRendererText</base>
    <member kind="function">
      <type></type>
      <name>CellRendererSpin</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a838b61770e9932750b29e9a4556b4617</anchor>
      <arglist>(CellRendererSpin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererSpin &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a0edf0c1d474f74dc4cf91267c312507f</anchor>
      <arglist>(CellRendererSpin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererSpin</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>ad490134d80bd3e46383e2bded8737bcd</anchor>
      <arglist>(const CellRendererSpin &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererSpin &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>ae81ed13bf5583c84fc598dc03fbde549</anchor>
      <arglist>(const CellRendererSpin &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererSpin</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a3bac5a2eb56bb680adbcae6f73e6f645</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererSpin *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a8ac27efa9673efddc3578a4a667774ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererSpin *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>ae9d9c5a678899e6cacc41a57ac566f17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererSpin</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>abf378becba7ff356df6347c7577fee7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a50d83cae2a2dbb303f27bd8df85ca720</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a714452e583fabc64ca3d32c21c767aa3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_climb_rate</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>af0f5cf6db75c269eb65b4e0b69f1d155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_climb_rate</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a0d492a4dec7808ca85e1f06411c4ed1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a042529a1bdc89803d8af51d6fa2be6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a00206cc4cdb79542c93ffdca5ed50226</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a6da47e0c65be09c5699e86efd7670679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererSpin *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a6b715bad9d4a47ed056ec990eeeaf43f</anchor>
      <arglist>(GtkCellRendererSpin *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererSpinner</name>
    <filename>classGtk_1_1CellRendererSpinner.html</filename>
    <base>Gtk::CellRenderer</base>
    <member kind="function">
      <type></type>
      <name>CellRendererSpinner</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a208eee957393586b8337a6f7024b0d80</anchor>
      <arglist>(CellRendererSpinner &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererSpinner &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>aec133fa9181b67b9749ec895470b96ff</anchor>
      <arglist>(CellRendererSpinner &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererSpinner</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a43324d5b17786bc396d0a241fd92644d</anchor>
      <arglist>(const CellRendererSpinner &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererSpinner &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a862ee70ddc5afa0b70010f6525602a7c</anchor>
      <arglist>(const CellRendererSpinner &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererSpinner</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a394df7292fcdb4b8ab6bb17e4119c9bf</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererSpinner *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>ae2cffdb4bfcf7254204845b1fa514384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererSpinner *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a707680b3e93256401874df3ba7bff954</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererSpinner</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a4124d0825033590785de3ca317b382ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>aa4e5340f0c7ebeaa23acd40d715a2c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a2aabda2f92acebe32d8009962144c17b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_pulse</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a57b3bcba516d0f3de555e1fed84bf203</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_pulse</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a027d59dfc642d21fefb5bce5cf5f023d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::IconSize &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a80a3c5151ad701ef72322c6b9512f1b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::IconSize &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a3855341fff9a8b0d9418b8622b3395ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a076e78fef6c59f8354eebc45eda75cc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererSpinner *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>ab202dff7e38dba5981b868b509dcccab</anchor>
      <arglist>(GtkCellRendererSpinner *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererText</name>
    <filename>classGtk_1_1CellRendererText.html</filename>
    <base>Gtk::CellRenderer</base>
    <member kind="function">
      <type></type>
      <name>CellRendererText</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6d46b475beedc06fdd3be7f7f53f3552</anchor>
      <arglist>(CellRendererText &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererText &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ae48c9fdd969364934fd723a2bce0c912</anchor>
      <arglist>(CellRendererText &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererText</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab56106c9b01fa5a02910f49cda5c22b3</anchor>
      <arglist>(const CellRendererText &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererText &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a66591d6dff487db224964d69bfaad4d2</anchor>
      <arglist>(const CellRendererText &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererText</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>af34bf135df5e82a6629aca22113bb0e8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4ffbd2c93cf18a88ca52a4bc39fe60ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a910d2e045ad2cb4c08fc29ada3455d96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererText</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a51a95de8de0a705102bd384e558844fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_height_from_font</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6562695b656b1bf47b547a975a7aad87</anchor>
      <arglist>(int number_of_rows)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;, const Glib::ustring &amp;)&gt;</type>
      <name>signal_edited</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>afa34ef588ab7b40883d961ad0fa5729d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a16b3a8e3b526f26b42e26d2a33389763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a54d74c5d34405fd1282e6cf3d39a76a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_markup</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1aaa78c29f39106e2dcffb913d500ee8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ae2706db479edc3753664173bfadbddbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a87643fe36eadb575123f1a3fb56f064f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_background</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1831ef58ade6c9ada86c830f6d4693a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_foreground</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aee20faf7aa3b3f644a24786a22335974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a69fae9e8f0ade95b5db5605cb8e3dfb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>afd15529a4bde12ad22f26b481bf12d8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_foreground_rgba</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a13e450dd8a948d2e8ff6fc5dc4185f87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_foreground_rgba</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ac4b68751b401a80638e7198dffca740b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4e10548cca6f5abf048f09edc3c2c4e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a15bcdd672312ad47d47d3f93a35a5798</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>afeda2c2a29e81517f2c00a59e449564c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab9d61e4cd06d0bf9804b827e0fcf5e50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_family</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a240ce2ec252417c2999991e324b3a49e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_family</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a17dfbd15bc57c8ca25d466016176e272</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Style &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aff701fd164f7a60920e1b75ab1925d42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Style &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>af9def047d4d984ee2821eee1103a47ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Variant &gt;</type>
      <name>property_variant</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a25ea25bbfcb169efa578b65648b30281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Variant &gt;</type>
      <name>property_variant</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aab58208e15f6995544d805ab2ebe2fcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_weight</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a2ade25456e249c3d63708db760908dc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_weight</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a7b215431583f3a752fcb9a7ad171d7b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Stretch &gt;</type>
      <name>property_stretch</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4a7a77cc901721a6a4240dd96aa599cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Stretch &gt;</type>
      <name>property_stretch</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a3d71ea995dffff9dd894b6e520dfdc01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a90e37a18ad088ab5cb7f061bcb9b1db0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a7058de32140b18cec0838e8ee3d330f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_size_points</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a9e1410e5a1df4e92b12cc6a9f32d44b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_size_points</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ac85d2c384e8d92b7a4b16e4b8986549d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_scale</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a001afcfcb244f08be93c7c8ff53e68b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_scale</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a02529b28c7c23146fc81e23b35b79b37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a5fe559fb3d312ba68734f29c8d8f6abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a02dff5e7ce8312e8460d9bb769e93d3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ada109a94faed8feec76511226b018c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a3133744c25887e0231b633d8f5fe18b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Underline &gt;</type>
      <name>property_underline</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ac01c2d4a3ce38b48e0eadc80840d86f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Underline &gt;</type>
      <name>property_underline</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a22ae78147e6fdc63b814d294b88673fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_rise</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a5307feac2b1dfb5eadd1cc63f9429968</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_rise</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a081cd99190a45df916dbaaea885dd997</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab9a7f9edcb00be7b32cf9d35767557d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a319acf319ef99a7b9b1f595f299ba63a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ace14d59242935c417096fb53509ebbb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8571e33c901bf9333bd0bc70567076e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a0cac4bfea19568add198eeaab7df0e82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ad47fd296b67be60614d6e08644fe9d80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a01e1fdd8927272cce47b206227403331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a70b24a5f0ec94a334ad9c5fcd632a7ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a72d49ef956acb0237c066cf6ce8cd7ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>acffb08e96dacd5b3fba36e4869dcb8bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_wrap_width</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a90920ae30815dbe63377e71305931117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_wrap_width</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a24ec17c2fca58c3e6357631872b73809</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Alignment &gt;</type>
      <name>property_alignment</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a3fa4f0f5f3ce31da77b203ac3a31fef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Alignment &gt;</type>
      <name>property_alignment</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a104ded256c760043a0808a6e2aeb407b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab44071bc6725104945d559abf8bfbaac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4c7478221a72fcca8060e4094f7f20ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_foreground_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a272009a063251ea04ba4c11790cea736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_foreground_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ae42196cfc8238831be16743e9cc6c657</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_family_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6839ca0090c4ad591a5066276020c8cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_family_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aaeb377c7a3e04988d763dc21279fd945</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_style_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a349f5676f84dbbe2638ae2736a984a0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_style_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a95b3d6e6c8b2c78640d5f74a6559e27c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_variant_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a540176f4e372175e8f6ee120dc8a6e55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_variant_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ac9591fc81899ff70d51673d79fa37b7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_weight_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a9cda8ef9fc909781e0179c1ce7a9af07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_weight_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a73c5b7c2c0a975e43d89d5fef5ec153b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_stretch_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4cd435e41dda86ab62ca926a19e87497</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_stretch_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a5d537d8668f38237b848708ebc99ba09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_size_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1deae8414d6ae2cede9f9164448b83b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_size_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ad08643cb4649978a32fb80ab35aa4836</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_scale_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4730679c1c83e36b4594154caa12e9e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_scale_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a52ded9fb196fd1e745e41104cad4b734</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a992ae709215b40725b29e5e0c8f1e765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a61c6dd4321a610d65afc77a939f0e9a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a584d1ae0e4070eabb5bc2eae1691b9cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>af61c59efbebdb190fe7f030abb46b313</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_underline_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6467db349a72582bf9f535742f074684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_underline_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a42442ad291e5da7b4f67a2640780cbd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_rise_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab39b0740553ab6d2ade153911d016d01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_rise_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aede96355a7dcc31e7395ec422e99b0ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_language_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6b896cae706f947b01ccd4101c85e657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_language_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a172cfe9f0d6006a51ed2eb21b635345f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_ellipsize_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aa1db4f8f50b6477821048ff44a5fb0c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_ellipsize_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a59b6ed9192308027f29814de16176308</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_single_paragraph_mode</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aa8682c512f393c80581fddd9900e4048</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_single_paragraph_mode</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a633a42c4ff9f57d5154442ac7097a059</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_align_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a0463ec467ed4568efc7112595d359589</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_align_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a19c599d1f7316f7e405b43381e3c6139</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1767387b922fe5cf05b20dd133b3871f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8cd1fe13eac45d8f881ffbeda98a1402</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8c0ae402bcd97410897ba3a32a632185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>edited</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aee211c5f2679e36518ebccc6c4c7d161</anchor>
      <arglist>(const Glib::ustring &amp;path, const Glib::ustring &amp;new_text)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_edited</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1378d48fa4ca7dceb75685a0ba2d9262</anchor>
      <arglist>(const Glib::ustring &amp;path, const Glib::ustring &amp;new_text)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererText *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a013738a392f96b031b37a0a2bd2b6869</anchor>
      <arglist>(GtkCellRendererText *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererToggle</name>
    <filename>classGtk_1_1CellRendererToggle.html</filename>
    <base>Gtk::CellRenderer</base>
    <member kind="function">
      <type></type>
      <name>CellRendererToggle</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ad8cf057857e6bbef0ff70b392a24c4cb</anchor>
      <arglist>(CellRendererToggle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererToggle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a936c8b2fe9b006c75860be5252dc8e58</anchor>
      <arglist>(CellRendererToggle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererToggle</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a5470b2ab5870eb1072bebd857a367ba0</anchor>
      <arglist>(const CellRendererToggle &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererToggle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ac06d58a10f51aaf014e84edc67aa87a5</anchor>
      <arglist>(const CellRendererToggle &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererToggle</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a2473da49403c0d81f6f61aa00052e170</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererToggle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a8fe0299e4a6bd59dcb77014f363c0e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererToggle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>afe5e38c71e638f2b57e1f1df34ce303a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererToggle</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a8673a65fd695726d0f66b2cdd4074441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_radio</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a4a68294fbda8fc3e681fb297cd54dfec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_radio</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ae4a9d4381241c8de098e07b40b8dc5b1</anchor>
      <arglist>(bool radio=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>aa2995d6f76c84ff9a3f85dca6ae18cd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>af966fe3feb0fc29b29215581178741c1</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activatable</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ae0042dd7f8e2cf3d30cfda6ff5be87d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activatable</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ad8116336e5ca69f217de49dddff4c02e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;)&gt;</type>
      <name>signal_toggled</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a91f09e7270ef4e86fac48b8b8aa5ee32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a8226b86f72c1ecef3c2aaf22760d4e33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a67d044de2d12b3b0e75fbec382aba3c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a2017685ba9b51dca7becd6393b9c037f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a6463734983944f83b5c92365bce89deb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a6b5cf0b1dc9ee96b5d4b25b35fcfa3d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a265a36346bde862c52baa1db40199752</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_radio</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a52e167e903b87ef8d831a546836268b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_radio</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a0de227702203a413cef149b1234872fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a836dfae69dfd867e277e5d3c88aac415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererToggle *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a789e9a66d8a408a6c14855db42dd2d36</anchor>
      <arglist>(GtkCellRendererToggle *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellView</name>
    <filename>classGtk_1_1CellView.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ae10d908621bec101829d753f132ed90d</anchor>
      <arglist>(CellView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a9355809c2bd12ce0cc7109d657dda4cc</anchor>
      <arglist>(CellView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a8a0dceee4b2e432b6d764261edad1773</anchor>
      <arglist>(const CellView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ab589ed107b446b6a72909391b6ee7540</anchor>
      <arglist>(const CellView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ad737532b5857a06f2f892b45c175e77b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a9ed6cb8ffe144660ce9c6a1f0a88cfa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a2b704bd05447ef9135f78e65cc407bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>acb1664c48bafac841f47a8eb59e8f77a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a321f3a6c1cd87f098cd3713819a10af5</anchor>
      <arglist>(const Glib::ustring &amp;text, bool use_markup=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a16d222394c807c29de8a9dc36ca754c3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Texture &gt; &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a07f23ab38d6b15106681f20393f8edaf</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a6504f3a47389217ead939d5c698b23c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a3a7a26f3c241b8bd7c215ab35b9855b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ab7305b538beb939f6e86d3270030459b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_displayed_row</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a45c7faf24dc75d1c7585c8c7092c345f</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Path</type>
      <name>get_displayed_row</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a1c013510d50b94bdfd542750b5b9093c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_draw_sensitive</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a8f09b4c4fba9a31fc11d5a86e09c1c23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_draw_sensitive</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a1eae8ebb6cfca0ca6079034aece12c02</anchor>
      <arglist>(bool draw_sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_fit_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ac7923a6aaa4d17f11b9befd0f45f73f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fit_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ade57672c261625381903affd0aef8115</anchor>
      <arglist>(bool fit_model=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a36ba3a47c5cc0c813cdcbd24e18fe657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>aaa16ffe6ffdb4aeae681c97bc4742682</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a281c5425ecd8a2e41f5c386e153427e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellAreaContext &gt; &gt;</type>
      <name>property_cell_area_context</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ab4fb693171c2d14f6c691d2ad17b0f77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_draw_sensitive</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a9dd2727a2f0323c482575d2915470b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_draw_sensitive</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>aef058002bfec563bf86ff156a963bdf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fit_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a105455813a83dff81465373493e484d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fit_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a592300ecc5ce835c4045d0d927a4c406</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ab0811d3586043025ea43692bce71bc0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a1f2a50e4540a46d52ed5d979a6272fdb</anchor>
      <arglist>(GtkCellView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CenterBox</name>
    <filename>classGtk_1_1CenterBox.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>CenterBox</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a9c6024cd5a4884dae6761c878f7b75ff</anchor>
      <arglist>(CenterBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CenterBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a3bc84c24b02bec103635302d34495c64</anchor>
      <arglist>(CenterBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CenterBox</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a6b0d8798da7881a313796ad59eb007ff</anchor>
      <arglist>(const CenterBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CenterBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a5a304710ede0548c7c41fdfd344ba662</anchor>
      <arglist>(const CenterBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CenterBox</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a2ab7caf92a053b04b565071003930760</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCenterBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a93e6466493717e6e2f20c7541cf5dbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCenterBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>ae73cf9692c8a7a9e3707447d99e3226c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CenterBox</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>aa8aa945be46bbc14e4f6020af3fe6fc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_start_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>aab672db8535245a28627994fdd46a89c</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_start_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a25b1954b4d9bd45a7c63b227664c6dfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_start_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>ace791b13da0072f899dbbd21810473f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_start_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a1606579bc0ef176cd21914076e1e32af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_center_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a6acd96e7cab607a68b60eb495027ef25</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>af6d64aa17245d7f0ee4669563e35d1ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a074de2e3b1a9b129054785c1908aaa0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_center_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a3230a2292a0d9364fdaab3c73a46d3d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_end_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a574b82244f4098dc09c1a1faf4f222a1</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_end_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a5da4abf06c932bd2b58ce96b20f3c96c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_end_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>af036e56fd39e0a38878544ae8ffda913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_end_widget</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>af3f73e85d8e4201063b12a67a59770bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_baseline_position</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a814d055e042e51d91e90d917ca48cf03</anchor>
      <arglist>(BaselinePosition position)</arglist>
    </member>
    <member kind="function">
      <type>BaselinePosition</type>
      <name>get_baseline_position</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a2809f569093354468f990911c02e43d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; BaselinePosition &gt;</type>
      <name>property_baseline_position</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a1352f8a191aa8f4e6afdf44c4d0fed81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; BaselinePosition &gt;</type>
      <name>property_baseline_position</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a867fd47d8a9968e116bc055dafc5b14a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a9b5179321d231fa987bc37fe3761528a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CenterBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CenterBox.html</anchorfile>
      <anchor>a595e92fcf689ba40dc64cfaa0c91c82e</anchor>
      <arglist>(GtkCenterBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CenterLayout</name>
    <filename>classGtk_1_1CenterLayout.html</filename>
    <base>Gtk::LayoutManager</base>
    <member kind="function">
      <type></type>
      <name>CenterLayout</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a1a45bdf11ba98a0b55598d9178cdde79</anchor>
      <arglist>(CenterLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CenterLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a76a3f7351c1fbf786c460403dfb825d1</anchor>
      <arglist>(CenterLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CenterLayout</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a28eee20fbfe6514089c69dd18b218a88</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCenterLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a2e9962ce30c25df4d62725ebad5302a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCenterLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a6a70e5519b5bd379d81cd0631b1ab6e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkCenterLayout *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>ad23039d25a819a69173ee7ec5bff6af7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a26af808ebce5e57dcb6c926b84889eb0</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a251e1199f443cd485472b9b4d48db246</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_baseline_position</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a9c7e7c43c56cfee35ed44b917f1e3703</anchor>
      <arglist>(BaselinePosition baseline_position)</arglist>
    </member>
    <member kind="function">
      <type>BaselinePosition</type>
      <name>get_baseline_position</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>aa09659afc86d5f9b6311117f0464a57d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_start_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a0d18da53559439360524cad2d6a8d16b</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_start_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a4b6937eb1d3cdae3cc1958867fc5bbc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_start_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>ad9307cc610345404aefad3ab06f62305</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_center_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a1e985a5410e01afa2e44429837316530</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a4b58f84070ba500c8e09049cd95e3145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a7ff4e80da9fc2396a058a1a784899586</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_end_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a5cf41854ebb107ed7d40590bba0c65d4</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_end_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a447e0712fd53a3941f7838940c99c33d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_end_widget</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a0ff1502a10ac78b0bd70241f4b7d7cb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a1d252e48bd83b170a80c1413110a87da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CenterLayout &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a2fe522fd9b52d73cba601bc45112eeb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CenterLayout</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>a0ef0cdb14e85e2c5c31880f19c6c3e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CenterLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CenterLayout.html</anchorfile>
      <anchor>abb71b0e4031bbea7412af1b4a16a402e</anchor>
      <arglist>(GtkCenterLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CheckButton</name>
    <filename>classGtk_1_1CheckButton.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Actionable</base>
    <member kind="function">
      <type></type>
      <name>CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>ad1cec8acdc10904f83cb2b48545ea97f</anchor>
      <arglist>(CheckButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CheckButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>ab09a239c291f4b6638e44a62f011abdb</anchor>
      <arglist>(CheckButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a126763cbe22ab7c197d70cbc99f4daff</anchor>
      <arglist>(const CheckButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CheckButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>adb3c046cf48418f2b86f982365952905</anchor>
      <arglist>(const CheckButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a4a748aa94119bd0563c519eaaea28f4e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCheckButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a9c03c6bb7097d41b6a1d7437259e7cee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCheckButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a1f9b7c835dd5ad9b96345731fe5566a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a5f3a383438e1043eaec2150e99ce4e77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a44c85c68143c52c7500e970173a23688</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inconsistent</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a4d762261e2442ce794b6c5eb4852af9a</anchor>
      <arglist>(bool inconsistent=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inconsistent</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a4721b8bc4e76222ead3ba8bf0217fcd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a6d0edb932978d91ac1775e31db5e15c7</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>afefa1d8157e412649efd35dc2d356f61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a881d5a5d6e97de47e13b68160bf77e7b</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a2b1230471677ff08acef2990f37c8649</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a86856be1d2f357acac3916bad0795815</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a0c226cb381a3d41a6f2d781eb1575b3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a41e3f6ad2be35479285f72ca98e5df12</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a65f66f54c1db2fb1e921286a312d2cad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a5d5279ab7567dd3456eac7d83c8ced76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>adb27d021a1715694887c03fe7ca83d7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>aaebdb911bfe2feed341aca6d12d497c6</anchor>
      <arglist>(CheckButton &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_group</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>ade03fec09f575b5e820001f6fb3ab593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_toggled</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a17dd57b4ccd56e68259aa71518ef938d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a856a411b037b614a96888b5d0de79acb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a551aa37d246f6b116fcef09c79dd3426</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; CheckButton * &gt;</type>
      <name>property_group</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a01a11f31532214819a04fb9c393db7ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>aeae336b1ea306ffa144e90498746a8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a6804afd302bf269cfc3292e4545ee41c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>ac06afe92de70640bcc655ba2f6385b29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a80fd6fdd8fe31dad2de60672396df04a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a2db8fd56973a987dc8a31d25a21e3005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a35ffa92b6eddec7c7806b2f7618f4680</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a4de8861aec26e207df5d071b87ab03da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a119d9bd3d576d129947ac438484242f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a360c22fe8e6abcbec9e1585d7e1304f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggled</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>ada5fc4118e13acbf365c9212cf85ea0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CheckButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a8105b4f7b65bd7214aaff8a0ab0235c5</anchor>
      <arglist>(GtkCheckButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ClosureExpression</name>
    <filename>classGtk_1_1ClosureExpression.html</filename>
    <templarg></templarg>
    <base>Gtk::Expression</base>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ClosureExpression.html</anchorfile>
      <anchor>ab4261dc0bcc6f1dcdad7f9a963f5d63a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ClosureExpression&lt; T &gt; &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ClosureExpression.html</anchorfile>
      <anchor>a8bda1dc7c15b5c59efe2a437040c5b92</anchor>
      <arglist>(S slot, const Glib::RefPtr&lt; ATs &gt; &amp;... params)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColorButton</name>
    <filename>classGtk_1_1ColorButton.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::ColorChooser</base>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ab53e529a48305722ea8dded39443369a</anchor>
      <arglist>(ColorButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>acbf4b6ef2cf5afbde348d8a1347ab2bb</anchor>
      <arglist>(ColorButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a5ce3a520a3baa6a2beb2580196872d1b</anchor>
      <arglist>(const ColorButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ColorButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ad0f06eb963a3990ae89102dfbf4c37c2</anchor>
      <arglist>(const ColorButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ad29f1a52def5748e1aba7f28ce241b64</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColorButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a1faf17015e5af54cfaa60c263e3b487e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColorButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a5ac84de7a367ab5089b41a8b5545d572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ac12239750b35f3cd2594563d479eda6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a68c63881465f1b2229c032978fc94625</anchor>
      <arglist>(const Gdk::RGBA &amp;rgba)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a6fb0f55e86936a07c6c062113b0e323d</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ad8710f9d4d0b18112f62d955d74040fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a2b6f3ccb848ba3f1cfe6af9323058e54</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a695c95e303fdbc66712abb2bc49df6f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>aee497a705e3c66ef47616acd9bca7cf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a6b2bbc7ee6c30f10b057c556b83c14d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_editor</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>aa06718498e876e6daf53a388e9df5567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_editor</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a197b2287e1a24d3ccf440a98460a3ee6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ac25a47034d5d5b3ee86a9c9a38d84205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a7ed6d05c01c323879e14de29a47ca566</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_color_set</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a5e0fccd26b93fdf99e45c90fcdd20ed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a88e60e79fa0102785b6e6ba5a107fb66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ColorButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a14285f6a8086a0fe5296df841f34e5ea</anchor>
      <arglist>(GtkColorButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColorChooser</name>
    <filename>classGtk_1_1ColorChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>ColorChooser</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a7f6799348f6e3971e2f214d6f80c9aa5</anchor>
      <arglist>(ColorChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a9cdef87fb023d66c944175b99ca7add9</anchor>
      <arglist>(ColorChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorChooser</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a98fd96e02c2402f291a1b6a2c4115788</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColorChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a148810acda9189bc68b34de9c5afcb06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColorChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a7e90f5c1371a32aa80398d838e499bef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_rgba</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a452b26b6dda47395cfee3f7153b7c6ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgba</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a7f9d3db2d16b8045b0b7fb95f27dd191</anchor>
      <arglist>(const Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_alpha</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>aed60330fcb9634584dbfd928d6c2bd5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_alpha</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>aa10a53ffdd16172c445c404adcac48d9</anchor>
      <arglist>(bool use_alpha=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_palette</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>ad81846e630d60683615f441783f8c52b</anchor>
      <arglist>(Orientation orientation, int colors_per_line, const std::vector&lt; Gdk::RGBA &gt; &amp;colors)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Gdk::RGBA &amp;)&gt;</type>
      <name>signal_color_activated</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>ac2064824743be3ba1bda4fb44af2a7ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_rgba</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>aee55b1d0fc268a870a865b7cc1f4669c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_rgba</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a0e1cbaeb45837c48350b6e95af64f6eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_alpha</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a9df8b5c552300bb8fce184a6c80de068</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_alpha</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a1dbe4b8794aa7596836653ad03a8ec78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>ae075ccc67b0bf26b8c18618f21dfeb0f</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a4181bb09729fc11f1a8c383f60801b53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ColorChooser</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a0ce89e3fb3a6cb31b57041834043ecad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_color_activated</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a654c418c0a4faad29d0d145ef1c8ec65</anchor>
      <arglist>(const Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ColorChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a22d622e30bd66d48d1fad2aa07c327a8</anchor>
      <arglist>(GtkColorChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColorChooserDialog</name>
    <filename>classGtk_1_1ColorChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::ColorChooser</base>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>ad769095cf10b7e1e74c4b08c659a3a2c</anchor>
      <arglist>(ColorChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a615ed1784b5a5abb3e3c29a5a39b7a7c</anchor>
      <arglist>(ColorChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>aea437c7835a60728cbe895e0de450ca6</anchor>
      <arglist>(const ColorChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ColorChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a4721bea0173628acaaf9cf6db48adb1a</anchor>
      <arglist>(const ColorChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a8d63c429aaab4444bfbce92a0be99054</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColorChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>abd81fd4996ad4ee12a892c8810269dee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColorChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a805dc4c5067e46f4f750508f59ae03c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a1c11952155f77cbd9bdc43bd2982ccee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a7438fefbf767b6cd12d7e62f4cd0e4e5</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a9dca69a7ae351f9fcd59e770024bc0e5</anchor>
      <arglist>(const Glib::ustring &amp;title, Window &amp;transient_for)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_editor</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a586aa158857b585c0f2b060b160f7e8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_editor</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>ac49bd5440f51b55a69ed2ec69768989c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>ab6c289eac2f9b4a7a27c57eff8d37bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ColorChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>acb3e8104a3909a5de3e4afc6c4ce1b01</anchor>
      <arglist>(GtkColorChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColumnView</name>
    <filename>classGtk_1_1ColumnView.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Scrollable</base>
    <member kind="function">
      <type></type>
      <name>ColumnView</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a90ed2ed27a46cf2d21788c8b4773a2ab</anchor>
      <arglist>(ColumnView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColumnView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>aaa75d5849f9495691b5723f70d0e77ee</anchor>
      <arglist>(ColumnView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColumnView</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>ace7f718233787c69151b8222cae25504</anchor>
      <arglist>(const ColumnView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ColumnView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a68a5fb1dc7f0aaee253423c3001eca9e</anchor>
      <arglist>(const ColumnView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColumnView</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>aac33f8dd699b2c004f9efe2d1cb465be</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColumnView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>aa642e5ffd06348c9a538e4fd5fe1f0d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColumnView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a6f1501e42e287fdbb613c2b15b3c823e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColumnView</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a787217e91174a74a4c56f6972ad306f5</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_columns</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a1944d201f797a13a9a0953c88fa21555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_columns</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>ae04a9f05f45e9fabfed7ea7bbfb543d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_column</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>aa5a04a3d33e619aff38e48108bb36866</anchor>
      <arglist>(const Glib::RefPtr&lt; ColumnViewColumn &gt; &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_column</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a68105b67a221dfa76a55d5e8eb7dcde2</anchor>
      <arglist>(const Glib::RefPtr&lt; ColumnViewColumn &gt; &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a6fc6551de69c3505c2f077cda8f18b7c</anchor>
      <arglist>(guint position, const Glib::RefPtr&lt; ColumnViewColumn &gt; &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; SelectionModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a5becda7c965939b693c0130ca4d5775c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const SelectionModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a68f976cd99363a702c79dfdfe5777982</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a4656fa24fc5c61d01db66c05a136730c</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_row_separators</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>aa3c03504bd8dd9b8233a3f4e39aaea68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_row_separators</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a98729436f420ce7d3d0ffaca137f8be1</anchor>
      <arglist>(bool show_separators=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_column_separators</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>add3e736339999e65a77db9b8f73a0c9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_column_separators</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a0222f333d38f9a25a1b9899ae388d9c9</anchor>
      <arglist>(bool show_separators=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Sorter &gt;</type>
      <name>get_sorter</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>aaa74d8ad047b3b8f8011db50dac09d4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Sorter &gt;</type>
      <name>get_sorter</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a9c5f6ff3e3e38b47f40cf85899a39715</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_by_column</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>aaa59721a195d12eff522c5d3dfcb6e30</anchor>
      <arglist>(const Glib::RefPtr&lt; ColumnViewColumn &gt; &amp;column, SortType direction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_single_click_activate</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a465fca8ed966d0af8d8fd4b524316e52</anchor>
      <arglist>(bool single_click_activate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_single_click_activate</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a679358e0d0c6921c5ec2557d59590122</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reorderable</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>ae132646602acbd1a5a50ea073b0a470f</anchor>
      <arglist>(bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reorderable</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>ad1457c010bfdfc775760981ac1ee6214</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_rubberband</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a857d8a1e43ca6c00ededb25f39e3388d</anchor>
      <arglist>(bool enable_rubberband=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_rubberband</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a7e41ae4011293e8ee10725f3522e4784</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_columns</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>af80a7720ec09081a829fc90468f71dbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a344c22c736892c0957eeb714b6389e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a36baa9cd6336c59d698b2e9bb70da1a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_row_separators</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a4f96c0dd83fde7bed534a3c9b43a63a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_row_separators</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a5f8367de4dea6d80bb723c90ee5d4107</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_column_separators</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>ade03259dab6259a5d280b568616079d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_column_separators</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a7fda2cd5bcb00a1e6cc9e51383f0d8da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Sorter &gt; &gt;</type>
      <name>property_sorter</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a4dd3158fb096f7087b5481e17eb9afa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_single_click_activate</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a0a30ad1c426db0acb7dcf7d64f6e9e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_single_click_activate</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a6ab43a80b7e95a9872166dde07835977</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>aec023b6e27e80c49f404cce765486b82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a6131312228dc545261b5bc0a54f38659</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_rubberband</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a8008f5cd654ee1bc2bd9f90aea7cc8e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_rubberband</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a1128bcd5f3324924aa76bc1c54ab28a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint)&gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a803939c6c68e370f278c54132fdf22f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>a2b5685782426dcf156eb3a946b9a20e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ColumnView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColumnView.html</anchorfile>
      <anchor>acccfd2f6cd63ee8cfc70c29b8f4eda63</anchor>
      <arglist>(GtkColumnView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColumnViewColumn</name>
    <filename>classGtk_1_1ColumnViewColumn.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>ColumnViewColumn</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>afe09946a60cdb2a281408535c9783aeb</anchor>
      <arglist>(ColumnViewColumn &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColumnViewColumn &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a07234dec0c1a3e5c8644b1359b020366</anchor>
      <arglist>(ColumnViewColumn &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColumnViewColumn</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a3114af9fee30558faf541eac01603882</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColumnViewColumn *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>ad3c22328c7e58364169390193ab7cb09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColumnViewColumn *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a80ba5687620f7fa5a659664edaa256f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkColumnViewColumn *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a12df2e424314fd7ddc176cb6331ca0a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ColumnView *</type>
      <name>get_column_view</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a2b9417a78722f64a2b622a62a60f50d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ColumnView *</type>
      <name>get_column_view</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>ab30562df2d392afdb3bca6750d06cb5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_factory</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a8f280efce1996060deeb18164bd40a9a</anchor>
      <arglist>(const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ListItemFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a16f30135d7bbb81ce576551d231f1b52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ListItemFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>ac86363b7540ddaca56fbcc25e3bd789e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a787dd5b6d4bd2893fb2f5f1d44113d95</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a0df94dcd6bee985f835f816dbdfc52e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sorter</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a533d85439a25da688f81d291634269d5</anchor>
      <arglist>(const Glib::RefPtr&lt; Sorter &gt; &amp;sorter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Sorter &gt;</type>
      <name>get_sorter</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>af03d25bf29e2ae445d00963717873a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Sorter &gt;</type>
      <name>get_sorter</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a947c03ebd02d3ce32d2a0fb9a0089e52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a136cc65abb35ad606ce1952ac1b43b96</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>af69fd386a00ac172c4fbeac2fc9c0577</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_header_menu</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>aae68de9233d2d19c5da19efc80ff661c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_header_menu</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>af1798f41f7803c7d9f3a29346fe1bed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_header_menu</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a68c747f023a436831e1a5605fb7ec06e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_width</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>ac5e920a031c99be0792cc25baf6b495e</anchor>
      <arglist>(int fixed_width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_fixed_width</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a69bc4bfcdbbc2155cd30430074c65999</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resizable</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>aa009cfc038843a4d320b4c7ac6f39773</anchor>
      <arglist>(bool resizable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resizable</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a1e96982ff36a1c55cd7a213c9a69856a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expand</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a4467726d6b3aaae347f49619b3a231fc</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_expand</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a30a4bdf61b5d35bc934534eb3691540e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ColumnView * &gt;</type>
      <name>property_column_view</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a5bbf56c43086f47da568015075660ad1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_factory</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a141f3519a46d49faeef4c3a16978fed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_factory</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a20360d26bc31d5aaa0be71eac8335599</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a4ca63fa82a413e9823787e59ce1d4a3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a7b4a6e10d4dc08351e09dbb27b01f865</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Sorter &gt; &gt;</type>
      <name>property_sorter</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a45da6dbf888a8f481fc42a63d40a6b58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Sorter &gt; &gt;</type>
      <name>property_sorter</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a9c8bf9a736a31b3b0897b12e08bbf2ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a660234cfa29f012cdfd73812b7c89cd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>ae3290b3c3e99ef67213d7de2b52f3274</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_header_menu</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a45d0cd1e003f3e70917182ead1fd3445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_header_menu</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>ac047f1f77cd250566901a58d9f468602</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>aa7a80744b94e84427563ee1e4c3f0278</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>adf97180e674898b224963330c5759ab6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_expand</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a5dc728aedfdcef25ac7569bb4371e8f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_expand</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>ae037c199a1c1aa6fdb98c863b6187e41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_fixed_width</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>afe16ee385dec8e9dfbea42b32a9e2ee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_fixed_width</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a466b6c6491762f19561f856cf67bc7c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a29ab6f57958bfd49945b712c3f755a33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ColumnViewColumn &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a4526058d18577b05cd56752986ee75bf</anchor>
      <arglist>(const Glib::ustring &amp;title, const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory={})</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ColumnViewColumn</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>aece20057d00074a5c772e4a502d91263</anchor>
      <arglist>(const Glib::ustring &amp;title, const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ColumnViewColumn &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColumnViewColumn.html</anchorfile>
      <anchor>a4a6b466308e63d6d521ee8cc8faf4067</anchor>
      <arglist>(GtkColumnViewColumn *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ComboBox</name>
    <filename>classGtk_1_1ComboBox.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::CellEditable</base>
    <member kind="typedef">
      <type>TreeView::SlotRowSeparator</type>
      <name>SlotRowSeparator</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4cc3364ac0886eab63223f3e3ca76d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4ca060ba6441eaaffcd7e535732e4e72</anchor>
      <arglist>(ComboBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ComboBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aa7d1bfea835621d1ea5ddc0c952050e2</anchor>
      <arglist>(ComboBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a925042fb5edfd806e59b504c51f993a7</anchor>
      <arglist>(const ComboBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ComboBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae24f05a8521bddc6d92b5dabcc11bdcc</anchor>
      <arglist>(const ComboBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a90c65bfe5c0c03ed8f53570e141ec33a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkComboBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a187397e3b51ed9bec9a156c608288b59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkComboBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4a4a3a27f8c511fc1085d8283c3642e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a6fce474e00c35a01630bae418d079b24</anchor>
      <arglist>(bool has_entry=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a975cf938846359615c470416af4d494c</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model, bool has_entry=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_active_row_number</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a5c531be01729f9371a4858344434c7a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::iterator</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a7580310c60bb21a632a57c09c749e6d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::const_iterator</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a3aeb38f76a23f6fea58716e9310e2453</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4f23cf08e85733d23f120935b235096d</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a726cad99e33503d9848c4398de0e837a</anchor>
      <arglist>(const TreeModel::const_iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_entry_text</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a6c6a41c2c3989474b0d306fd743432b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a907b4d3c442371348b5162aa518d0814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ad96804e98737c72feb05f8b1968a7941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a959e76003161dd8d130dc955af5aaa5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ab0b1ad19e9ffb50b04eb04431aaa3fd2</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a50418df54ee0436364d650ffd478a940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_separator_func</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a2c65e7509bb7b8f9a197a517cb5cbed4</anchor>
      <arglist>(const SlotRowSeparator &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_row_separator_func</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a7482fd5ddf8b0284212852799340f9f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_button_sensitivity</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>af32e0c73473eb7dbea54249a9e607b2e</anchor>
      <arglist>(SensitivityType sensitivity)</arglist>
    </member>
    <member kind="function">
      <type>SensitivityType</type>
      <name>get_button_sensitivity</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aebcf05d9abd79c11ac7dcd1b000f3020</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_entry</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a18ba5318b9afbe81a861f9723e11d0db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>abf83a570b57e49db4c4932c03f223b99</anchor>
      <arglist>(const TreeModelColumnBase &amp;text_column) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a6af896a2a7b8a2e83ae89936190dba97</anchor>
      <arglist>(int text_column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae29720fa9b62e6424a98f2a18f1e873e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup_fixed_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a039436fe1d7385e8153c587a7b8a7294</anchor>
      <arglist>(bool fixed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_popup_fixed_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a9e0f14ea8100da0cdc58afa1dbd5d04a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a3bb98e5a20c570f1de50153a848e1542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a2eedc32778290b17cb4e58176fd01c3d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Device &gt; &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popdown</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a51606c9fc18bf392baa98bf1f762923e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_id_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a233f5705035af9bc3f80fe3739f7453a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_id_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>abda5f05f23f7c4ad39537245a6fab1f4</anchor>
      <arglist>(int id_column)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>acad3e5c9850eb33f03d73e588295215a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4d66f66a9282d5bca4c0f8e94e99b3fe</anchor>
      <arglist>(const Glib::ustring &amp;active_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>adc7053437403e868ff7f652ec09c9411</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a3658d1a556d1bf7c92318f944f186456</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a328da682827eb8f207ca78dfebca1bae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ad303805b4da5eff307b70cb5adea6a6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>get_entry</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aec3ac156771954edd9605258f0364483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>get_entry</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a82024ecf7091454c8a592f4afdf3b00c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ac53c1e2300af85a094910d839db61023</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>acd9402b2fe592895984b91a2d489b7b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a570c2789f80227f1d66aa5cae26b0e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a37715edeaa152452880cad34b236420d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4fd9250d06314076429b74876338df25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a063805cd20260c1757439a86e85b032b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_shown</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a8c0f2c74c8a4fef289b47e1c17d79a4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SensitivityType &gt;</type>
      <name>property_button_sensitivity</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4c9191193f16f32fef4c324a6f607a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SensitivityType &gt;</type>
      <name>property_button_sensitivity</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ad5d83e5af8ea610853b52f2f163b13de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_popup_fixed_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ab3c1e00edc6eb94eda0930577a35e843</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_fixed_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a89d0e98fb19802f66a51ca6acec94290</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_entry</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a5a70d94b6fac7946dc8161d2947cabec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a802eb50d4dac07419072f55551e1ddf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a820f9af1eb97cd31d3fc9c5e0d2fee6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_id_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae56bbcbb9c07c4460dfb2668459a0a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_id_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ab9533dbf84271b0339feae2102ae3949</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a11e6c16cece093dec5a23695475578c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae120ab07a38ce6e94c27abbb3b68333e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a51e1998f714ae116be65ff6cbc7e1e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a44307d62fd734807809658842e911c80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aae888e3fa4abf94a09bcab17acfc23b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Glib::ustring(const TreeModel::Path &amp;)&gt;</type>
      <name>signal_format_entry_text</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ab0ed8489b5ee6054adbd2e156843f236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ad87104af6502d6d7b3fd3d6b9517448c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a5d8eb5808407c222cdf83b9ccc88479e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::ustring</type>
      <name>on_format_entry_text</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ab81f2ba11764578ae693de228975796f</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ComboBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ada4ea19b874086ba879aa6d3df0469f5</anchor>
      <arglist>(GtkComboBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ComboBoxText</name>
    <filename>classGtk_1_1ComboBoxText.html</filename>
    <base>Gtk::ComboBox</base>
    <member kind="function">
      <type></type>
      <name>ComboBoxText</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ad9ea6324b3cbf96d91f7711e187ed405</anchor>
      <arglist>(ComboBoxText &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ComboBoxText &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a1af28aa2d3c74046e6829a2736d55282</anchor>
      <arglist>(ComboBoxText &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBoxText</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a0f19834cbaf78e0483eb9f327029aeab</anchor>
      <arglist>(const ComboBoxText &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ComboBoxText &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>abdad33e6aca9ee8e23eadc7ea4f63793</anchor>
      <arglist>(const ComboBoxText &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComboBoxText</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a32cb27f56a4cb6004d76b46a2f1f9637</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkComboBoxText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>afcbfe73b5502cf63ff1cbeed7bcf5a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkComboBoxText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>aaa988711e0f3c99a01c9f9287151452b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBoxText</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ae41612906f6cb39ba77f22a25d385ee4</anchor>
      <arglist>(bool has_entry=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ad43c1cc0325585fd53908d5d7038657e</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a19e80f4e451e23d2c00d3fb11023f9f2</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>acaabb30f27480e110ff50ad6152c70be</anchor>
      <arglist>(int position, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a0f8fac01d41eed48caad8b9d0a4c1d02</anchor>
      <arglist>(int position, const Glib::ustring &amp;id, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>aa26a9271d840cae4abcaf451924675ee</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a48279c769aa3495f9ba73ac27355845e</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_text</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>aaaced05abcfab27944eb57f9755dba9f</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_active_text</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ac6922866c343c820cc526ac0a57d98cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ae2820f73e92df9abacaae71bed2d244a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active_text</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ab1c6c5c2567690ef2f59b10a493e0b3c</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a9111d6ab6ba92410d3d8f7ef1348696c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ComboBoxText *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>af1d97d8506584c660b900d0c522b70b8</anchor>
      <arglist>(GtkComboBoxText *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ConstantExpression</name>
    <filename>classGtk_1_1ConstantExpression.html</filename>
    <templarg></templarg>
    <base>Gtk::Expression</base>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ConstantExpression.html</anchorfile>
      <anchor>a2317fa766151f152a563d753dbc599c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ConstantExpression&lt; T &gt; &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ConstantExpression.html</anchorfile>
      <anchor>a9bbafb5de89e550aada8d5103c72f9f9</anchor>
      <arglist>(T_Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ConstantExpression&lt; T &gt; &gt;</type>
      <name>create_for_value</name>
      <anchorfile>classGtk_1_1ConstantExpression.html</anchorfile>
      <anchor>a2acc3e2899bf832a8a1d25e264f9f11a</anchor>
      <arglist>(const Glib::Value&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Constraint</name>
    <filename>classGtk_1_1Constraint.html</filename>
    <base>Glib::Object</base>
    <class kind="class">Gtk::Constraint::Strength_Wrapper</class>
    <member kind="enumeration">
      <type></type>
      <name>Attribute</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad3f8d31e96c5061fd1be350528f079cb</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba6705777b712ee811e76fb07162081d63">TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba1fabf63de5c96c78e2a40805bcdeb73b">BOTTOM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbab078ffd28db767c502ac367053f6e0ac">START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbab1a326c06d88bf042f73d70f50197905">END</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba49da85b69bc6285eeee286ca49fa7195">WIDTH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbad770ba3ce18fa409965dfdf5e7c348e6">HEIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba6945258a54a487a8d099ad845d8a68dc">CENTER_X</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbac216898c2e6ee2177fda78cbde124658">CENTER_Y</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba385881ed58577143e69edf478122d179">BASELINE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Relation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacdda6a1e3edf486ac9c665f3c7edc9e5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacdda6a1e3edf486ac9c665f3c7edc9e5acfe6055d2e0503be378bb63449ec7ba6">LE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacdda6a1e3edf486ac9c665f3c7edc9e5a2dcbad7477fd40561e8b8198f173bd47">EQ</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacdda6a1e3edf486ac9c665f3c7edc9e5af803729628adf4199f224c2a225038e9">GE</enumvalue>
    </member>
    <member kind="typedef">
      <type>Strength_Wrapper::Strength</type>
      <name>Strength</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga09603bae21786aae8cb8e249c76fecff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>acca7e33647a0a33fae1526f4c0fa2ea9</anchor>
      <arglist>(Constraint &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Constraint &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a0bdacccbfddc19c64e277e52fcbdbcb6</anchor>
      <arglist>(Constraint &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Constraint</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a50c0ac9445ca0a3a7e1b5916127109c1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkConstraint *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a3d5b584d73bd2c6c1d96e5b77ce48e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkConstraint *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>ad3eab9e3c9baa5b4ef6928ae554c7121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkConstraint *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a3ac6b77a17b8b4c6eabcd633c9bf58ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ConstraintTarget &gt;</type>
      <name>get_target</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>ab887cbf9015859c6074b3511812f05da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ConstraintTarget &gt;</type>
      <name>get_target</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>aef4cad0d1dd9aca3a11f7ed36b3e77db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>get_target_attribute</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a953f1c8d77abdedaab9c431573494812</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ConstraintTarget &gt;</type>
      <name>get_source</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>ac3706e3f35afaeb7ea1d5a18cc1b0277</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ConstraintTarget &gt;</type>
      <name>get_source</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>ab3dc5fa1818b87b8f4bc3b201d515f97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>get_source_attribute</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a7fe0b92e92e948cc4e0c641a932f478d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Relation</type>
      <name>get_relation</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>ac9804c75f938cee4f71163338c8a4bf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_multiplier</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a9f02f8a1569271f36009c0cb5bb313fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_constant</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>aca509905067af90977f8308d4702d09d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_strength</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>ab64831497b4a96597f9ba9f4bf8c2243</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_required</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>af87b3190eba547a4de5c3f3d0904a41e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_attached</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a823f412df6edd7c6b5f3bd61e1f824cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constant</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>ab2301e845ba73dac679f046cefb46166</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ConstraintTarget &gt; &gt;</type>
      <name>property_target</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a3c946eb5ec2ef42763f7829f29bf6a68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Attribute &gt;</type>
      <name>property_target_attribute</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a3ad9d0b58b38f0db3772ca2044221526</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Relation &gt;</type>
      <name>property_relation</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>ad3d69c1d9f9ef5558634df03d3c282fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ConstraintTarget &gt; &gt;</type>
      <name>property_source</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>aced0ba001fdd06c555449aac3667fcf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Attribute &gt;</type>
      <name>property_source_attribute</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>aa9aded24d7fc4c808c488de21b7d9267</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_multiplier</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a44450ac232f013c93348d51105e40cad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_constant</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>aed0ba16c5f83190b96ef6b187b4c77d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_strength</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>acc3c4af87d13dc4573e5dc75745312db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>aa1b2b29ec7150e8cb093f1f2a776da92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Constraint &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a99f6a21c9e47b16c22cc4187ea9efe95</anchor>
      <arglist>(const Glib::RefPtr&lt; ConstraintTarget &gt; &amp;target, Attribute target_attribute, Relation relation, const Glib::RefPtr&lt; ConstraintTarget &gt; &amp;source, Attribute source_attribute, double multiplier, double constant, int strength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Constraint &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a3a5701792988459145016a47273792ce</anchor>
      <arglist>(const Glib::RefPtr&lt; ConstraintTarget &gt; &amp;target, Attribute target_attribute, Relation relation, double constant, int strength)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>aaf8cc50feeaaa21242a583d2226c1eef</anchor>
      <arglist>(const Glib::RefPtr&lt; ConstraintTarget &gt; &amp;target, Attribute target_attribute, Relation relation, const Glib::RefPtr&lt; ConstraintTarget &gt; &amp;source, Attribute source_attribute, double multiplier, double constant, int strength)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a41fb3bf8565c5e44f36e45c85ee115df</anchor>
      <arglist>(const Glib::RefPtr&lt; ConstraintTarget &gt; &amp;target, Attribute target_attribute, Relation relation, double constant, int strength)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Constraint &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Constraint.html</anchorfile>
      <anchor>a0627ae47f4f0692d47fae86d95b3b9ee</anchor>
      <arglist>(GtkConstraint *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Constraint::Strength_Wrapper</name>
    <filename>classGtk_1_1Constraint_1_1Strength__Wrapper.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Strength</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REQUIRED</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a9907b69b4104df59a65aea75c28009ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRONG</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a2e5c4dc3e291431cd9bb417407c74e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEDIUM</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a39ae00014e9b756b5f89734f17ddbb58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WEAK</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a6bf07fbd482cf171b77d0fe743050e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REQUIRED</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a9907b69b4104df59a65aea75c28009ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRONG</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a2e5c4dc3e291431cd9bb417407c74e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEDIUM</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a39ae00014e9b756b5f89734f17ddbb58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WEAK</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a6bf07fbd482cf171b77d0fe743050e95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ConstraintGuide</name>
    <filename>classGtk_1_1ConstraintGuide.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::ConstraintTarget</base>
    <member kind="function">
      <type></type>
      <name>ConstraintGuide</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>aeeccbf44f801ed2333e5a04e11b6ebfa</anchor>
      <arglist>(ConstraintGuide &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ConstraintGuide &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>ac861ff5022c48dcad4b22ee4c030aa85</anchor>
      <arglist>(ConstraintGuide &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstraintGuide</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>aac32f1cae1159d4acd496094ccdc176b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkConstraintGuide *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a98409f2ca7056b8fb147d6fe2a2f8f0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkConstraintGuide *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a78a95a4e38ae7135557e824a5f977053</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkConstraintGuide *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a77c9e896dea521d2268ae7d0e6d22196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_size</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>aa8effb0dbd814940868209030112de37</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_min_size</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>aec6d3bd826561a6bb99d5e298740989d</anchor>
      <arglist>(int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_nat_size</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>ad6b2ffe241f467abbeb9530ce6c5c845</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_nat_size</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a13c46c6fc492ed8517054d43ff52f990</anchor>
      <arglist>(int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_size</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a5fcf05b32eda3a967aca1ca0a58b372b</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_max_size</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a1e358f88b2b658ae1e2dd1da1618b6a1</anchor>
      <arglist>(int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_strength</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a6afca6594bd22f05c0b2b7b3d42b3c40</anchor>
      <arglist>(Constraint::Strength strength)</arglist>
    </member>
    <member kind="function">
      <type>Constraint::Strength</type>
      <name>get_strength</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a96cad824e76a5663ed59827800536599</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a041941258f1308ff166c61fb9a8a64b8</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a8e1bf096e61f866889fc69704833bcb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_min_width</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a84c8147fffa718492ddcb6bea57eb0d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_width</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>ab7299f528175d298e179479013db2901</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_min_height</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a8edbd4d6535f0e86179260cc81f7f692</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_height</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a5d202daefd7fc2ebd259082b39629c67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_nat_width</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a06a5afaff6d17c14fa84c016b564abd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_nat_width</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>adce2ab26d89008b38dc35d9a063a96a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_nat_height</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>aa4a13e78a18a7c98ebceec6b9b912db7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_nat_height</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a8b182deffc329ac8ecd77752cff266d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>aa10ff56db29d7f1784d8efce59ea469d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>accb45712bceadf6d964984dabf872b9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_height</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>ad810252f9188b62e96eaac842c882aeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_height</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a18e1361e26c2e3e88fd38eaa17d79616</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Constraint::Strength &gt;</type>
      <name>property_strength</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a00ecdc147fec4afadc4017f524e6e961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Constraint::Strength &gt;</type>
      <name>property_strength</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a4f9a4d887895050e501874e9167d42c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a54ffbaa52d6cb2b34c8f9a6e50cc03a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a72d708cf53543f45db750d0da9b67fd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>acb34179091d0cc977bdef653b0d639e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ConstraintGuide &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>aa82d5883347dc3250aa26dd920db746c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintGuide</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>a0fa83601c14f5fc0b1929be7b2bb9247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ConstraintGuide &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ConstraintGuide.html</anchorfile>
      <anchor>afd272fc81ea3abeac498b0750362c5ba</anchor>
      <arglist>(GtkConstraintGuide *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ConstraintLayout</name>
    <filename>classGtk_1_1ConstraintLayout.html</filename>
    <base>Gtk::LayoutManager</base>
    <base>Gtk::Buildable</base>
    <member kind="typedef">
      <type>std::map&lt; Glib::ustring, Glib::RefPtr&lt; ConstraintTarget &gt; &gt;</type>
      <name>VFLmap</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>acf462a8dd7283241dfcaf4600f1ecbcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstraintLayout</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a7a6808d2339ee33543d1635207902dfd</anchor>
      <arglist>(ConstraintLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ConstraintLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a04e66e907c099815651b933765582d36</anchor>
      <arglist>(ConstraintLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstraintLayout</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a8ecb5ff80b8d514e050185e3f9ace166</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkConstraintLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>af59957d86cfdaaaf1680a0539007d050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkConstraintLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a6e4f4012d4ee65a0bc40cad0ecb29f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkConstraintLayout *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a46e7d0b3a0f178bfbfe6b247a3500a34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_constraint</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a334238bbf5123d952f6a922895cbb545</anchor>
      <arglist>(const Glib::RefPtr&lt; Constraint &gt; &amp;constraint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_constraint</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>ade203ee8ed075f60b8957567fb7cf59f</anchor>
      <arglist>(const Glib::RefPtr&lt; Constraint &gt; &amp;constraint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_constraints</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a3a09beeabdf633d23be32e4d34060e5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_guide</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a56ae57c4e37a180d13a77256a58bd68f</anchor>
      <arglist>(const Glib::RefPtr&lt; ConstraintGuide &gt; &amp;guide)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_guide</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a0f5fb55903889d0d107b214134f1d23a</anchor>
      <arglist>(const Glib::RefPtr&lt; ConstraintGuide &gt; &amp;guide)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Constraint &gt; &gt;</type>
      <name>add_constraints_from_description</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>acf2d672135f23627cdf2ffd80c4b04e2</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;lines, int hspacing, int vspacing, const VFLmap &amp;views)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>observe_constraints</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>abdeb89f07d74198c486f8aaca83c0ec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>observe_constraints</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a7601a7b7c838981eeca8002b9998de70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>observe_guides</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>abfbc68606caf740d10bbf660526d0235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>observe_guides</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>aa5ebcd0bc3312311003606a6789e303a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a604d942032a3b3a9d2778de13f1b020b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ConstraintLayout &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a325de28c3f76e5f4f3d15561d41a228f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintLayout</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>afd2e552e213ae4599b59480ec3535ead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ConstraintLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ConstraintLayout.html</anchorfile>
      <anchor>a95711fbc9664761c2cc3354fe5b47c7e</anchor>
      <arglist>(GtkConstraintLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ConstraintTarget</name>
    <filename>classGtk_1_1ConstraintTarget.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>ConstraintTarget</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>a4db010f0882193df6d94b045a05a5242</anchor>
      <arglist>(ConstraintTarget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ConstraintTarget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>ab5238f1ed122d136e564d4ebf547c60f</anchor>
      <arglist>(ConstraintTarget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstraintTarget</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>abb33b4c174b9dcf30701bcb26f594115</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkConstraintTarget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>a55d27faaf6c6647f2addaf1e26307f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkConstraintTarget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>a25c07df60777db61e87f8ce3b9423452</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>ae95642d2d2736e36fe05d80c5111f8d3</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>a39cc8f7e94a90d5e12cd403124ebe10e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintTarget</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>a0a1853964d4a74d1052ffc5b703a35f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ConstraintTarget &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ConstraintTarget.html</anchorfile>
      <anchor>af26f582a5697237440074b505fde2674</anchor>
      <arglist>(GtkConstraintTarget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ConstraintVflParserError</name>
    <filename>classGtk_1_1ConstraintVflParserError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_SYMBOL</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5ba4988cf2a9961be41ad0092a93f4d4c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5bad6092c4804aaca8cb7493f8ec6354ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_VIEW</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5ba5d88773a6238e73e186689ddf92ac76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_METRIC</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5baf493e99ae6d39af62b7160bc0a110d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_PRIORITY</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5baa03c1c5debaabbbad137cc7b0c7c91d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_RELATION</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5bafc78c8fe63de54cb24f261a790f30285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_SYMBOL</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5ba4988cf2a9961be41ad0092a93f4d4c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5bad6092c4804aaca8cb7493f8ec6354ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_VIEW</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5ba5d88773a6238e73e186689ddf92ac76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_METRIC</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5baf493e99ae6d39af62b7160bc0a110d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_PRIORITY</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5baa03c1c5debaabbbad137cc7b0c7c91d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_RELATION</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a297682a77abc3cfe78cad8c7c9e84c5bafc78c8fe63de54cb24f261a790f30285</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstraintVflParserError</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a62fc25c9e77f7da7ce0095fa5421e9bc</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstraintVflParserError</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a6181ea3c915a1600f4a739fd0799cb4e</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1ConstraintVflParserError.html</anchorfile>
      <anchor>a186d9db673c6b7434655292198ece2d8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CssLocation</name>
    <filename>classGtk_1_1CssLocation.html</filename>
    <member kind="function">
      <type></type>
      <name>CssLocation</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a06e7cf485d8ac91ba2f1ef033c713b27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssLocation</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a4219c09801895bb8ad056bc6e095f22c</anchor>
      <arglist>(const GtkCssLocation *location)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssLocation</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a2f9e337ad10bae204f9b42a41ca89761</anchor>
      <arglist>(std::size_t bytes, std::size_t chars, std::size_t lines, std::size_t line_bytes, std::size_t line_chars)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>get_bytes</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a7e40a567aed56908077cc6a9f7e8dde6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bytes</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>adca192a38810c9a5a9e83eb7a3e9f853</anchor>
      <arglist>(const std::size_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>get_chars</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a5b1ee74b43a921f399228515a03baa1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_chars</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a84ac48b58d311c7fd1983058a709a109</anchor>
      <arglist>(const std::size_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>get_lines</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a50ceb1c8d014dca9d3c2f9990f980fa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_lines</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a97b5a9c8d9e8917aec88a694146744f3</anchor>
      <arglist>(const std::size_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>get_line_bytes</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>ab887a9a784a78b07a3ed01dff66ccbb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_bytes</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a03fe739f2d4416b77a70e3dc1a262fb6</anchor>
      <arglist>(const std::size_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>get_line_chars</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a4465c9efb8a0218d422f424a6940d3b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_chars</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a2a4bef9a6638f72731a955b8e26d6a20</anchor>
      <arglist>(const std::size_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>GtkCssLocation *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a2791ef343b643faf8c68b3904ee6d86a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCssLocation *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>a7a96fb1e50099b84c2c223b435c4cb26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkCssLocation</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>af1398c166ac84001fd7036a77cce12ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Gtk::CssLocation</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CssLocation.html</anchorfile>
      <anchor>ac3fa6692d45dce23cfd1c6ec035a3e6b</anchor>
      <arglist>(const GtkCssLocation *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CssParserError</name>
    <filename>classGtk_1_1CssParserError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5eff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effa6b01d74a0d1b02efce7c269b1b2f714a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNTAX</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effaaa01017718feef67c6c6651ff2b23a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPORT</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effaffc7213fdd5b6c3d96e0944cae51e3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAME</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effa482bc3a3ab42820391cfbf3d2feb07b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN_VALUE</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effa723ad82b3e429810fab8b2ddc1e48377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effa6b01d74a0d1b02efce7c269b1b2f714a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNTAX</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effaaa01017718feef67c6c6651ff2b23a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPORT</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effaffc7213fdd5b6c3d96e0944cae51e3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAME</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effa482bc3a3ab42820391cfbf3d2feb07b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN_VALUE</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a3ca820c417eb34653180184f31fd5effa723ad82b3e429810fab8b2ddc1e48377</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssParserError</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a2283e63827fc43d10c6391e8ee22dc1d</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssParserError</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a1e04d1238bac5210a17dbe2a3e506ae1</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1CssParserError.html</anchorfile>
      <anchor>a48f5ce8937f1dd9ea3508d98330ceeee</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CssParserWarning</name>
    <filename>classGtk_1_1CssParserWarning.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>a5d7111cb33f28409814e625eb15a3a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPRECATED</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>a5d7111cb33f28409814e625eb15a3a90ae9c78f02395402ccbca783e20c411136</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNTAX</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>a5d7111cb33f28409814e625eb15a3a90a0d06660cba1b320b5c3a98e094b57433</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIMPLEMENTED</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>a5d7111cb33f28409814e625eb15a3a90aa957a817d3330884758d4c2f9fd66cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPRECATED</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>a5d7111cb33f28409814e625eb15a3a90ae9c78f02395402ccbca783e20c411136</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNTAX</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>a5d7111cb33f28409814e625eb15a3a90a0d06660cba1b320b5c3a98e094b57433</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIMPLEMENTED</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>a5d7111cb33f28409814e625eb15a3a90aa957a817d3330884758d4c2f9fd66cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssParserWarning</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>a9792c728886a24d94b369faa00f79dd3</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssParserWarning</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>abbef687c35827fa47dffe57d413b600a</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1CssParserWarning.html</anchorfile>
      <anchor>aaf5733afbda693e90a2323e0f0ae9340</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CssProvider</name>
    <filename>classGtk_1_1CssProvider.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::StyleProvider</base>
    <member kind="function">
      <type></type>
      <name>CssProvider</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>acfaf48e2148f959acbec070980d964d5</anchor>
      <arglist>(CssProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CssProvider &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a0a3e1fa91b88951d20fd90dc8660af0e</anchor>
      <arglist>(CssProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CssProvider</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a667eba20cbd5d65c2e90f65e85ffdd9c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCssProvider *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a41283c627e2b52e5cd5c583baa8af562</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCssProvider *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a3308cf52a98dc9d8a8f1dc50b64bc422</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkCssProvider *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a808994510b3e0fe536ee1a9b223fc917</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a549e915f968192d7e28d1fab880b6c9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_from_data</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>ae4f47ad68a6bd0c5a0642fcc13062a06</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_from_file</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a662eb3b8b93e5a99c9f95528b81db16a</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_from_path</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>ae0e6d152461330558f893a276c14f9ae</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_from_resource</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a49fef0d9e7676e8d34876a378c5a78ec</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_named</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a212adbc7c1477faddd8ea23d5b73e784</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;variant)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; const CssSection &gt; &amp;, const Glib::Error &amp;)&gt;</type>
      <name>signal_parsing_error</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>ac6cb2b4f98bea9600aad646f14484eda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>ac7603cfdbef0ccaf560762b29e5500dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CssProvider &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a704ab5fd008588b67b1c1b0787f60064</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CssProvider</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a162d2aab79966672411f0faa55cc4f2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CssProvider &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>ae322c16bd907847d73f0a553156136ce</anchor>
      <arglist>(GtkCssProvider *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CssSection</name>
    <filename>classGtk_1_1CssSection.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a170087b6fdd0ecd179a846b6b368b86a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>aa667b9a1e594e351b109e27cc8ff1df9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkCssSection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ab06854eb355bd0841e82fa26b885481d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCssSection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>aaf59e6a5b5e0c820887c6fe65d71ff78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkCssSection *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a457ef980cf26ae6d6c78024a5f7e93df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssSection</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>aa7d0d672975f5d7870bbea66d626ee41</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssSection</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ace78b11a2f7116b97e2fb250584f7b69</anchor>
      <arglist>(const CssSection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CssSection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>aa1b6221f2b315ca4d6c8f0e667442447</anchor>
      <arglist>(const CssSection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ac982473d6fa2810fe806eedea49404f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CssSection &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ab6d5122caf6e68bdb93998edcfe24614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const CssSection &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a1f8fb289fc99289bd90496a5f0f8cfdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a7bcb9037dbcd7078428652ba8310eb5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a86c1f46c9fe137a00bddd4d273a80969</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CssLocation</type>
      <name>get_start_location</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>acc5b6a849e33a23dd374b96de45867c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CssLocation</type>
      <name>get_end_location</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a090895fca1dd1c14d355e2c55f369711</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CssSection &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>acd9f1800bc7271ab74f42d1ba72318d7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file, const CssLocation &amp;start, const CssLocation &amp;end)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>aad9eb5b008a1ee7dcad02445a07b5cbe</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CssSection &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a842861ca601cf66e1f01867f3faa4d23</anchor>
      <arglist>(GtkCssSection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Dialog</name>
    <filename>classGtk_1_1Dialog.html</filename>
    <base>Gtk::Window</base>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>abef1e37c396b72bee893066a454214b4</anchor>
      <arglist>(Dialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Dialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>af1c4774d13b88187010a4b867086af20</anchor>
      <arglist>(Dialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>acec52d9159b2a601bb6184c1d42f33d4</anchor>
      <arglist>(const Dialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Dialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aa69e8315761372749cb669080a578077</anchor>
      <arglist>(const Dialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a17816dafc85a3e8546b512c8bba23a88</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aa3e8f3bdac15fac61128dc47c22ba4cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a788feeedb8034b6582a914bfe81deb6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a7e746e77abaa67ccdc920ca97ad9b06e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>abdeb29cf2c223d36932d37618b9b7f5e</anchor>
      <arglist>(const Glib::ustring &amp;title, bool modal=false, bool use_header_bar=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a139bdf656b3e387beb807992e8c02cc9</anchor>
      <arglist>(const Glib::ustring &amp;title, Gtk::Window &amp;parent, bool modal=false, bool use_header_bar=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_action_widget</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a096c1736344266e316dd31bbd5c43e19</anchor>
      <arglist>(Widget &amp;child, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>add_button</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aca037e133ab2a91c646f23b7b17afb9b</anchor>
      <arglist>(const Glib::ustring &amp;button_text, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_response_sensitive</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a04da02d509bf9c759a15cdb1dc544a5d</anchor>
      <arglist>(int response_id, bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a9a042edc1a83ae5d670305635d193fea</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget_for_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>af259947b29ba1dc093bc1d112400c03c</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget_for_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a85a492970261e46da602ebf4c5173ec5</anchor>
      <arglist>(int response_id) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_response_for_widget</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a504f6dc09ef1933c06ce04ddd492d9ee</anchor>
      <arglist>(const Gtk::Widget &amp;widget) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a7cf451db55cadc3509f360f70d0e0ecb</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Box *</type>
      <name>get_content_area</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aa87d65b44b48791b3298daf99a684f00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>get_content_area</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a24b2a91299645331f1c6948656a0a9e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HeaderBar *</type>
      <name>get_header_bar</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a33c8837f0383ad4f0a5b0650039e0fc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const HeaderBar *</type>
      <name>get_header_bar</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a9bb09ceff4b7f93c27c20a60981d7ad3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int)&gt;</type>
      <name>signal_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>acb37bfa93375d05e89ba5aff8c822755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_header_bar</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>ade1bca320e0dab1e616dbb79fe185b55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a32074ac5cf3fe4afe9334f57022fe0d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a9d3aab6c3ea727acab2af375e9ad3479</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Dialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a1f0f3f2840498099a768a81eafdca8f7</anchor>
      <arglist>(GtkDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DirectoryList</name>
    <filename>classGtk_1_1DirectoryList.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <member kind="function">
      <type></type>
      <name>DirectoryList</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ae49aae3bb30f103436d80cfa06cca6e9</anchor>
      <arglist>(DirectoryList &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DirectoryList &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a24d26db1cef4238f40437e0e03d597aa</anchor>
      <arglist>(DirectoryList &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DirectoryList</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>acc095ac5415ac1297985435906b7aec3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDirectoryList *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ae9e45602df792a19cf44e134349b3c24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDirectoryList *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a7b2bf20cc1158d62164e109733d506ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkDirectoryList *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a95a1bcc8a2bf5a9ad7d2a23824fbb7a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_file</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a78b13ac9d2d845096c1612fd8b3caca0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ac45d452062a4b8ee367d6d5c0b426c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a64b40d3ec7442d2b1e4104db7248fe5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attributes</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a7ea0bc15a559f4a2f8092fbce8ce4be5</anchor>
      <arglist>(const std::string &amp;attributes)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_attributes</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ad1bc487965dccc81c45662ad206481f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_io_priority</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ad188d8daca41f41eede466ec0dd916d8</anchor>
      <arglist>(int io_priority)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_io_priority</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ab1cc7087b6a2d0281475e29b35eb9736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_loading</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a384f37808b052dcfdae102673375663b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::Error</type>
      <name>get_error</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ac61fdb390240fbab3c649d53de699ce3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_monitored</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>acc807fb7a096dbe9ea84f451a97a5cbd</anchor>
      <arglist>(bool monitored=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_monitored</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>afb76d8ba6d728b61a37f678f96255c6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::string &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a5a7a603d7871965229116d46adfe58f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::string &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ad28d5bf59a4da71de3db2cac8b1c01c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::Error &gt;</type>
      <name>property_error</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a00077aeb4a5173b6639dffbe6265de34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a45c8240c3b92baafaf370711496991c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a45bb595eb6cf015c1077656ac778fea8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_io_priority</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>aaa24a930b8769b951c9c922fefa7534d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_io_priority</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ae4c48d5ea1da2a3a9831f950e76821b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a10010632b7c422232584d5202615fa3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_loading</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ad3e102da4cb8a30fcd69b3de5d165713</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_monitored</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ac997369738bf7f7b86bfc5a35f42a62d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_monitored</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>aad7ae1e75f74322b57d9ad22abbf3a93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a2ac30a1cb68eac9d27336ecb30e8cc5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a68c3cb63071e752a8dcb58bbdcbb3974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DirectoryList &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>ab3705d6676e9f13a170e5929756dface</anchor>
      <arglist>(const std::string &amp;attributes, const Glib::RefPtr&lt; Gio::File &gt; &amp;file={})</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DirectoryList</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a00bc7ef2e0a77ddf0ec03c9623236cf9</anchor>
      <arglist>(const std::string &amp;attributes, const Glib::RefPtr&lt; Gio::File &gt; &amp;file={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::DirectoryList &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DirectoryList.html</anchorfile>
      <anchor>a91352f42d41f8bed401b2557dbd8e4e3</anchor>
      <arglist>(GtkDirectoryList *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DragIcon</name>
    <filename>classGtk_1_1DragIcon.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Native</base>
    <base>Gtk::Root</base>
    <member kind="function">
      <type></type>
      <name>DragIcon</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a6421991f2ba44947ee34b611f48fdccf</anchor>
      <arglist>(DragIcon &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DragIcon &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a5b9cf48290f720ff1fb377013325c07f</anchor>
      <arglist>(DragIcon &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DragIcon</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>aeea157c04963d2fd93f5723c71ecccc7</anchor>
      <arglist>(const DragIcon &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DragIcon &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>ae1df2d737829391c36d98162e09246e5</anchor>
      <arglist>(const DragIcon &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DragIcon</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>ac95f7c61dcad0b8c725469b13eff014e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDragIcon *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a0ebfe8d57e5c76d558063686dfd8ce1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDragIcon *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a68daaa26ef2c6d0314397ef3fe3dc4d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a4a520d12be601ec6776ef124b0d392d4</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a42c3143c9817963e596049bc4ffcb844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a289be960f943de23ded329dd95ccd246</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a29e79b4a2e00635e6d33503b6a5e9412</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>ae673b19fa892fae69a80e676b607ff3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a78f752dbdd552f57686a620c7af42ab4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>af4d0135c40d9c9b28bcc21af8c113fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DragIcon *</type>
      <name>get_for_drag</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a31094de8312cce96024af920413f88aa</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Drag &gt; &amp;drag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_from_paintable</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a6d8c4c45d8fb0e5875fad975ed778dbd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Drag &gt; &amp;drag, const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable, int hot_x, int hot_y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Widget *</type>
      <name>create_widget_for_value</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>aa4a521972e501c4e6d9a75155e4095a5</anchor>
      <arglist>(const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::DragIcon *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DragIcon.html</anchorfile>
      <anchor>a83a6b89cbbe6082de482b70739c35c80</anchor>
      <arglist>(GtkDragIcon *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DragSource</name>
    <filename>classGtk_1_1DragSource.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>DragSource</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a7cf281ac9fbdf9af5218673380e0d8cc</anchor>
      <arglist>(DragSource &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DragSource &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>ad1d3ef6f78a1937745bbc2fe28f69f82</anchor>
      <arglist>(DragSource &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DragSource</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>af8f4ed0dff7c319b26d2463f550bf7da</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDragSource *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a6ad1744ef59d1616981483fc70c63fce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDragSource *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>aa8bbf949b7694c1ba000b4f4e47619f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkDragSource *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a92808697a03eb1814fec07c7cad2b994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_content</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>ae5eb8216e20540f041e47004ebc85bac</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::ContentProvider &gt; &amp;content)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentProvider &gt;</type>
      <name>get_content</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>ae0b9ad14a34102a5a43f3420aa877eb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::ContentProvider &gt;</type>
      <name>get_content</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>af0c95f95fdc71c4308fe4dc94c8f2431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_actions</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>aca9d362adb7d1f3ac898657278b358d8</anchor>
      <arglist>(Gdk::DragAction actions)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::DragAction</type>
      <name>get_actions</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a64f50654f4b54d2b8c04c50024fe2e6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a973f235cdd962eef9c41f43b36d21850</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Paintable &gt; &amp;paintable, int hot_x, int hot_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_cancel</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a95c43940ee506fbeabbda40eb97c6420</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Drag &gt;</type>
      <name>get_drag</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a3654e3ee6fd73e5647c326e0d1d2c2c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Drag &gt;</type>
      <name>get_drag</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a4cac682a5cd0d6327399fff92980246c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::ContentProvider &gt; &gt;</type>
      <name>property_content</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a45d5e43edaa4161ab4e2d38b42a85cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::ContentProvider &gt; &gt;</type>
      <name>property_content</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a3e25114764faf25248d659500bb8b569</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a2de6a8009edd096850f165552f61ca86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>aae29eef3f4b82ee9932c8edacfa13886</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Glib::RefPtr&lt; Gdk::ContentProvider &gt;double, double)&gt;</type>
      <name>signal_prepare</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a145ad72312ea3655d47f7208c1d3ddcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Gdk::Drag &gt; &amp;)&gt;</type>
      <name>signal_drag_begin</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>affa96831ce830e927243d457eede0f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Gdk::Drag &gt; &amp;, bool)&gt;</type>
      <name>signal_drag_end</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>ad3a75a93546a386b68179c838fa7bdf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; Gdk::Drag &gt; &amp;, Gdk::DragCancelReason)&gt;</type>
      <name>signal_drag_cancel</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>af39a39e0930f065c89e87caf7a348a42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>acc4d3afb76610c42e9eb41497fe17d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DragSource &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>aa078f14165c01cefc5ca8eef77bbf8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DragSource</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>a067a5a8408c1b008daf0ee3c2b5eea40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::DragSource &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DragSource.html</anchorfile>
      <anchor>acf263db7779cd5b3e2ebee33b85ba76a</anchor>
      <arglist>(GtkDragSource *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DrawingArea</name>
    <filename>classGtk_1_1DrawingArea.html</filename>
    <base>Gtk::Widget</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;, int, int)&gt;</type>
      <name>SlotDraw</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>ab837dc8ab2cecb5932c53afab491b915</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawingArea</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a6989b2f32be50db1f454a326ac4fa4f4</anchor>
      <arglist>(DrawingArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DrawingArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a76e78a4486dc4b4bb7805a9805c17c08</anchor>
      <arglist>(DrawingArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawingArea</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a97e64ed40de01334443534248f8c2818</anchor>
      <arglist>(const DrawingArea &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DrawingArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a0f7f3c1deb0ea0899755b5b6b3f66099</anchor>
      <arglist>(const DrawingArea &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DrawingArea</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>ad9689983692a9fcb1101a20289fa8682</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDrawingArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>aeb0de16fc78aab19dbfdd84b00699f2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDrawingArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>ae30ae1408b1d896155066ed23a4d4992</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawingArea</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a1d94caf2ad3b2e43f37479b7f1568504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_content_width</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>ae9dc3fa3cad8d085c00149d55b7a628e</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_content_width</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a6d32c8ad97c99a59f76c963aa5296fdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_content_height</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>add4e8730c714681b0072f36ea7a0f51a</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_content_height</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a922ff60442fdfeccc68efc118be5171f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_draw_func</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a96874cfd70aefbd973e8555745df49f6</anchor>
      <arglist>(const SlotDraw &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int, int)&gt;</type>
      <name>signal_resize</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>ab21e3cccd1115efca1a7f47dc53e1620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_content_width</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a39618118ccc17113964befa8fb9e992b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_content_width</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a89047b83753845115847310ba1649c06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_content_height</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a66734c3b86225b814c417ed67ebb685f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_content_height</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a6880bc73146729e32f6b843189ec6734</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a9c9f4a7a51910d062b1c18cd489a5d35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_resize</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>ae6fc82b554b5e8498e3ba3bf2db62414</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::DrawingArea *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a2e4eab5ec288a7fde775df2b12f1ef0f</anchor>
      <arglist>(GtkDrawingArea *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DropControllerMotion</name>
    <filename>classGtk_1_1DropControllerMotion.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>DropControllerMotion</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a3f67f520e1f154c852ae2c0b70e91340</anchor>
      <arglist>(DropControllerMotion &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DropControllerMotion &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a7fc46e55a445d5272530a97da3fd564e</anchor>
      <arglist>(DropControllerMotion &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DropControllerMotion</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a9c4485608d34360049bf6c9dfc0a5231</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDropControllerMotion *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a041a27b77112608cd18d595c928733da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDropControllerMotion *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>ac7f792c4b64ef981a69be2fb4f52ec21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkDropControllerMotion *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a0aede27b1ba714f91dcb999913892f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains_pointer</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a6980d570f3edb58dbb1e407261c144b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pointer</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a046df55ff47de378b60e56ec0ca0d75d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Drop &gt;</type>
      <name>get_drop</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>aedfb1e6c05b748cef2d666ce70a8484b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Drop &gt;</type>
      <name>get_drop</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a4865146668ca2d80d4affb474ffa4123</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_enter</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a265934221b33c0c82252cae95312bedc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_leave</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a5614f6ba9fdfdf23f0ce4730136a5c98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_motion</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a9082b536c88b8a1ab8e1ce061b5af508</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_contains_pointer</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a5b84e4ec722edc8314cd6367c25188ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Drop &gt; &gt;</type>
      <name>property_drop</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a1f1be52b0b3bbe9eb3b8d6f626fc856a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_pointer</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a983fc457fe5910fe5607604e04411834</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a60a33d17aa86e21ad578831d1051f82e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DropControllerMotion &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a677ff3599fc7d66a225f273cd1a38b43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DropControllerMotion</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>a08230d82c32c3d774404e9bc80ec464b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::DropControllerMotion &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DropControllerMotion.html</anchorfile>
      <anchor>aa2ad429614ac8c364c3f50e436430a59</anchor>
      <arglist>(GtkDropControllerMotion *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DropDown</name>
    <filename>classGtk_1_1DropDown.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>DropDown</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>acf4c3c696238dc6e68d6d6e57699eae4</anchor>
      <arglist>(DropDown &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DropDown &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a6d1b59ccaea0ee83c9295db82c8b860f</anchor>
      <arglist>(DropDown &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DropDown</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a47f03badaa6620a9668f74fb9a887663</anchor>
      <arglist>(const DropDown &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DropDown &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a0c3d4fa6ea356cbe73d2e453a04ce70f</anchor>
      <arglist>(const DropDown &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DropDown</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a1b6065d9400da4b713f474d86cc6b7da</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDropDown *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a11374a1182a81390fb8961bf7d2eda5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDropDown *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>aaf72b6898a7cb1ff60d09f529f54787e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DropDown</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>aefd87f63f95ad22dbeecc59a727a3017</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model={}, const Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt;&gt; &amp;expression={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DropDown</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ab830b541de45619baacecdb748f106a1</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;strings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>acc901efad51cc42ee2336f89fd4401ec</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a32a5b85d2a3210bc33de76db0fc6ae5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a78afdff39d883a4b070d5aab445c7cf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selected</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>afc6c17c077ba678fec86c0ac666e66b8</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ae600203a5d4f33b26dc151ddf47f0717</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::ObjectBase &gt;</type>
      <name>get_selected_item</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>abbcc00f7392c4ed0d3cd065c676ec0c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::ObjectBase &gt;</type>
      <name>get_selected_item</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a5e40213d764473baa60af347a0b132e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a18d21521fe166430be8ded0ac95f87d2</anchor>
      <arglist>(const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ListItemFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>aa562b2131ccf76e320ace7fba7e0748c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ListItemFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>aa458031506301c8cc5ae2c20997a5f2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_list_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a9c7ffe3795982b257759f4677e1e1133</anchor>
      <arglist>(const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ListItemFactory &gt;</type>
      <name>get_list_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ae5b241cb4ef2660b91a50925506be784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ListItemFactory &gt;</type>
      <name>get_list_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>af16dd31f15cf0f39391b11ff2e0caf0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expression</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>af4a5288f6fef1b6103eccd0723f6d5e6</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>adb7d580473b5d5c9e12275eb45ee9387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Expression&lt; Glib::ustring &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a3117cef5fb7c047e294b4f78ee13d47b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_search</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a1f4913344b8097910be8ae4fb815150c</anchor>
      <arglist>(bool enable_search=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_search</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a00b29866bcb6d501663f8b838e2a2d48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_arrow</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ad335bbd2962c42b7a7b99cb9c88723f9</anchor>
      <arglist>(bool show_arrow=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_show_arrow</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ab31c24ce5bac34fd85c9174fb26d8e13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a8f64bd79d495ff6bb92c346b74c7091b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>adcf4890a91aa6ea3045a78e8e2fefd31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_list_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ad5ea18059959553ab05318e5ad9682f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_list_factory</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a9f26e6c88a7d09ef24794286a6e63be6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a4189bb30445d4ba5c3e88c9a9b56c7ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a604420bbb01a4af36a72edd021bd6480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_selected</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a8b87027932272f1ab8ae344f8e848730</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_selected</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a65f527dfa68934fed7e28114b05e3c98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Glib::ObjectBase &gt; &gt;</type>
      <name>property_selected_item</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a7fd8bcef2e40afe4686ee7370c02c63b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_search</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ac83238ee77fa949c54f0d384fccb33d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_search</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a38b7b9db3b1aa82d874b5ef789b4ecd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>af69b6dfe0d355a0a6a33ec08eded069a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>af7e1d564714a652921a16bb5f01f719c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_arrow</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>afa1d8ccd38a6ab799f3dadf321f4ec6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_arrow</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ae256fd7b89d17323ceb971345375f8bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>a5c1143c111b02c141211a8d90b0ead67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::DropDown *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DropDown.html</anchorfile>
      <anchor>ad7697c73d11e9a5aebcd7da5f3cc24e6</anchor>
      <arglist>(GtkDropDown *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DropTarget</name>
    <filename>classGtk_1_1DropTarget.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>DropTarget</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ae7d39bf9558584ac957e47ac9c4bb223</anchor>
      <arglist>(DropTarget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DropTarget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a61be8080a72f58fff7e35f5450561c7f</anchor>
      <arglist>(DropTarget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DropTarget</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a69f08aab1dfb664e0e888e8203504375</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDropTarget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a2979d0a31f7786ddd74543ae6ba25a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDropTarget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>afc6a0f65a9a54f50bb8a4362616ba17a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkDropTarget *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a4094bd2b0f78c8ae0d44ef23e8504eb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_gtypes</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a3548393c81ac88871a33e52ccf82af42</anchor>
      <arglist>(const std::vector&lt; GType &gt; &amp;types)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; GType &gt;</type>
      <name>get_gtypes</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a2a9e248c021d3b304bcd60e9d48f6fad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a8557fdd07d1c3255e75d0c0e3437befa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>af24d9467827de0153859680c6d87987c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_actions</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ada25704fbb30c029da859241313f2041</anchor>
      <arglist>(Gdk::DragAction actions)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::DragAction</type>
      <name>get_actions</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a862ac8c650319a1bd481aa5225acac8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preload</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a5d7271a15884f9b315acc9a0c6f03462</anchor>
      <arglist>(bool preload=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_preload</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ad67dbcad0696553daf84c2f93bb84322</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Drop &gt;</type>
      <name>get_drop</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ac36e6355e4e46cb0e5cf31573514ab20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Drop &gt;</type>
      <name>get_drop</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a496f286357539b1808b070d947704593</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Drop &gt;</type>
      <name>get_current_drop</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>afec3b49e6384dfc3379123dc2c016572</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Drop &gt;</type>
      <name>get_current_drop</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ad6993ec71397f8a9167f61aada6d26b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ValueBase</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a77a24e2993bcbb998028e7a3f790f0da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ab1229797f7ecd80c4aefa888ec786692</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a70658bb0af9b63f2023d0a9131ccfc95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a029aad10665c27f8aa2006d6a1ee7634</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Drop &gt; &gt;</type>
      <name>property_drop</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a82a104a24fe7151d60803057ffe904d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Drop &gt; &gt;</type>
      <name>property_current_drop</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a594da289d15ac8ec07c43f96b434e318</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::ContentFormats &gt; &gt;</type>
      <name>property_formats</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>af836f3bbc0f31b1422997f5903cb818f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_preload</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ad0cf1fcaeafb399c10ebd9ca710fbd71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_preload</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a8375bcb3aa22ae0c4014f236708b788a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GValue * &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ad3d755ad4ca369b67a977af6ccdc0c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; Gdk::Drop &gt; &amp;)&gt;</type>
      <name>signal_accept</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>adea2941b299c25120e3740ad73102db7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Gdk::DragAction(double, double)&gt;</type>
      <name>signal_enter</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ada427b0bc0962f58b2e2f49654c1bd8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Gdk::DragAction(double, double)&gt;</type>
      <name>signal_motion</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a62b8c411106e856ba65f8b9d36647634</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_leave</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a4d14f02938991dc32a084da661344af7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::ValueBase &amp;, double, double)&gt;</type>
      <name>signal_drop</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>ab74d0a91f7ef31446c550d227ff928fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a5908d82cc0e1053efc002d429276d78a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DropTarget &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a99e28caca958a280bddc9d5af8aa1da7</anchor>
      <arglist>(GType type, Gdk::DragAction actions)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::DropTarget &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DropTarget.html</anchorfile>
      <anchor>a33bff31ef09d78dad09233ad29b8ff0a</anchor>
      <arglist>(GtkDropTarget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DropTargetAsync</name>
    <filename>classGtk_1_1DropTargetAsync.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>DropTargetAsync</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>afcf7063ab80635bb7f476f743830544b</anchor>
      <arglist>(DropTargetAsync &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DropTargetAsync &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>ad208caeb1acfd5b2193fd57cb0f33691</anchor>
      <arglist>(DropTargetAsync &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DropTargetAsync</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>ab501cbb19d2a46d930b9367b243ba5c7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDropTargetAsync *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a4ab7d099df2b9e085b612f5d046e9a54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDropTargetAsync *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>ab18f7a0b00bc3722d1814a9c7811456f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkDropTargetAsync *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>ad4ae9579e8497d75c735613568f90a02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_formats</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a5af842d456def81dbb2fd8bd120bd931</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::ContentFormats &gt; &amp;formats)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>aa28b2edbb99ae3d6c114072e427ebb82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::ContentFormats &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a1e2e7a647e8b967d11c0714b8c8afbee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_actions</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a359ad7ba5d45888a7f453d1fd0e7d649</anchor>
      <arglist>(Gdk::DragAction actions)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::DragAction</type>
      <name>get_actions</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>adbd5d309edbdfdb1d5b7b6fa3a27c142</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject_drop</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a7790456632d80cc5498a24d386d8f58b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Drop &gt; &amp;drop)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a99a19970b5b39df5ba24c07730c7ee56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::DragAction &gt;</type>
      <name>property_actions</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>afd18b7770b5bf63627dc30378407d923</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::ContentFormats &gt; &gt;</type>
      <name>property_formats</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>adb31f67bfa79efcb5665f0f65e1a7bd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::ContentFormats &gt; &gt;</type>
      <name>property_formats</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a6d4cf2cedc2306b486501c9b34e18616</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; Gdk::Drop &gt; &amp;)&gt;</type>
      <name>signal_accept</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a4fa311905bd592445ab05698fc697da7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Gdk::DragAction(const Glib::RefPtr&lt; Gdk::Drop &gt; &amp;, double, double)&gt;</type>
      <name>signal_drag_enter</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a89b0c82f8ed5ada63684ae3707235476</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Gdk::DragAction(const Glib::RefPtr&lt; Gdk::Drop &gt; &amp;, double, double)&gt;</type>
      <name>signal_drag_motion</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>aa904f34d767e2deff1d666159c2b6c1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Gdk::Drop &gt; &amp;)&gt;</type>
      <name>signal_drag_leave</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a290e76a19dd3a1629cd1d7ddb69e0379</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; Gdk::Drop &gt; &amp;, double, double)&gt;</type>
      <name>signal_drop</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>ab7f512ae6745ee34013682065ec2261d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a9a67a95d29e5a6f6372f96377fd808da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DropTargetAsync &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a0308e1a6d5d2ed95d3e383fea7316c0a</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::ContentFormats &gt; &amp;formats, Gdk::DragAction actions=static_cast&lt; Gdk::DragAction &gt;(0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DropTargetAsync &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a6d30cc4a0cf87224d276d01089b45ba3</anchor>
      <arglist>(Gdk::DragAction actions=static_cast&lt; Gdk::DragAction &gt;(0))</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::DropTargetAsync &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DropTargetAsync.html</anchorfile>
      <anchor>a0bf55965aeb57f1335a1959eb990ccc7</anchor>
      <arglist>(GtkDropTargetAsync *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Editable</name>
    <filename>classGtk_1_1Editable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a46e724ebae01430ab73bd42c1e7c10bf</anchor>
      <arglist>(Editable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Editable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>adca2232788f206fea521ae0fd5dd1be5</anchor>
      <arglist>(Editable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a49c3b42dee7f0c94d963a2204a4b4b6b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEditable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ac1d268a6aaf1ee3b30177ea1426f62c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEditable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a187277de76b04680734f4ed2807e2b49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ac0b9bacef50a4c0df4a671aec69aeca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a0863b1eeb49d570fac4775db1cba44ec</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_selection</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ab7308bac47c1d1775438125308eafba3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a3e0235bee7f816c45da487b2f43686fc</anchor>
      <arglist>(bool is_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a23963dd1bdbc40bd17d7c05baf684701</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a8058f9683a48997853f6674b84fd6dbf</anchor>
      <arglist>(const Glib::ustring &amp;new_text, int new_text_length, int &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a4b44a4d986f6865750eb2a8000fe9c57</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>afed0a3bb4a543876a8a4a024156513a6</anchor>
      <arglist>(int start_pos, int end_pos) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_region</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ab288b6dfe61110a6399a3919ec95611e</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selection_bounds</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a7e60291e2c3e702956fe55be1836d1af</anchor>
      <arglist>(int &amp;start_pos, int &amp;end_pos) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_position</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a3c01c7b97115fc6a7d1dc2e861c57893</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a84fbf1f8a5943295607d732f64cca582</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a4ba9ec7d33529980a674abb09799e1fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a1fbf86c4681b6412eb017751d51b5b73</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>abf8e184c4122dc1dbc2bc3f64fd3a473</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ad277efb8a2127a38d88770bd252ef624</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_width_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a2f5e297f6bd6ead3af8ccf3af95f12ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_width_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a483c94c77e5946bf4527a191c67ad4c0</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_undo</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a64ce2590dd2f933e1a16534ceb1bdd2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_undo</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>aab7d25cd0384b5b243070c26119b173f</anchor>
      <arglist>(bool enable_undo=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;, int *)&gt;</type>
      <name>signal_insert_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ae47a84200d311decc124983cc348c72c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int, int)&gt;</type>
      <name>signal_delete_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a5285c1016a0c4d9f995793549fe77117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ac059be53358a61d212af6aa39f01ad98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>aee595672a969957ff0f072d4fa253b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a8bf964de9ddabcb34d4e4c5d6b95dcf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_cursor_position</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a5e25019fc9181214006fe94ee1caa044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_undo</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>aaa835455086e7b31dbb9b19da5001697</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_undo</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a2f5ca773120c76d1e9d4a738d5dda4e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_selection_bound</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a1bba4b94400ee84b84220f152f778307</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a6c10a80bb7fbcaadec10cde79f23d557</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a9cb834ffd128317814fd3f7910d5db48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a6fca84810b3fd4ef25036b9e1ab00c00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>af36772ab885cba03ba35c4be8023c498</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a71712b007b2999656be4c305eeefe285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a1ee0e7078c37edf339330cc38171ab38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ae8bad215a0f35e7065ffed776cd2c5ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a9e49c9b1e3bad92cecb71a57767b77a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a1b40e6e4a89f62636f2a780c9aff96ce</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ab59b36b3c1e43eaa99de25cd6ab3490a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a942d87a76591225d2264e25d082b2a90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>delete_text_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>aee3d5daa35c42b70c0e4d1c1ac442b96</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::ustring</type>
      <name>get_text_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a819a90daffe8888b5f56f7ac5eebe864</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>select_region_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>aa83fdafea42e7e54fa1c9f37e235f3b2</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_selection_bounds_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>abbfd6281ca12c88b195caa24a0db5c30</anchor>
      <arglist>(int &amp;start_pos, int &amp;end_pos) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>insert_text_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a7fe574f0a424cba8d03e0514d7717cb9</anchor>
      <arglist>(const Glib::ustring &amp;text, int &amp;position)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>af84054d23e83bc619316c94453724eec</anchor>
      <arglist>(const Glib::ustring &amp;text, int *position)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_delete_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a3f91d74b6b55ca4313f2ed8b862e326e</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a71a0db1640c431ded71fa149b4ed22aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Editable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a0c87a584f0bad68134a79ba1d183b862</anchor>
      <arglist>(GtkEditable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EditableLabel</name>
    <filename>classGtk_1_1EditableLabel.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Editable</base>
    <member kind="function">
      <type></type>
      <name>EditableLabel</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a24849808bf0a2aed1c3749bae8605bbf</anchor>
      <arglist>(EditableLabel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditableLabel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>ad9ebfefe2ba053264f5313529ed59ec1</anchor>
      <arglist>(EditableLabel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditableLabel</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>acb299a59aaaddf3d7305d73b71ad41a7</anchor>
      <arglist>(const EditableLabel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>EditableLabel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>add322f3610c80f3cecc08d961548da92</anchor>
      <arglist>(const EditableLabel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditableLabel</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a78d3379840a558d5003513f56d8e7ee8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEditableLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a753264c1b156cc0fc30bb6753ffa77db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEditableLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>aa39ec8c5bc7f26c353d3b014c7d2f082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditableLabel</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a23f1fd59a838620425a3ed8389c947fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditableLabel</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a75c18203b60332197e332e1f6c5ab77e</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_editing</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a825eb1ec2c96818980839a6bddd3df04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_editing</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>aad92f71d3cc3b1273773d6e0ef175f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_editing</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a701dc40966687c9bf09757c67ded4cfc</anchor>
      <arglist>(bool commit)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editing</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>ab80bc88f71e72ad9e9745130144e97c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editing</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a224d53c994d5ce838e88953dd2d7eabd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>afd02e64c32b8e9c4219950d9134b5e3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::EditableLabel *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EditableLabel.html</anchorfile>
      <anchor>a728ccdb379e235dd6510615cbdf95a9d</anchor>
      <arglist>(GtkEditableLabel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EmojiChooser</name>
    <filename>classGtk_1_1EmojiChooser.html</filename>
    <base>Gtk::Popover</base>
    <member kind="function">
      <type></type>
      <name>EmojiChooser</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a0a339e60fa4fef4e9f198032c3a16094</anchor>
      <arglist>(EmojiChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EmojiChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a43bb2007364c3d75f7839ee2200cdf25</anchor>
      <arglist>(EmojiChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmojiChooser</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a26483d449715a80ca55e1c3a139c62f7</anchor>
      <arglist>(const EmojiChooser &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>EmojiChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a9f313994c909184969dfb540ea9eb73e</anchor>
      <arglist>(const EmojiChooser &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EmojiChooser</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a01eaad8a087805ab5b9d020ae757b664</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEmojiChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>ae321f14b5847016285d0f79dd32fe1cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEmojiChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a8532414373340f2ae79a319cf9f93362</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmojiChooser</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a1420b2ec2eba2c62b7846b340dc1d804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;)&gt;</type>
      <name>signal_emoji_picked</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a587c6e6aa670c8910a2060ed87d44c3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>abd5bfcec0ff18995b5e8f812c04dc9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::EmojiChooser *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EmojiChooser.html</anchorfile>
      <anchor>a6094ef8f9e12d9e356d5a9f0b94b6cc1</anchor>
      <arglist>(GtkEmojiChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Entry</name>
    <filename>classGtk_1_1Entry.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Editable</base>
    <base>Gtk::CellEditable</base>
    <member kind="enumeration">
      <type></type>
      <name>IconPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaeaddb18d36849c71968a6c0084a0e3ff</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaeaddb18d36849c71968a6c0084a0e3ffa428429ba9ea83e4841036fb0508fd6dc">PRIMARY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaeaddb18d36849c71968a6c0084a0e3ffa371b09d93ca01e09a42fbd5a2a423f8e">SECONDARY</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab94dd6d002283f6ddb9b888400c90092</anchor>
      <arglist>(Entry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Entry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a052ddca47648cec260fd489e2f0e8a12</anchor>
      <arglist>(Entry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aba0a848a59447b58cbac238848c3a600</anchor>
      <arglist>(const Entry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Entry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0ad607c998c5d819ce7276eb1b875f0b</anchor>
      <arglist>(const Entry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9046c57f0a12866e65c2f77ad5355d67</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3f966098e1d30379f7a200b27d0540d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3b95c72655c9d7461e69e693449870e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3595f4095821398dc4b183d2ea375b56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aaf45b31c4e51b59b9dbb35d7feb24c11</anchor>
      <arglist>(const Glib::RefPtr&lt; EntryBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; EntryBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac36b548cda5f05836cbdeead13d87228</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const EntryBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8ca6f0468a03ba068509925c60e8fe4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2e01d201806ecc30a657477cff479f21</anchor>
      <arglist>(const Glib::RefPtr&lt; EntryBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visibility</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9dd0943bbdeaa3470b0504514f40f525</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visibility</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>af32031efff486fe1fc18621ffc08c829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a671e89a1a9466d895d42d1a28aa70503</anchor>
      <arglist>(gunichar ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7f5527cc8daed68b499ecc5530261958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gunichar</type>
      <name>get_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a00912d578e8cd6d308eba94991313b03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_frame</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a504640ca087eb8a02530c6d1a8ba7e06</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_frame</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a88b6f80e5430bf90131284654cd46c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overwrite_mode</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aeb1bcdd9c42aac6281591ad15adca81d</anchor>
      <arglist>(bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_overwrite_mode</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8925a4fc692c8133cf5738540067bc84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a277097af05565353a0cdaa5f71c24721</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a11f9d832eecaddbf0677826244710bdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint16</type>
      <name>get_text_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>adcca70cd46c160f4f69367b19fe124cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activates_default</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa73461b4d63a438b659c8ce0b176219a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>gboolean</type>
      <name>get_activates_default</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9966ca8fdabbe1f00cbf252b728ae649</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0bf8a000d06a5754d734ea2b0f1a424e</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>abc34d355109c2c731a521a934d261333</anchor>
      <arglist>(Align xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a06141f856a0b5174e6aa38b0c1669e6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aea2c754b7d893aeb0fc1e702e282d34c</anchor>
      <arglist>(const Glib::RefPtr&lt; EntryCompletion &gt; &amp;completion)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; EntryCompletion &gt;</type>
      <name>get_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>abf8ba2fcb257fc8d5c39020d71aecf68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const EntryCompletion &gt;</type>
      <name>get_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1419ea543a156bd6d9fe9b6b4f62c290</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_progress_fraction</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a899c3d5def8a61554f8d00f9d112510d</anchor>
      <arglist>(double fraction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_progress_fraction</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a22b59286a1e00e1c0899012134900b37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_progress_pulse_step</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a68dafb722b031315f714b128f38e8918</anchor>
      <arglist>(double fraction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_progress_pulse_step</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8e49520d77d37dc28bbe4d9d7b653d2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>progress_pulse</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab226eca2a6d4e625e0e7784ff32d1520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_placeholder_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9eb8c47b31b37e0ba8e7f0252304a00e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_placeholder_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2eed50b0634c0e3b61b2670db82390c0</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_paintable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad6154801c73c928def49f0eea48c6080</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable, IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac3a7bb1d195d624b588bd4588f20e699</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7ade4d9c92abb8cc479db5bd30e961ee</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon, IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_icon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aca1511e5aeac67eb472e59bff8f71078</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Image::Type</type>
      <name>get_icon_storage_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a19b4236a5ee5ad22ee78862e5b4c742b</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Paintable &gt;</type>
      <name>get_icon_paintable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a69b86607ba7e0d1bb3f4d405c03b5c22</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Paintable &gt;</type>
      <name>get_icon_paintable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad320d4894db0f26600979e676581aa2e</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab127ace1475ef2b61eae7bbb8dc85d6b</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a12c830c71ea9be383526f7dbbf29f680</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a09afd0cbe0956e71f7c605c745dd7ee6</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a66e3d0ed769d751d4c7372d92da68df6</anchor>
      <arglist>(bool activatable=true, IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2d01c94bf71361b9bd88cc196ce56491</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a50afba3bd3048ac764ddb20d3ba21a58</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY, bool sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a51c3d87b4a7444cc9034ca9173f8a2f5</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_icon_at_pos</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a80b0ed8f4a4988c251f84e1d07f9a329</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9975772f43837679d10f770db4009d8e</anchor>
      <arglist>(const Glib::ustring &amp;tooltip, IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa8f2e03b305e3b1e15c710b26d38cf05</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad14d0c325ad97216ce3666fa84511a6a</anchor>
      <arglist>(const Glib::ustring &amp;tooltip, IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab45c8ba50fba7f99c703ecc69ead94e0</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_drag_source</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7ed263d5e4be5ce5b1d83541133f2af2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::ContentProvider &gt; &amp;provider, Gdk::DragAction actions=Gdk::DragAction::COPY, IconPosition icon_pos=IconPosition::PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Rectangle</type>
      <name>get_icon_area</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8bf7354140970378995792355a24da54</anchor>
      <arglist>(IconPosition icon_pos=IconPosition::PRIMARY) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_icon_drag_source</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a6509e7897cbabeacb4a6b366fa48cef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_im_context</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5d22e76bfbd4c3e89be05f7677655858</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_purpose</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afa89cf34c536af7175c88958ace60e45</anchor>
      <arglist>(InputPurpose purpose)</arglist>
    </member>
    <member kind="function">
      <type>InputPurpose</type>
      <name>get_input_purpose</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab741525e87e1bda5beabc34e3f300346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_hints</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7c4c0fbd30deb8e593cbe55a087b0305</anchor>
      <arglist>(InputHints hints)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>get_input_hints</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3f75c84144e22e4adf5a950424e87b6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attributes</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0f6057fdd2bb2121a6eeb0077744da87</anchor>
      <arglist>(Pango::AttrList &amp;attrs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::AttrList</type>
      <name>get_attributes</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1b9c3d50165c05e6516719034c66120b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tabs</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab7707332a05d1fdbccdd4d1e90c2d177</anchor>
      <arglist>(const Pango::TabArray &amp;tabs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::TabArray</type>
      <name>get_tabs</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3e1d560759370f35c255c734ae44721e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grab_focus_without_selecting</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>adbe2dc2fa3bfbb80e88eb27bf8810676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_menu</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aefded4203d2c7404abc845612399af31</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aeecb111c9cbd17b9f65d64451d6b6fb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a6854481dd5c3bc50086ec9f002bb3577</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a6257c8b92282abc6c757a963fc72bb69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(IconPosition)&gt;</type>
      <name>signal_icon_release</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a86f5fab4f3df24e90a2e2a3ac377ab09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(IconPosition)&gt;</type>
      <name>signal_icon_press</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa9ed5239a0d419d366f0844ab8df310e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; EntryBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a063a062475a91fad8b53cd316e397df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; EntryBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3f406d7bf4a11892fd3fa7cddd5b705e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5cdd0839c0cd0647c2bb40bebc04e694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a45e45046635bf6918c9112a14adbe374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visibility</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab48239dd07de344eb19d521b5219bf4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visibility</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9d11256300a9d9fc429fb36c7a54f2cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a98bcd94afa7bb2564f9de73569c311d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a97913c4ccb3753eea5338b87cccbf471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gunichar &gt;</type>
      <name>property_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0244eb6e64be8dca03756e947d41472e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gunichar &gt;</type>
      <name>property_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1b2de581e94ad5bc2d5901b6818675e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_invisible_char_set</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a98712397d45cb984d88544554d2b7f79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_invisible_char_set</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>acd3321451765096b8f8458b41ceec563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ada50a0c049dabed79a375ff50cb4b446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a440f3cb4b78c5e0f0a3cb718dbf5f2b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_scroll_offset</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aca4b490ca8d521ba1f26f6190ecb0a9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_truncate_multiline</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa83e1c5010c42fa15efa8f8f65fac503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_truncate_multiline</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a16c35404f25a4a5d7c97eba27d784d74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overwrite_mode</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a022d28feeb5aa97614401623a96cb31a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overwrite_mode</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0d15c25834b802e430b05d468b121a31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_text_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac78c83d03dded3b5e8e5e9733842bf77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_progress_fraction</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a426ecafae082eb17dbc9eb2a7127a01d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_progress_fraction</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aff1b265b48a8f821e43fba4a6e9767a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_progress_pulse_step</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5c2e3ba8b731328f06ec3b9bc8ef813b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_progress_pulse_step</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2513624e52f190810fb53d48b5a387bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_primary_icon_paintable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>af08c0657f5467b3644e300e49dd28315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_primary_icon_paintable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0100420578d3d05a615c781574eabcd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_secondary_icon_paintable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a80fbfa77b0a81df9424d5da56e9af556</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_secondary_icon_paintable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a806f0ab0da8706c8444451cccf53ed8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_primary_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1a977c5f8f6647d1754a4d58cb3b42d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_primary_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a55c1cba6f0f0f75fa88182798957365b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_secondary_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a59621ed6d7fde2f43c57236acd5970ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_secondary_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1bab45ee8cab3e3189f057cb7b5074a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_primary_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad7a7053f14c38bcf87b3405acd9211a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_primary_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ae0cff92bdbe3e5fc0f7c31adfd9fcdb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_secondary_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9b4ce0aa1f6568b792adca6737c321b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_secondary_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afcbfed3211d3634530385ac573323d31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Image::Type &gt;</type>
      <name>property_primary_icon_storage_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a518cd53d600359a55ccc06de51280d19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Image::Type &gt;</type>
      <name>property_secondary_icon_storage_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8c011dbe4f33eac49bf21879431035dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7e2dce9358c189e393f3e7b71fdb4e01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a4d24abf7946da5ecbc3f1cbd74b558d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a98b91b03925dc1f70ab631ad4015d65e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9d5692a5fd93d84e3bcb4ab4787ac1db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2f5b19d2f23f4d7dd57eefc1d94176c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8045586288220d4c14163619b0b15bff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0c020ee4da1a40257aaeefdc4215e91e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab9a7cb8996a97a5525fb36e979bf6dad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a275324936e37a3da34d450c437531c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a66cb89b710a96e856d1bb9f80160ec15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a45f09c964df4a2c7a8952ef442417e5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a52ec70a542214a099a9ac279c29b8c16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8523fa6d6d3c38831a1f90773e7db392</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a37652be222afa9294c20dd9f76cc4e04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad863b1f52ac09ebe48d6794c46548e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a952047543f166c8f294d424e7aee6325</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aec64b2ed8db46a0eb3df78098f13890e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9d2a6872a914afd3ed2b244e3bc9eeda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afd675235e3f9c1bb4d09e98a7b713ef0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac980491e57683f0585cd3a14f7bdf9fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; EntryCompletion &gt; &gt;</type>
      <name>property_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7555fb9cd9c41f7d4a2e2fc42e80a1a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; EntryCompletion &gt; &gt;</type>
      <name>property_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0076a57ea16fc7a0612de7a63a4679a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aee5534791f40f79c8ede28704b426c2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac82c49bab18e0d0a2565ef428d5734b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>accda01a202debfbb60d224cc4a2dd958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8ca61ac691d75a733f7b9bbc54fe96fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a401cebfd6589094e454b5bbda93e4347</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1a884c6801ddead846abc87ae7e3c8d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1e375aacdb4170ebed8fc5bde721805f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>acca5400e9c490438d4b2e16eea69525b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>af70bfaa3ed1fe0bed350ed95a48cd2bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a84e616f998f0cf98321a30ad075fd8b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_emoji_icon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a975bd8773da91bc4141a1b1713c348df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_emoji_icon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a4678f5b8a1018fd131bc202ad2073fdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_emoji_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9dd2a65760cf540800a8befac7cb3b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_emoji_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1097ffe778953342f771587a30d752b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0abfd8164dfa228011f3e824103dc90a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Entry *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a317ab243722ef15794dafa511176576b</anchor>
      <arglist>(GtkEntry *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EntryBuffer</name>
    <filename>classGtk_1_1EntryBuffer.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>EntryBuffer</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>aa89320ff4e293f9af54973d457e01858</anchor>
      <arglist>(EntryBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EntryBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>ac2e78aee448abd067a19f7e217a5a5c8</anchor>
      <arglist>(EntryBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EntryBuffer</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>adf3c745aee826059b550f56098c3f318</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEntryBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>ad567657dd7d73c3277dbf87647cfe4ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEntryBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a646d81dfb73ce5d4531113f41625fb97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEntryBuffer *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>acb885a342bd3b42577eab89d5e0d2925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_bytes</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a6134e48a6609582166cba8ccc2fecec4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a289322262b440ff196b9680398ac5f60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a1e7cd833bdbfb245aaf0458834be5c98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a289ee88d181f1b81b9cada53d12628ff</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a381e1969e3f387ef19cbf10cfae5ca46</anchor>
      <arglist>(int max_length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>ab9d7303af58810285b5714ea8f3c40a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>insert_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a01bf8802e1570532eb7c6afc6bbd4851</anchor>
      <arglist>(guint position, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>delete_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a1e735047dd16f4b1c40aa4c952d50258</anchor>
      <arglist>(guint position, int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit_inserted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a0866b9a826b9f96f941eaf84945884fa</anchor>
      <arglist>(guint position, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit_deleted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a325918e5e859bba2927daa25113c32d3</anchor>
      <arglist>(guint position, guint n_chars)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint, const char *, guint)&gt;</type>
      <name>signal_inserted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a32c4c5a7c3353d485435a1026ef4ad58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint, guint)&gt;</type>
      <name>signal_deleted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a3f606ae6a24205b0b3c23ca1fa3a6c41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a37321a848e983cd7426ffc9f2722ddc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>abb055a8fb70d6fa083e40133a5c6a6c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a8e699dc44e4621b65f8af8fccc760631</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a1207241632564f941d637baaf3c293a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a8f8dfcf4fcf0ec51ca92aeb77daab5d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>aa63aadf672f0df997d92c254fe08e461</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EntryBuffer &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>aa8d182fb0881a3a58e71352f63a37710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EntryBuffer &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a730e9d1751b9275a2de18da9c16d39c1</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EntryBuffer</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a560c87ddbf7790dde544535edada9d25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EntryBuffer</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a0af68812843e71fa92933ee646226a18</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_inserted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a03098135ed4dd4ca5df39e602fe4d6ca</anchor>
      <arglist>(guint position, const char *chars, guint n_chars)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_deleted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a422081a55ff1fd9712fdde947bffd163</anchor>
      <arglist>(guint position, guint n_chars)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EntryBuffer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>aa7f5eb545b57327fecf0681665f19d7c</anchor>
      <arglist>(GtkEntryBuffer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EntryCompletion</name>
    <filename>classGtk_1_1EntryCompletion.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::Buildable</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const Glib::ustring &amp;, const TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotMatch</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a469e21ebd268fa0097a499f2a375edc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntryCompletion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a4143787e24c05ad31c2500b5a6f415d9</anchor>
      <arglist>(EntryCompletion &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EntryCompletion &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a807b77e5ee2541daff66c219321968d5</anchor>
      <arglist>(EntryCompletion &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EntryCompletion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a8b35dc4a69ff6bedd1d2bb160f1a0002</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEntryCompletion *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ac5d7e3901f625ce6ad49d407b09b67bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEntryCompletion *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a274ab2b0fc244bfc5b1f68948fc06eed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEntryCompletion *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3b5411ca68bef9fa74d60e7aba50e70e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>get_entry</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a86ab303d750df98bafcb3b3ea25aa824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>get_entry</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a4e36db0ff1aad9e22e35793968948a68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ace78afcde83713f12c20c97ad6185034</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3347e85ad5aba5f71647825259377fe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a1c2098bf00f851421f18e3a8d4309a73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aebfca6adfd1d0298ed4b5a9dd2c66100</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_match_func</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3322b529944b15b80e3a9f7beca07816</anchor>
      <arglist>(const SlotMatch &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_minimum_key_length</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a8c3f31fe0b5044d89f80b5c7a3b711f7</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_minimum_key_length</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a0c355578f10b84ef7f4f267d6bb33e87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>compute_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ad6dab5c042776c29165d292a0bebd0c9</anchor>
      <arglist>(const Glib::ustring &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>complete</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5a9467a0ca886addbdd0b2c9de3db9a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>afcea3ef244666558aba1e8d7da37d400</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inline_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5350c2818638bbe609b8801722d0ce0f</anchor>
      <arglist>(bool inline_completion=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inline_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a2fc2d30d6ac80486e8a5f8628c2f9140</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inline_selection</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a6edeeb5ddbdcf6e8b9a1a2ead983471e</anchor>
      <arglist>(bool inline_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inline_selection</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ad96b40137eed8308afc15d1ec5277c92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a803fb91a50ba547105d1b55c060dea46</anchor>
      <arglist>(bool popup_completion=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_popup_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ab421a8e6782043e5a3a6922a90ecbc2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup_set_width</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a4374f2bee5d9b7fb380db31208c23842</anchor>
      <arglist>(bool popup_set_width=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_popup_set_width</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>acda6e3fe95e45977e47a02bcd89a0dfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup_single_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a278fb680457123cbdea1aa3242c17eb4</anchor>
      <arglist>(bool popup_single_match=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_popup_single_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5eb6d0dc3258af0c56ba90a099cf2e39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_completion_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aa8e7485c53e6a1e29dbf75ef757d3a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>acaedfc73d239405d868342b14a0963f0</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ab36e1610db2c556b2c9c171c385c9ac4</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>afd343d37fb458b0a6cef15e927af67a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const TreeModel::iterator &amp;)&gt;</type>
      <name>signal_match_selected</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ac3606be14284a67b4eb5a4e2866acc56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const TreeModel::iterator &amp;)&gt;</type>
      <name>signal_cursor_on_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a30231916ec1c7c759044d9cfde45c039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::ustring &amp;)&gt;</type>
      <name>signal_insert_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3ff96651b6adcc488206856f09999190</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_no_matches</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>af77d6937985431c54c272778fc6b5a55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gtk::TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a4f6926c192f2629f786cba4f89985b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gtk::TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a0fada84463e4150396dee9d2bd281d25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_minimum_key_length</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a98a57accefcf1213c705a27dc9854ded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_minimum_key_length</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>abca2df134bc621eabbe1de788d55dd9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a40f666b5606ad5a51df886e69f61e6e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ae124e6d4027c9674223085373022fd43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inline_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a026b14cc9fbc8586cb8aaa41d8c6c99b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inline_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>adfdce7696422e93439d52f08eb548258</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_popup_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5bac263051bb1a0ae23549334eb0fdab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5b4e46a2c18fe5501f42e0f7d0ccbedc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_popup_set_width</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aa7574d8fa58798c6f9db44e8066443c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_set_width</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aaf574cc6f54a866794f318d6492105bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_popup_single_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3cd5f87d9709d860b106c01993e735d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_single_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a6083ff6a7da4855f8262e4ed6601fd3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inline_selection</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a1835e471e605388ff1ab8018bbf0e2ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inline_selection</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ac0220a83b6e7f5534ababd3e4336074e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a04b150d624db545a73b022b55f9caa06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5474ea853bd015c7148479458d5ffe0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EntryCompletion &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aff0be9be1b63ad825bf8f8181f10dcc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EntryCompletion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ae5eba9f21c7df310f06567f37b30fd28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EntryCompletion &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a33c76e70ca30d22676a23dc1d37b8712</anchor>
      <arglist>(GtkEntryCompletion *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EventController</name>
    <filename>classGtk_1_1EventController.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>EventController</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a7cc45ffcaaefab76f385e82e30f5eb4e</anchor>
      <arglist>(EventController &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventController &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a134e61c755957a9a703206986595c5e9</anchor>
      <arglist>(EventController &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventController</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a01e5d033a39ac97cac3b2e4ef622d85c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEventController *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a2155c53567308b153c108afd3c17f7aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEventController *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ad3feae1bc3e874a1d0b359f578824579</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEventController *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ad1a8d8dd50247bb2cbca8ccee0c01917</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ab0a3645d9d0e9c2bd4eefdffce054d3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a51c2bd4005cb34b222922e7dc2fe7af5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ae1805dcccb6e3007f694819477e6ca6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PropagationPhase</type>
      <name>get_propagation_phase</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a4ef28abbaf18833f3be8056b56f74670</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_propagation_phase</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>aa463e8e855f1e23067780a68617aebc6</anchor>
      <arglist>(PropagationPhase phase)</arglist>
    </member>
    <member kind="function">
      <type>PropagationLimit</type>
      <name>get_propagation_limit</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>abecbf6489f6a053262ab24a97af91d4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_propagation_limit</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a65b45ddcf8e6639523d73086d2792910</anchor>
      <arglist>(PropagationLimit limit)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a9d63a83b0b161a20e3aad5d700499f7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ad998206166584fd8a256dee54eeb0360</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Event &gt;</type>
      <name>get_current_event</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a4ed7830bb107e9710fc543ef450f300e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_current_event_time</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a48e21683464e53fbaeff9444c37d85c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Device &gt;</type>
      <name>get_current_event_device</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a6539b041f5a84f62eba596b666ad8f5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Device &gt;</type>
      <name>get_current_event_device</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>acc24590a2c5e249920608e14d91df259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_current_event_state</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a8de3a99b6e00595749e4dca107515d21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_widget</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ad8ea2a010cf56bdc35c0dd24148cffeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PropagationPhase &gt;</type>
      <name>property_propagation_phase</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a53c05f43b6625eade3c0339ab0e6c698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PropagationPhase &gt;</type>
      <name>property_propagation_phase</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>afad0407711e2fd615174afd2bf5968d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PropagationLimit &gt;</type>
      <name>property_propagation_limit</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>af0e47c657a48523454c62b24b4589c47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PropagationLimit &gt;</type>
      <name>property_propagation_limit</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a580efbd2ae5d53fc50f9bb33b84eaeab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a85081535d5f2fbac62267b6e13c2782b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>aebbb7ce8631fe9f6c16cbbd6aad484e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a9eac99ab3cfb2d7371ca12331a49598f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventController</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a060416111aea37a75326436eb6d9c289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EventController &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a7954d6f01bb40a4b45e4fcebe901827e</anchor>
      <arglist>(GtkEventController *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EventControllerFocus</name>
    <filename>classGtk_1_1EventControllerFocus.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>EventControllerFocus</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>ac93ae13ba5a336493389acc25961bffd</anchor>
      <arglist>(EventControllerFocus &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventControllerFocus &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>a1ed2e3569194bf5850d52fc78f9a86eb</anchor>
      <arglist>(EventControllerFocus &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventControllerFocus</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>aa3768404b4495707dad97a1ce3eb8e1f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerFocus *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>a307ee3f2da90129c96ce9bc0218707ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEventControllerFocus *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>a39378241c9b9dc74dc8999cfbf128b7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerFocus *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>acc3a01bb0b15eea1d5fd097d67ad79f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains_focus</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>a3cc2152eab6cb1f6eabf48cb97fd24dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_focus</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>a084842d05552e0115b0c0ce4d890c993</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_enter</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>af34c0523a8adf4ffcc92dddff441310d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_leave</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>ac183cf8c71a8318a02f4bae1991bf8f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_focus</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>abb669dfe17a10b9857cba0c245070b12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_contains_focus</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>ae98099aa6988955fa47f0d50d8baf83f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>afff90d83facb0980fe987aed6108a3d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EventControllerFocus &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>a0dec1f53417444124a12c4ccb0445788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventControllerFocus</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>a38baa2236afa8c7fb6dd6ed2b8f13d59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EventControllerFocus &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EventControllerFocus.html</anchorfile>
      <anchor>a756f4278f3eee2acf396223be1fef39c</anchor>
      <arglist>(GtkEventControllerFocus *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EventControllerKey</name>
    <filename>classGtk_1_1EventControllerKey.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>EventControllerKey</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>a04902d2952c555fdcaf8ae8b20fd194c</anchor>
      <arglist>(EventControllerKey &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventControllerKey &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>aa9aa3717a8a9e79523351662e0069fb6</anchor>
      <arglist>(EventControllerKey &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventControllerKey</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>a0266ad4966469a4d39d09ca2006e7360</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerKey *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>af78adbbada41a577f8b9bb6bbb8a7fc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEventControllerKey *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>ae7ae44fae8fc19934ba81662e599b701</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerKey *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>ab1d555c3458ae66f524ab0b8b012549e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>a507b3bd8f03ce9a83df4f0af2025ac6d</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>af5623b0d4888f1e5387a7a7312b8e7b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(guint, guint, Gdk::ModifierType)&gt;</type>
      <name>signal_key_pressed</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>afdaf86d3dc1263d5633ccaac6f73fa6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint, guint, Gdk::ModifierType)&gt;</type>
      <name>signal_key_released</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>abdd8f3547afc368d7d830e7869eb42e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(Gdk::ModifierType)&gt;</type>
      <name>signal_modifiers</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>a4a441566374832e331e837bde52d2cc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_im_update</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>aea7dc62d2271e0f9ce2d2a5f9a6dcd88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>a58ff895626e2f9481b7a112702359f64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EventControllerKey &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>af5c0291197891a23cb60de4fbf063e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventControllerKey</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>a8ea2bae5c24dd2e53cdbe2851cf973db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EventControllerKey &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EventControllerKey.html</anchorfile>
      <anchor>a40bc79f5049efd4d8885302a5b224c7b</anchor>
      <arglist>(GtkEventControllerKey *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EventControllerLegacy</name>
    <filename>classGtk_1_1EventControllerLegacy.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>EventControllerLegacy</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a357aee336a6472ae42f48795b092071f</anchor>
      <arglist>(EventControllerLegacy &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventControllerLegacy &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a33c2a5bfc0b3669c14580dae7aed7820</anchor>
      <arglist>(EventControllerLegacy &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventControllerLegacy</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a0f3fde5b65f4febd7b7d8434c5229130</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerLegacy *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a84c732178bc5c001a6dfea613a23aa78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEventControllerLegacy *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a1d7dd6d6373de5848c16ab71f845d39e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerLegacy *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>ada842748f0e59c794ca51369984fc7c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;)&gt;</type>
      <name>signal_event</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a02c42247273afb43d1eac37431398afe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a23b3d9c86b366d5d4d1613c646ab50e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EventControllerLegacy &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a403b093c34e317f062fc2ca12cc3e43a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventControllerLegacy</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a4648d7397bdcf2200ce28a2ebe9c6e4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EventControllerLegacy &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EventControllerLegacy.html</anchorfile>
      <anchor>a3014b5ef19269118a75a792016e07673</anchor>
      <arglist>(GtkEventControllerLegacy *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EventControllerMotion</name>
    <filename>classGtk_1_1EventControllerMotion.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>EventControllerMotion</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>aaa77ddef74982ccf1575ee7a9d0c7257</anchor>
      <arglist>(EventControllerMotion &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventControllerMotion &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>a6d90d2b6ecac047e01fa178449876521</anchor>
      <arglist>(EventControllerMotion &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventControllerMotion</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>a388d789450a4aebb9d36c90f515c81e6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerMotion *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>aedba6e46485f6bbceef39e5fd7b8b83a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEventControllerMotion *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>abe33cccd5efc2d1c22aa0a7166f11ff3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerMotion *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>a14445f50df505929c5811abca3d5b66c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains_pointer</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>aa6d3dc939670f90728f471f1288fa7cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pointer</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>a29e2e4618bde1ed46e0c28dc8c071f51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_enter</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>a6f22cb7e0d9ca068126ecc71b8984cad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_leave</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>ac942a7dc71353227083ce850bee07ff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_motion</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>ac9b47533792bc84069e7bb240fb8189f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_pointer</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>a89ca837672b6c0ff2ce116da0019a371</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_contains_pointer</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>a6ce9da887081fb204a07ffa6cdcacaac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>a8df13d85e549655718ebfcb9dde3f93e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EventControllerMotion &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>ac0b60bcdc74b82fb56cddd32d11d9955</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventControllerMotion</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>ae8a49612a1a23a420e1fccdb11e042e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EventControllerMotion &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EventControllerMotion.html</anchorfile>
      <anchor>aca2065f76a7d90ff9d88ce147dcd2d54</anchor>
      <arglist>(GtkEventControllerMotion *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EventControllerScroll</name>
    <filename>classGtk_1_1EventControllerScroll.html</filename>
    <base>Gtk::EventController</base>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2f4ea68ca5589be50d127b8986af5ed6</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6a3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6a86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6a947436f2927405d3b5997a9ffbaee5c1">DISCRETE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6ac0893282d183a6fa7fd80184fa3c55b5">KINETIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6a09c53ae3ab29ec3163646260f1718fe4">BOTH_AXES</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>EventControllerScroll</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>ab31e5c2ee23ff84e1969f4b578ce6e30</anchor>
      <arglist>(EventControllerScroll &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a1af98012c3aba522adae682bb7197d84</anchor>
      <arglist>(EventControllerScroll &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventControllerScroll</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a419941c753c5ba54a45bb2c4391171b1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerScroll *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>adb12453adee178eca00257e66146dc72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEventControllerScroll *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>adb4c51900a3a4c9bf0379fbafc8e9909</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEventControllerScroll *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a3b544a58857f66ae676d226dd4df2f16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flags</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a225067376b4560c9f320cd0de2620401</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>get_flags</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a036249d88a6f63425836b6cec7b50f17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::ScrollUnit</type>
      <name>get_unit</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a95f3ab8506e882562df8be5594b15411</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Flags &gt;</type>
      <name>property_flags</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>aa00233bc81ae0d8924a411543bbbfd4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Flags &gt;</type>
      <name>property_flags</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a4a7e8245ba9d2ffc69b28ca3badaaaee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_scroll_begin</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>ab6ff56aa0d0e52b700d2c5958ad75062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(double, double)&gt;</type>
      <name>signal_scroll</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a18ab1f6f1d35bd8f461bb99ffdcb0a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_scroll_end</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a5773cf8d62853a10fc62bae2f1d0430c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_decelerate</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a4f3cf68e590f9f2670218ca0995b6c61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a97d16dd819e75f9b2797b693f8a3f7b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EventControllerScroll &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a1d7f5872e2d7dc2762e98afeef49dbb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventControllerScroll</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>abacb17483714e9628fe3174cadb2379c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EventControllerScroll &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EventControllerScroll.html</anchorfile>
      <anchor>a7ac248d5ac84d9549f22e360eeab51c3</anchor>
      <arglist>(GtkEventControllerScroll *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EveryFilter</name>
    <filename>classGtk_1_1EveryFilter.html</filename>
    <base>Gtk::MultiFilter</base>
    <member kind="function">
      <type></type>
      <name>EveryFilter</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>a59a66ece6ac52981d4cb80aaf1116473</anchor>
      <arglist>(EveryFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EveryFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>a485c920351294a267bcfed46a30dcd0c</anchor>
      <arglist>(EveryFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EveryFilter</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>aaae80dd54aa3b877583a78e5eedf2a39</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEveryFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>a8dd59a587435c68b433b423efc39f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEveryFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>a28261638d8cd50741605e0c75d23ef2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkEveryFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>ab29d42ff2bf4c61fc6467fc32cfc4923</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>a21575f0ccb1a50ca6de2f25d961ce6fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EveryFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>aaef6ff43cdc0835df3037aae8efc7f1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EveryFilter</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>aa249dbfb03a6ebbc78236f7b66def9d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EveryFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EveryFilter.html</anchorfile>
      <anchor>a6bfb951916a18fab90781535997a968e</anchor>
      <arglist>(GtkEveryFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Expander</name>
    <filename>classGtk_1_1Expander.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a369fd753e2323c516f856a9724e4326b</anchor>
      <arglist>(Expander &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Expander &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>af62e16392e2a61ea87787da8f39b8199</anchor>
      <arglist>(Expander &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a4b7e6f538a3e4e0a0d4f03a0906368d7</anchor>
      <arglist>(const Expander &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Expander &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ab237149db4f8b625fd4df0ba74fb30a0</anchor>
      <arglist>(const Expander &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a1f208b5a02f079238977ab54a7ed7656</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkExpander *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ae877f207bfa77723625ca9e296704453</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkExpander *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ad1440707eb4bb190608939d29eb7afb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a3877a08bffa14ecdfadc41fd8ff64a19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a7a4e41ba79a7ee0358cb0423b1689fb0</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expanded</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>afefd2219b8385f091716c4b4f6696ef9</anchor>
      <arglist>(bool expanded=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_expanded</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a7c180998ccf18327f8c13cc08630e483</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a213463dfcd03e4fe73174b0300481b8c</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>adc5acdf515bb50c002de91147cfd016a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>abbb4c979dacbda70d9e9368d0349ce76</anchor>
      <arglist>(bool use_underline=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>aa99a7a64790e7884f0eee0451c6518f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_markup</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a2604bd9768c8119f29629e2b02c79392</anchor>
      <arglist>(bool use_markup=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_markup</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a3c073016a8a52479a15a89e450d83f0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ac15bd816f9c79e061a2b7825c3d91096</anchor>
      <arglist>(Widget &amp;label_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a581e4df4d76acbb7e9ba2403e1874bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a4bd716ac3124b116b3c1bd027092b86b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resize_toplevel</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ad957b5d73c8d73f4b003b7a8d7b229b5</anchor>
      <arglist>(bool resize_toplevel=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resize_toplevel</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ad568a03a62fe49a5c5ff1de449774b61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ab7f5389378fa55f47e2f483725288a3d</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a01ab3f9ede517cd69d7b36df537ba9ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a7af95f28609fd4a99094ebd3ef60b3cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>aeefda89c3413f40831e8a28ccbcd3cc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_expanded</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ade17883fc70c87a780b35613403313a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_expanded</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a807f145427ea46385e468818aa17d009</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a31f8e53e50a811f2651ae93353480c1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ac42bd992685c963f7c1586eff8468256</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a9821eef65d1826efc675746d94339e8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ac93c7e41c785916549a2e66f9bf86c4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>afa46fae64b6f4c9668141cbbe1339be5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>adb501450599dc2218d8035e6df7536a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>abd0ab6e4940ffa0123962fc9725fc768</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>adc6ad2b3ef4f1f29d097a9f7bb94e0e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resize_toplevel</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a9211778c87f0cddfa813c87d09a537dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resize_toplevel</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a347fb79197b181367ed8caff8cb8f9fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a840d954f474f2509e540361ca2895d20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ade03d80b058a07439ed779e9c4278ca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>afe5312b13a678ce6028d9157b1edc20a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Expander *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>aa9d40bd8188a8196be8de39b91dc8705</anchor>
      <arglist>(GtkExpander *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Expression</name>
    <filename>classGtk_1_1Expression.html</filename>
    <templarg></templarg>
    <base>Gtk::ExpressionBase</base>
    <member kind="typedef">
      <type>T</type>
      <name>ValueType</name>
      <anchorfile>classGtk_1_1Expression.html</anchorfile>
      <anchor>a53fea545cfec9e3f2e09d4647d2da7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; T &gt;</type>
      <name>evaluate</name>
      <anchorfile>classGtk_1_1Expression.html</anchorfile>
      <anchor>a98fe38bcc5bd5e705da3501e81c1ccc5</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::ObjectBase &gt; &amp;this_)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ExpressionWatch&lt; T &gt; &gt;</type>
      <name>watch</name>
      <anchorfile>classGtk_1_1Expression.html</anchorfile>
      <anchor>aabd9320b44013b3d76c774d972da35e9</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::ObjectBase &gt; &amp;this_, const SlotNotify &amp;notify)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ExpressionWatch&lt; T &gt; &gt;</type>
      <name>bind</name>
      <anchorfile>classGtk_1_1Expression.html</anchorfile>
      <anchor>a5ac280f23ae5fb2811e49a253587d866</anchor>
      <arglist>(const Glib::PropertyProxy&lt; T2 &gt; &amp;property, const Glib::RefPtr&lt; Glib::ObjectBase &gt; &amp;this_=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ExpressionWatch&lt; T &gt; &gt;</type>
      <name>bind</name>
      <anchorfile>classGtk_1_1Expression.html</anchorfile>
      <anchor>a4c0e2c9fc2c462f0413c3381fba922b7</anchor>
      <arglist>(const Glib::PropertyProxy_WriteOnly&lt; T2 &gt; &amp;property, const Glib::RefPtr&lt; Glib::ObjectBase &gt; &amp;this_=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ExpressionBase</name>
    <filename>classGtk_1_1ExpressionBase.html</filename>
    <member kind="typedef">
      <type>sigc::slot&lt; void()&gt;</type>
      <name>SlotNotify</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>a8422c196df6400eea2722dcbab092f46</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>ab48de8bd3727a918b36ed90e58ba9fd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>a379a29c8700e27d3ea2e5011d232c9ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkExpression *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>aa72fceb5ec317df22aa15b157e3b10fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkExpression *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>a6026c2d07bef14825db670170a8ad6c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkExpression *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>a44e7cbd2882bef734d745959d283f6f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExpressionBase</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>a90be647ec1ed000f60ccb9e5d4f27e5c</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExpressionBase</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>a31f49143ba99ba2120af6291e23bb9a5</anchor>
      <arglist>(const ExpressionBase &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ExpressionBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>ad988320307223da810ffa9b4209a67d3</anchor>
      <arglist>(const ExpressionBase &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>get_value_type</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>a0fb304a36660fbdd9852bf02fb3da66d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_static</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>a4195885827f82995d7fefa3e15a01c9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>acc385427b6f510fbd9b244fb6f3f71e9</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ExpressionBase &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ExpressionBase.html</anchorfile>
      <anchor>ad2fa93909a8db603eecadc5bfc4531af</anchor>
      <arglist>(GtkExpression *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ExpressionWatch</name>
    <filename>classGtk_1_1ExpressionWatch.html</filename>
    <templarg></templarg>
    <base>Gtk::ExpressionWatchBase</base>
    <member kind="function">
      <type>std::optional&lt; T &gt;</type>
      <name>evaluate</name>
      <anchorfile>classGtk_1_1ExpressionWatch.html</anchorfile>
      <anchor>ab20da8a7b718e06093a0dc6c1fe69ab9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ExpressionWatchBase</name>
    <filename>classGtk_1_1ExpressionWatchBase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a31e2c6cc06a3df769c22b7eecadb7fd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a12c6b3e4a79620b16aa962031d74e325</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkExpressionWatch *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>aacc6c8e9f11ef71246ce605b29f271fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkExpressionWatch *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a1d80f8ee1f07da9214377dab7c7af864</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkExpressionWatch *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a5f1d6204b54d15edf735716c1c772399</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExpressionWatchBase</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a9bcc7307c56f042e6957d0654ed15617</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExpressionWatchBase</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a5713af2a10dc9284d6e295e1f9aea297</anchor>
      <arglist>(const ExpressionWatchBase &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ExpressionWatchBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a4f469e58886667490fc129facdfcde4f</anchor>
      <arglist>(const ExpressionWatchBase &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unwatch</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a82dda5418e95e54e8b4210ed6c7114d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a80946dae3399dd63dbed95f59acc6c37</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ExpressionWatchBase &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ExpressionWatchBase.html</anchorfile>
      <anchor>a984f38f953701e4ceca27cf7568381a6</anchor>
      <arglist>(GtkExpressionWatch *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooser</name>
    <filename>classGtk_1_1FileChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumeration">
      <type></type>
      <name>Action</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga57f46e9703df51c17120a1ae66013c64</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57f46e9703df51c17120a1ae66013c64aa38bd5138bf35514df41a1795ebbf5c3">OPEN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57f46e9703df51c17120a1ae66013c64af5cf47ab06d0d98b0d16d10c82d87953">SAVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57f46e9703df51c17120a1ae66013c64a5fbf65adb266b6de8f2f52e5b69d9741">SELECT_FOLDER</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooser</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a920fcaad5046594b5780a87b57848e0e</anchor>
      <arglist>(FileChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aa92c107040205966e4c778e9ecc63dbb</anchor>
      <arglist>(FileChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooser</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab3c514b36461791648f326e93315f902</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a1114551dd1d871a7f25dd922938ff3b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a9c7a79aa04d387aa970467afb264f6c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ae6de0472adce65888398670be8261409</anchor>
      <arglist>(Action action)</arglist>
    </member>
    <member kind="function">
      <type>Action</type>
      <name>get_action</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a40fcae544a86f426252cccc0abb98944</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_select_multiple</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a30a13c0df47fab50c93ad8f38db0c88c</anchor>
      <arglist>(bool select_multiple=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_select_multiple</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a5c01a09606c1ab0354168a6e64f3d2e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_create_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a7f01d6c09d301a6cb1b757d00b3cd5dc</anchor>
      <arglist>(bool create_folders=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_create_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ad59b81bc0d5fe8641b75f8201ae5a1f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_name</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a5c01937980edceb0f5d12bc0d4d593bc</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_current_name</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a9fdc924a097635426bf18bb2fdd3886d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a3dd98107d7c7a00ca37e58b457f2dc98</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_files</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a06a1bcc2532dbe0b91c6049eb2e782ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_files</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aba25128fc1085c472688abbefc7c6621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_current_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a9c564fc1ffaca204cc31542f06fc34ec</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_current_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>af8f924eb2dc89133ab69ceecc4268ea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_current_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a43f465bb937938e808ecd4185f56ad0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a431d09d8b36efc88bbc5b4272253c4bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a1b828fe2327dca5438522937d6229aec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a15cbd8b9a365f91e4a4e97d1fa31cb42</anchor>
      <arglist>(const Glib::RefPtr&lt; FileFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a39ded72c0d4d9e30e57eca005f5a0c02</anchor>
      <arglist>(const Glib::RefPtr&lt; FileFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_filters</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a92694b0fd7fe9cf34d60dafccefa4509</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aedbeea6a5c67dd5b1edb5c3fc51f6f1b</anchor>
      <arglist>(const Glib::RefPtr&lt; FileFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; FileFilter &gt;</type>
      <name>get_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a362d1b750d76a42c9e8857463bf70a02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const FileFilter &gt;</type>
      <name>get_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aeafca082dfa0ba29934a88aa32436be4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_shortcut_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a0154e275df7813c002deab75ed45ce9c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;folder)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_shortcut_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>abeab20b3dac86a2366c1c21a198eb352</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;folder)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_shortcut_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a558a4d237ee8c9f3fab7d1147dfd55cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a222fef59fff8dc29dd50f7bd1ea745a3</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;label, const std::vector&lt; Glib::ustring &gt; &amp;options, const std::vector&lt; Glib::ustring &gt; &amp;option_labels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a2f7ea4157b7982ae85343e316d31e834</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a80fec3db483f7d086a778ed680681b89</anchor>
      <arglist>(const Glib::ustring &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a9dc9856e48450efc97752f3cf6a7dd7b</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a0764c44a36acc252c97ece74ba10bbb5</anchor>
      <arglist>(const Glib::ustring &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Action &gt;</type>
      <name>property_action</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab9b15da3b76c65eeb18e85b8d8b74094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Action &gt;</type>
      <name>property_action</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a37af90341d3360473fa7e991c16b240e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; FileFilter &gt; &gt;</type>
      <name>property_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac189765d544aba24dff23fe44a97c2ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; FileFilter &gt; &gt;</type>
      <name>property_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a9efe2b6b649fc8f7e5ab3b99e6e7400a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_select_multiple</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>adefb4831699b5a76b07005ac781d7902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_select_multiple</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a8b29250ec1590f1545ff65e1ca439d97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_filters</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a8c197c751be08a1c4a6a3829e2f9827f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_shortcut_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a797e635b910634133690cc282bf81424</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_create_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aa50b81e55eaba9aea5a52cabac8997a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_create_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a3ec16022206fcd6009f9acc6e4133c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>adcf8e76b113200f4886ba83405aa1468</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ad9922f7a55ffa1e539fe4f2208e23630</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileChooser</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac73cec9def6277f5c1175acc3f232895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FileChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a3d9576db84e6ac789464f52e968f4bbd</anchor>
      <arglist>(GtkFileChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserDialog</name>
    <filename>classGtk_1_1FileChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::FileChooser</base>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>adee61b40da388676c0d6c5b4a1e35e2c</anchor>
      <arglist>(FileChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>afb359f40dfff46a12f1a595067d297c7</anchor>
      <arglist>(FileChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a767274d862adf2493b5e2af2ea7482d3</anchor>
      <arglist>(const FileChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FileChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>aca9e15639fb13305d3aa32c047993400</anchor>
      <arglist>(const FileChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a499d4a840008fb0d06e03e5bb9784e27</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a8bcb702bdc16043f42481c8cebccae55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a623ab24c2cce13f1ea21776621b1c073</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a70d8e51aa4a834f220b92980097e5f51</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title, Action action=Action::OPEN, bool use_header_bar=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a324ce60ac8bcf4fc2f34a956a2ea5a6e</anchor>
      <arglist>(const Glib::ustring &amp;title, Action action=Action::OPEN, bool use_header_bar=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>ada1c9dd556c3c4aae3e056bc1ce9373a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FileChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a1bbb7b4763b3b8094840b9377de185b3</anchor>
      <arglist>(GtkFileChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserError</name>
    <filename>classGtk_1_1FileChooserError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONEXISTENT</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4a292b08ac9837451c52cde1da0c2c98e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAD_FILENAME</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4a212e2a203821db45f151fc38d82f2df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALREADY_EXISTS</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4aabecdfbc8269fc0794f278d812472f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_HOSTNAME</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4ac45f27b7a72e51af0d1e2bbb7aaeb21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONEXISTENT</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4a292b08ac9837451c52cde1da0c2c98e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAD_FILENAME</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4a212e2a203821db45f151fc38d82f2df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALREADY_EXISTS</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4aabecdfbc8269fc0794f278d812472f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_HOSTNAME</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4ac45f27b7a72e51af0d1e2bbb7aaeb21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserError</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>ac93edd643f14738f2bc59b714e856d2e</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserError</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aedf0ac3d4fae1be85a90ff7bf2a8b9e2</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>a3de664f6ccdc01ffe38cf9331aca46de</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserNative</name>
    <filename>classGtk_1_1FileChooserNative.html</filename>
    <base>Gtk::NativeDialog</base>
    <base>Gtk::FileChooser</base>
    <member kind="function">
      <type></type>
      <name>FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a1e80b98646e29c0b8ca1b2537c875d14</anchor>
      <arglist>(FileChooserNative &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooserNative &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a928773464ebcc3844c84dd4f1bb11080</anchor>
      <arglist>(FileChooserNative &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a291647afc9fb933ef107463bd4bd2a56</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserNative *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>aa6b12b68a93509eab9ee67ce2d4e0edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooserNative *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ac627a5000b133d844be665284b7f9e9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserNative *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a0f7ff732a3998c56efe8fc754b337abb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_accept_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>aca72b83f6abbef9ff2667bf6de487ba9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accept_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a7c1790b2f8efd9c40c6aee08e407d8ff</anchor>
      <arglist>(const Glib::ustring &amp;accept_label={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_cancel_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a6af676e997b08f145704431849b000ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cancel_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a0cda41744a4b1403cf5681dab7b9f9f4</anchor>
      <arglist>(const Glib::ustring &amp;cancel_label={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_accept_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a018ff8243b91c19c061e9f1a375b3616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_accept_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a87426731fe0ddb60235641926901c712</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_cancel_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a9feebeee4e337d4119f85a43d0c20b40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_cancel_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ae07cf7fb16ba000f4d7ce175c4716d0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ac4644b13bd59c9fd77f301610f0e59a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; FileChooserNative &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a7b71e60c81a744664189d4446d56fee2</anchor>
      <arglist>(const Glib::ustring &amp;title, Window &amp;parent, FileChooser::Action action, const Glib::ustring &amp;accept_label={}, const Glib::ustring &amp;cancel_label={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; FileChooserNative &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a585fb60c9805a5fa0c10c01426a89acc</anchor>
      <arglist>(const Glib::ustring &amp;title, FileChooser::Action action, const Glib::ustring &amp;accept_label={}, const Glib::ustring &amp;cancel_label={})</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a7ab65141edbdd3c6d810888361f11c48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ae3d582fab059a6ab9f08a8c8f38ea314</anchor>
      <arglist>(const Glib::ustring &amp;title, Window &amp;parent, FileChooser::Action action, const Glib::ustring &amp;accept_label, const Glib::ustring &amp;cancel_label)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>aa1f9d7ad860d1bd869654ebae0d74b02</anchor>
      <arglist>(const Glib::ustring &amp;title, FileChooser::Action action, const Glib::ustring &amp;accept_label, const Glib::ustring &amp;cancel_label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FileChooserNative &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ac44824dcebd5a10f7fa4287256403016</anchor>
      <arglist>(GtkFileChooserNative *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserWidget</name>
    <filename>classGtk_1_1FileChooserWidget.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::FileChooser</base>
    <member kind="function">
      <type></type>
      <name>FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>aaab545bfbe2b8438ec3edb24575b3bab</anchor>
      <arglist>(FileChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>ab5c5e8d9f97beebf98263583724bf00e</anchor>
      <arglist>(FileChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>afd632435a7d01e70658d3786584e051d</anchor>
      <arglist>(const FileChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FileChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>acc9a392168d655de825be24721b9b569</anchor>
      <arglist>(const FileChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a99f1d81b8d3f668f94e3a3e78c17603a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a7eb42c3028ebe77b8404164319809dfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>ac6f4b2b95f688850e9cf563514d4f134</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>acfeca275482ffbaee31b1e913e63bf6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a8a6de8e9a06e0769f6f4dac3c004ba8a</anchor>
      <arglist>(Action action)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>ad2b912d3afb05ed7eca83247884dabcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FileChooserWidget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a82f782bae793c1f0510732a3157435c0</anchor>
      <arglist>(GtkFileChooserWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileFilter</name>
    <filename>classGtk_1_1FileFilter.html</filename>
    <base>Gtk::Filter</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>FileFilter</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>aca180019c6ac6f48e51fa6733ffbb759</anchor>
      <arglist>(FileFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a43bb6b2de52e8eada8d12de53ec2f713</anchor>
      <arglist>(FileFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileFilter</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ac6fc6b0784673d39f9d3383a032c6472</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a66e9c0496e9160dac00dc4084b7546bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a6bf110e83ca605d587bba2d67f419ff3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkFileFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>afb95797c616d629fe908a460be3489ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ac192ae4b6a0d24ab00c2d2d434550813</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a17fb0bcf626466804207387311bea5e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mime_type</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>af0a289b2b4576672f4ce46de1a84f0be</anchor>
      <arglist>(const Glib::ustring &amp;mime_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_pattern</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a9b49e4a03afffc2806d17abf33b26cad</anchor>
      <arglist>(const Glib::ustring &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_suffix</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>aaa3bd052d931bd2a6e95110a9be113b4</anchor>
      <arglist>(const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_pixbuf_formats</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a7ed1bdf8a077b87b66efbc9fd308a367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>af8e9195da41a1339c64c91c39dcbe226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a4d7a3d7df5ab81ae76e4ef4dc481ed9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a920cd5dfa240af7d474145c91d55178d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; FileFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ae766003f93b060fa592ee2b11006454e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileFilter</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a542b0bc5fd456766db2b91c502a05603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FileFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ab0df20f0adb893bddba5d1e6f58a496e</anchor>
      <arglist>(GtkFileFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Filter</name>
    <filename>classGtk_1_1Filter.html</filename>
    <base>Glib::Object</base>
    <member kind="enumeration">
      <type></type>
      <name>Match</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacf3ae0254df1758e5c2e31e595623473</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacf3ae0254df1758e5c2e31e595623473a7c3e1ce969660271ac92e0a5796f5006">SOME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacf3ae0254df1758e5c2e31e595623473ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacf3ae0254df1758e5c2e31e595623473a5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Change</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1edfeef044a3ebf31d50b073d06567a9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1edfeef044a3ebf31d50b073d06567a9a0b744563be36b7a48a74c50ca8cb6086">DIFFERENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1edfeef044a3ebf31d50b073d06567a9abcc8a989e619cf65df48a50a91683252">LESS_STRICT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1edfeef044a3ebf31d50b073d06567a9a5efeef338b2c0e8b36bef3ee2ce65e5a">MORE_STRICT</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Filter</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a9f74cb6749a026bf8de91acf8d470729</anchor>
      <arglist>(Filter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Filter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a3be280efbb87967e63d8a8ba9f35d5ac</anchor>
      <arglist>(Filter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Filter</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a8a6a03e47b35d21583fcf5f515011772</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>ab6b2b44b646a00be56c450fec35120e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a652d2f18ea4bc79461683be744ec0877</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a657359d4ad3663abd62ef43988e6282a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a49763bba385ca39c65683e09d72094c1</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::ObjectBase &gt; &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>Match</type>
      <name>get_strictness</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a8abaffa3cd8c935c312733418504ce83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Change)&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a208eb66d147fe7d97611bb20adf37140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>afe49d7fe05fd383fd4744058d93c4a1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Filter</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a19c25f28a2a850e6d54facd16967e69d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a0c8d0232fdee4d08da1f5304384f88a3</anchor>
      <arglist>(Change change=Change::DIFFERENT)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>match_vfunc</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a63482dee508ea8e7c4f70cdbe3ea82f9</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::ObjectBase &gt; &amp;item)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Match</type>
      <name>get_strictness_vfunc</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a6e80c429c400b2c838880c1e3491364b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Filter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Filter.html</anchorfile>
      <anchor>a9668abd330a58031fd88b59b84d5974c</anchor>
      <arglist>(GtkFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FilterListModel</name>
    <filename>classGtk_1_1FilterListModel.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <member kind="function">
      <type></type>
      <name>FilterListModel</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a2ffeb1c018d64f0795802f4a66690ca7</anchor>
      <arglist>(FilterListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FilterListModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>aee6208abd6abd08a6a7447c7592272f3</anchor>
      <arglist>(FilterListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FilterListModel</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a68888c4e8b34cb6c949e371826c6a2bc</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFilterListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a4f37b0f358ec6e6406bdaea737bacb64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFilterListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>aff9619f4570c42fc32f24ba637f32bc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkFilterListModel *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a8d455596237cd715fd8ec122a0433980</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>aca51fff861a2ea96d5ef29f9ce5ea4bd</anchor>
      <arglist>(const Glib::RefPtr&lt; Filter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Filter &gt;</type>
      <name>get_filter</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a353e695b946f129a892a9bc2f369c0ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Filter &gt;</type>
      <name>get_filter</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a4b1092fa888a6ac325918bd128b7d49b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a9204031527620191c78a9b57be050567</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>afaa652d575ab0eb3726ea2b20290bace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a905c110f0a52ebbaa729d228864ee818</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_incremental</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a745435d4bfb2f3cf5da496998208a5d2</anchor>
      <arglist>(bool incremental=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_incremental</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a5336151453c6fd35aee7d1aecafd9a69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_pending</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a38592bc24a8abd70142a438eaf216eb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Filter &gt; &gt;</type>
      <name>property_filter</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a40c462eaeb6cd4932fbbbf4f17a8e16b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Filter &gt; &gt;</type>
      <name>property_filter</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a38c087b63d1e8fcd558fefbef7fed242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_incremental</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a304ec1a86baa5d29bf47cb818be9a41d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_incremental</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>ab894b4d507aead7561b2a39dcca25fab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>aa77c1dcc67bf642dc1b683569dc35103</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a73b457a4780b55b28d2a8ed5705265a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a05ea4ee405898447ef3b2e8091ecfbde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>ae667df87b086dcd61b0ef9ff6bdb510d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_pending</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a7e1d7c3c4eac8da1f31876349690b4f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>aefb25194855d84ec04cff3fb88cc24b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; FilterListModel &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a4c6184b7678309cb5377e2726d71114c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, const Glib::RefPtr&lt; Filter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FilterListModel</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>ad80c0814ae1db5f9f5ec5220f9d7f71e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, const Glib::RefPtr&lt; Filter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FilterListModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FilterListModel.html</anchorfile>
      <anchor>a82cbffac50d702778134d23398db0d69</anchor>
      <arglist>(GtkFilterListModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Fixed</name>
    <filename>classGtk_1_1Fixed.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Fixed</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>ad434dd596ff3e3cb9d14948f71ee6ba4</anchor>
      <arglist>(Fixed &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Fixed &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>aa9cdad3f2b44ef1ee35ec3d75207375a</anchor>
      <arglist>(Fixed &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fixed</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a81c8be9b8d32af74ad2a7fe27f16d9dc</anchor>
      <arglist>(const Fixed &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Fixed &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>ae2d3f686f3817181711e0c1bbb7e2d1a</anchor>
      <arglist>(const Fixed &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Fixed</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>ac838ec5a3c045ce72cffc2ab165e0ba8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFixed *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>af5aa0d3c6cec6e9ba092e0dc35ccf195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFixed *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a13517c2498bf7a2335df8cf1d20c6814</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fixed</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a42bad4abd7ea279f245407847330bb4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>acb0d9a56267367ffb22463ce2576f4e9</anchor>
      <arglist>(Widget &amp;widget, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a585c9af3e1ff3d065db0676597288493</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a030c78a0b3d024502b329ce278393629</anchor>
      <arglist>(Widget &amp;widget, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_child_position</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>ac373e919abc3447037cfe75a99b80605</anchor>
      <arglist>(Widget &amp;widget, double &amp;x, double &amp;y) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a827ef6387e7336f82983b503bdeca3a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Fixed *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a2dc0892b2e202598377a10227f84753d</anchor>
      <arglist>(GtkFixed *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FlattenListModel</name>
    <filename>classGtk_1_1FlattenListModel.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <member kind="function">
      <type></type>
      <name>FlattenListModel</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>aa065105e24a75da631a2c811ea911adf</anchor>
      <arglist>(FlattenListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FlattenListModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>afe345eabac9b6a276dcdfd527afb46e3</anchor>
      <arglist>(FlattenListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FlattenListModel</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a44b681d3e5c90bbf5ae163a2af0ae295</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFlattenListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a66b5e100ece836168d9f32a74ddf6351</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFlattenListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a1742453ec8713fbdf24cde9478a0278b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkFlattenListModel *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a7661593dbf73198fe6ed94c5c0e773f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>ad3c428f5123ce1e37db93c74fe8229d4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a156fbbe1e4cb2dc356f7c5774478491d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>ad450eea0cbe268c4d3100b6f8b725b17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model_for_item</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a959eecf2fcc9160a3d9f8ada086d1ca7</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a38ff435b634763f36f237e8c928f63bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a230c819f1321c55a133bfad9eb0ce02e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>ae254c17fc10d94c43caa111447f95421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a505191512f34269eff599e008b046144</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a2e59203f4ef0f481b8a226dda5a4b4e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; FlattenListModel &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a31ccb4f58024982bfd833fe3e65cbb94</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FlattenListModel</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a0cfabe608930ad7d2e32d97aa436d73a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FlattenListModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FlattenListModel.html</anchorfile>
      <anchor>a2e08341f84373a9959397bbf77dea738</anchor>
      <arglist>(GtkFlattenListModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FlowBox</name>
    <filename>classGtk_1_1FlowBox.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void(FlowBox *, FlowBoxChild *)&gt;</type>
      <name>SlotSelectedForeach</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>af7932e42c729785f556b48d96cd52bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(FlowBoxChild *)&gt;</type>
      <name>SlotFilter</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad7bfacd3a66a89e0a7e60891b3d3ac55</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; int(FlowBoxChild *, FlowBoxChild *)&gt;</type>
      <name>SlotSort</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a1f174613edb3a0c3435b0347c0d6c1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; Gtk::Widget *(const Glib::RefPtr&lt; T_item &gt; &amp;)&gt;</type>
      <name>SlotCreateWidget</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ac47b4bf7a8fe99f80ae4d0d93eadf554</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBox</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a32e4270b07c085b62d56f285ea30031e</anchor>
      <arglist>(FlowBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FlowBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa12dd68965e8bcb23960573935051a98</anchor>
      <arglist>(FlowBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBox</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a636f2f965e0efe599087b7309b93fb5c</anchor>
      <arglist>(const FlowBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FlowBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a82f570a31cb864a79397af944d2fd013</anchor>
      <arglist>(const FlowBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FlowBox</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a497f6a62a56622ce9bad8c8e68583fac</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFlowBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a1b7d818fdbf52891c49ae5dd116a3f83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFlowBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad62d38cd1c1d44566cf1f196058901a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBox</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa137bd4156a443cb3aa4ced10409e3e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_homogeneous</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa902a9b314a380963ab8275c5fac3946</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_homogeneous</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a0ba5534556f13fc4fa422fb0d12acc64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a297137277af0ea48ab1a1693168a61ad</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_row_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a1878c171ea391bdf7c16ddb43220f0ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad77d3af8d8ee1b3fa03ce10764fd7d6c</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_column_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a993309ba5698ca397941f0c4bbb3ad6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a09af717a4fa6f56bc643316324a023b4</anchor>
      <arglist>(guint n_children)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_min_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a5120ccaa225716023549fd9e76bcfc57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a5e426decfcf28ea5500caf164fef55c4</anchor>
      <arglist>(guint n_children)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_max_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a70a19e760e37cfe72eb0a867588ce83d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_on_single_click</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a791a649eca881b53a5243f1e263223d9</anchor>
      <arglist>(bool single=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activate_on_single_click</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a655a7bf622b5654f39ce007fc402bb5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>afbff932d9b65a6104f017433d5b53a63</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a2fd02af25aa4bd8e8de6d9e61b8ca62a</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a1330f2caa25d4f3bc328d79c5807c1d0</anchor>
      <arglist>(Widget &amp;widget, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a59b9427cbb5c1ab3084f039cd771d267</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>FlowBoxChild *</type>
      <name>get_child_at_index</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a07a143c958fbbb8c29a821f482f18c0c</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>const FlowBoxChild *</type>
      <name>get_child_at_index</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a03846cdebc902d3c1b5ef4841f760439</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>FlowBoxChild *</type>
      <name>get_child_at_pos</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a50dbc6d270a26b63e36a2b712c542227</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>const FlowBoxChild *</type>
      <name>get_child_at_pos</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a8862985decabce7ecd615556cfe565a1</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a869df8cc1f24ab87d781780a99942c46</anchor>
      <arglist>(const SlotSelectedForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Gtk::FlowBoxChild * &gt;</type>
      <name>get_selected_children</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad211a45fcecefebae41f656f0088ca62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Gtk::FlowBoxChild * &gt;</type>
      <name>get_selected_children</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ab7ed8a25f76c426a32deb9e060900df4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_child</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a65d93511ac73d7dfd01856544d1408a3</anchor>
      <arglist>(FlowBoxChild &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_child</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a0199a8aea2808bef627cab89f9cb05b0</anchor>
      <arglist>(FlowBoxChild &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>afa4c9a9f7cb37ab967083f672613e73f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad026f3f1e3b00c4e7eccbd6626b7981e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selection_mode</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a8fe476ca99a88e857fb956a2ec1f35ed</anchor>
      <arglist>(SelectionMode mode=SelectionMode::NONE)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>get_selection_mode</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a595d7259d9fbb82daed04ff1e9e745fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hadjustment</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a64b5ca9c3d76a0149808d9c42c23f734</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vadjustment</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad022dc553253058c3c8ecb779ba200aa</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter_func</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a513aeea8478c9ce96323d8c559af9ab2</anchor>
      <arglist>(const SlotFilter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_filter_func</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a79a7bf07da5c1cc8cfdfa8d358cec2bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_filter</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa8b07ab1a206ce48fde9edca75cf1d85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a92de4edbfa01f217e60fe613902b4532</anchor>
      <arglist>(const SlotSort &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_sort_func</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a4e42fb17b28dc7fe29503c43481fb334</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_sort</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a2ab3c459fda3c4e1bc5675e8982d7fe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_model</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a4c38c06a813666d9d76aa1d4b037ebd0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, const SlotCreateWidget&lt; Glib::Object &gt; &amp;slot_create_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_list_store</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ac54c1f423d594ad7b7a985f1c1eeac36</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListStore&lt; T_item &gt;&gt; &amp;store, T_slot &amp;&amp;slot_create_widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ab2bbc9c9df1f85e9b354c8a688e7bdc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a6e3c2ab150a1cf3ff3cf848c69e38684</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a91feab82ebf60a3748238372962104d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a57fe5865e135f33f0bdf0efdb0aa3032</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_accept_unpaired_release</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ab2786548071c8df7a69e84416756f289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accept_unpaired_release</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>add45c1c16c3dfc208628eb1b49c2faa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>af82a516b814829251f5798a302497d36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a6a39060d1d847f2fdf21163d193845f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_min_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a5d4f7fa85c94ac2c0ddacae37e5529d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_min_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a49d21e1b676c0454c11c9089b98bf712</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_max_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa05813d0e57699a58968ec3ba54f5970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_max_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a7b028e134a6471322b92d9697957c5e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a29e05486afa3eba37ca3b4385744b026</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa988650caa7550ad387f3e09133e705b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a052e4cac663124790d4fbca244e076eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a9b58e3c9001ffc73c69de6c8a8eedf2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(FlowBoxChild *)&gt;</type>
      <name>signal_child_activated</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a6712abae0cbb0002d56e009ca12a47cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_selected_children_changed</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a5d182c3d7419b03df65d21dcb44b5fa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a65f3a6c2a8bb365c8ca065d72992401e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FlowBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa6dde91366a5cf45928b094082149561</anchor>
      <arglist>(GtkFlowBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FlowBoxChild</name>
    <filename>classGtk_1_1FlowBoxChild.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>FlowBoxChild</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>ac42a3d58de35b16709096461f61750a5</anchor>
      <arglist>(FlowBoxChild &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FlowBoxChild &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a8aa8c60c132ff00cf178ccc28df8fa0b</anchor>
      <arglist>(FlowBoxChild &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBoxChild</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>af403d56d8aa7cc96036f3668e0fa3d13</anchor>
      <arglist>(const FlowBoxChild &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FlowBoxChild &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a83bd13c663aabe810560672c00545279</anchor>
      <arglist>(const FlowBoxChild &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FlowBoxChild</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>abaf1ca0a55cd2a754a9bd6e41e8a38e4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFlowBoxChild *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>af6f3ebdf69dc512917342b29022c803e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFlowBoxChild *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a73baff05d0282a5d04781e3823102d20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBoxChild</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a5e62b6b4bfa53246a162f463a0b3e3df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>ac5113e6e85d640b451e771a1b9d10b74</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a1f73f8c310b446e5d01bd22e52091917</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a891cf83c1ef76cfea3f8885bc312671c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a167c8447a1e25d9993dda7165c4dacd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_index</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>aed63c1ab98b1e2b335527edbad9f4876</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>af4b33586deedb3c4d5280d38b6eae76d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>abda49e6ba46b2d3241f127b2cdda8490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>ae3b5ce6db972dac697b95ea6505dd07e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a44c7b930fc22628eca97003298fd9dc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>af132805211d79923c4bad769dbd25ba5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a36fb556cd5df813e6a6d23272b7a8ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_activate</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a007d98e73d80672d705fd6efeeffcd5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FlowBoxChild *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>acae640671516dd40d0d5fba3857f7f2c</anchor>
      <arglist>(GtkFlowBoxChild *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontButton</name>
    <filename>classGtk_1_1FontButton.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::FontChooser</base>
    <member kind="function">
      <type></type>
      <name>FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a9298d8c7682024dc19c391e7216cbae0</anchor>
      <arglist>(FontButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a42d1fc236a8e889bcd674160063ea2ca</anchor>
      <arglist>(FontButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a333422b5f79584cf913c31fe907c1c76</anchor>
      <arglist>(const FontButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FontButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>abce6b52e68bae7720617d2948aef3b43</anchor>
      <arglist>(const FontButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>aa30a85271099daad22f2a5d06854fbbe</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ad4dae76c16ec6d501816f1a06e9d44b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a7eb96c07d6caf7509601934898f31592</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a6c4cd3ff6471b91de3140ea022721206</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>abbdc682872859bf37a9c7bf3968f91b4</anchor>
      <arglist>(const Glib::ustring &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a2de1d85e57585b41551f13088c352d3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>aa9242c9a2f46ae3847f3310e6d0eeeea</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>aa3d6b140ee64702541e5d772cb9edec2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a8fe42f94946633d93de545ec0224e2cc</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_font</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ae5936572507530b1a1b94d35c083e0b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_font</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a8d5c246629a904f077fa8ceeab803dc0</anchor>
      <arglist>(bool use_font=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>adc8448451286869e2a98fe3eb1d7dc9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ab0fbd6f5cec6c568cbf3b74516837426</anchor>
      <arglist>(bool use_size=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a95d88ab182b97aeddacd5853a293c826</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a07c4a4b9fd15e97785deb26fc06e4b1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a83376e1ccff256e13fcace44903f1b73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>adff02e6e491281c67c5543b9fa0417a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_font</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a7639d2dddff0fb063d328115f7187794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_font</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ab501a3e6b5a325dd0c7acc3c07ce1516</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a19291169724b2eeaee251fbef0e3a864</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a959dff9806b51a1946897d8525e6ffc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_font_set</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a212cedcce774229eacabf75268749c64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a3cae94c9b174f32d13ac8136e809066e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FontButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ab4ed31888be6aa85c29a6e4519fefe39</anchor>
      <arglist>(GtkFontButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontChooser</name>
    <filename>classGtk_1_1FontChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumeration">
      <type></type>
      <name>Level</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3733404e877c764250e07774a0e0e01b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01ba499a1fe16898531e2422c704a0288797">FAMILY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01ba264709ebce8699b21d39a308b1f9d32c">STYLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01ba62e5cef85d46f1a5a2144d9fd463b79e">SIZE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01bacf88d392b0f0838b288a189e17af99e4">VARIATIONS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01bab1fa6b4767532c2e890022101221bd08">FEATURES</enumvalue>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const Glib::RefPtr&lt; const Pango::FontFamily &gt; &amp;, const Glib::RefPtr&lt; const Pango::FontFace &gt; &amp;)&gt;</type>
      <name>SlotFontFilter</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aa29d34bb98a0e935d3f2d0584feb75b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooser</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ad22d2f0506cca8746b0ddf8b8f2fa9e4</anchor>
      <arglist>(FontChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a179456728205a411201467b80834fd67</anchor>
      <arglist>(FontChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontChooser</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a7b9890060ec14b5ab4740bb402ef7bac</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a9cc5f92a16eb752cb3ffa4961fce39e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a5149642b84a112b3cbecefd56a084bda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontFamily &gt;</type>
      <name>get_font_family</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a64362a3f656863f6942078ae7f468a68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontFamily &gt;</type>
      <name>get_font_family</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a34419b038502759fcb19c04ff1df0ea4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontFace &gt;</type>
      <name>get_font_face</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a991504864d434bd410fb99aa0dd6127f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontFace &gt;</type>
      <name>get_font_face</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ac72f698a0d0fd025e6e7390ab1730a06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_font_size</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>abec7938b0128d4632b6e6fea09a8d579</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Pango::FontDescription</type>
      <name>get_font_desc</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a0a14aa5f0a4fc4ae85beb8d15185f7c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_desc</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a98b062d4948f505ba4f7778bad7d6884</anchor>
      <arglist>(const Pango::FontDescription &amp;font_desc)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_font</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a8be6fc08fb7daa5eb99c7068e9e1daed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ada0c489c1d5db96e1206a1ea7949c347</anchor>
      <arglist>(const Glib::ustring &amp;fontname)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_preview_text</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a173a70e8186a03cd4216de116b2da597</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preview_text</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a1dbd58bbd3e4c227b4dba0343154f799</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_preview_entry</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a9a898988f2dbeec1e77076923ca44b11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_preview_entry</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aed67ddac067b35f98484c6de4aab6bf8</anchor>
      <arglist>(bool show_preview_entry=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter_func</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aa488584641a100e69623c12f7a088643</anchor>
      <arglist>(const SlotFontFilter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_map</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a280450a81d7042958ee667920ab971b9</anchor>
      <arglist>(const Glib::RefPtr&lt; Pango::FontMap &gt; &amp;fontmap)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontMap &gt;</type>
      <name>get_font_map</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ad849a812bf5732b5a4e0c3b409855f8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontMap &gt;</type>
      <name>get_font_map</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a3e8bf82d0aadb61e953dbdacb862908e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_level</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a207491cd4930c34fa78df9afa83ccd4b</anchor>
      <arglist>(Level level)</arglist>
    </member>
    <member kind="function">
      <type>Level</type>
      <name>get_level</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>af0a762264e74b0b5b3d66b285063c9dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_font_features</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a20588f46de81d80242152f1226191861</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_language</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a3bbc9c35cf86dec3a324cebac649152d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_language</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a9278afde941d90d687294f6f9281da2b</anchor>
      <arglist>(const Glib::ustring &amp;language)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;)&gt;</type>
      <name>signal_font_activated</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>af408b87942596bc1a0004fe88313c838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a474bc7fb3f5a9253d7211c6ece954302</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a22c678a480d4c32afadd5403a9fbe943</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a8492ae219109f29ba6a5f7abb115f1f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aaf928c9863b057a22eabe27f5283d6ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_preview_text</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aa0a8064352e161ac8d388322a5d10995</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_preview_text</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a07d750c3c467c7e8510b5b80a82bef6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_preview_entry</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a1d027dd9274e56180ef953bf9af4722c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_preview_entry</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a6225f4329021ac4c2fca142d34174561</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Level &gt;</type>
      <name>property_level</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>adeea26d7e00351260342203a5bede134</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Level &gt;</type>
      <name>property_level</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ad94b14c4e9dbb96012539e5b9b25394c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font_features</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a3edc456075ef89fb2c61afd97e7b6b56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a92cd17c98f77ab32be1175e5365b972c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ab27471fd535b35522294eb0d2fdf2abf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a0656ed5bb2b8fb8f707a92adac5db5e4</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aaaf938698c499a71f05ed0bbe018acaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FontChooser</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a4fca6404b7b466bdc555ed2222fdb842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_font_activated</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>af24afc471ceaccbeb898c4a1581a7c89</anchor>
      <arglist>(const Glib::ustring &amp;fontname)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FontChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a70702ac78bf73669022957a4f2837037</anchor>
      <arglist>(GtkFontChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontChooserDialog</name>
    <filename>classGtk_1_1FontChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::FontChooser</base>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a21aec260f53e578ec738213e997f270d</anchor>
      <arglist>(FontChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a04a3699c1b8217af91f661772f5d0973</anchor>
      <arglist>(FontChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>ac37da8969a47ce40a2505f7e94ee1347</anchor>
      <arglist>(const FontChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FontChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>afb1baec3638de38cf87f06ec977f4b4c</anchor>
      <arglist>(const FontChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>ae81b9bba5b899ff77d1b31f96c2c7b53</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a08c3a8c891240379450090392749322f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>abb25660b9961d4f966f164c49f24ca8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>aa5e7673483d8cf939559dc7a5db96f45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a6a41b01931c71025898d4b5ef65a3679</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a17c5308fa133644c646204f43120eec4</anchor>
      <arglist>(const Glib::ustring &amp;title, Window &amp;transient_for)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>af355aa385457f3d44168ef56ac0291e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FontChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>ae71d63ac21fae6491b06a9583a404e58</anchor>
      <arglist>(GtkFontChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontChooserWidget</name>
    <filename>classGtk_1_1FontChooserWidget.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::FontChooser</base>
    <member kind="function">
      <type></type>
      <name>FontChooserWidget</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a58224a92cef03cb4e48a7a2960cd2e71</anchor>
      <arglist>(FontChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a506cc515f12138954403f0fbf89835ad</anchor>
      <arglist>(FontChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserWidget</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a798d3d9f699add117b09aa8241839c50</anchor>
      <arglist>(const FontChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FontChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>abbfad765f9c92ace50a5a84c2b2331d3</anchor>
      <arglist>(const FontChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontChooserWidget</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a06e874cb44557fd11d102951d1cf4bf2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a77e624ef5e236c95e227226eb3feb671</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a7f586c9cda96c6ce2ed003b7f7a5632e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserWidget</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>ae4972f6dfd3bd1bcdbbaf7df99f4f78b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a5d5cf58effe4df5d523934a858d482e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FontChooserWidget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a7be1c03ac7b6345cf6ba32cc6fd611bc</anchor>
      <arglist>(GtkFontChooserWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Frame</name>
    <filename>classGtk_1_1Frame.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aab41bf03532dd27605adc86141d92203</anchor>
      <arglist>(Frame &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Frame &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a6ef0dee648030753f5c245b7af3c3db3</anchor>
      <arglist>(Frame &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a866698e21e01f57acd4dbaba062acfc8</anchor>
      <arglist>(const Frame &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Frame &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a677bff94a83d2029a694f6611688d39a</anchor>
      <arglist>(const Frame &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>ae324e49cbb68f9c514bc4c71a74ae2f7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFrame *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a5f7db796218fe2e89e453071b464f6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFrame *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a57bd4f2535421c7604864bcc7dd713b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>ad885c362a8c2bc29e89a3d7ec4a5b24b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a50bf70dfc0b43db4d72e08058a346071</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a4bf1d1fd660d4a8e696b4aa047e02df5</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aed49f2286476debdf7df201e2c5fd6cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a3b552b239547cc4f6282187765114d0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a5c387add374124d065766d009f5a920d</anchor>
      <arglist>(Widget &amp;label_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aeadf0ef4557f8e28c3eb8553c3801432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>ad631e6ae2f60ee1279cc99cd7131acf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_align</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a73495de0142c60646e76311d4b8c104b</anchor>
      <arglist>(float xalign=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_align</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>ae4ecbb6710d27139467d4a3d8af1afb9</anchor>
      <arglist>(Align xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_label_align</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aeb8689d1db070b6f25e1d96d08a12b40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a50745a6fbc687675452b77fa2a8b17cd</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aeadc2348d40795968258390e32350648</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a8edccc483e0b9b9356528351cbcd7c22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a0fe090c1d1c3346d1148b74258443de3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>afb943527c60c6512f8d0301046c8bfb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a0041d7739433b9b09ea4e1471b77a037</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_label_xalign</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a198dda814ccaf7c239c28710fa38dabf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_label_xalign</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a4a60c26bb21f33c2214769f4e101153c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a3ea746b63e7c2ecc1a0db7966f607d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a53289590fe8d6ae7dba9d5ee8838be02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>ada70fbab3265c542d52fe8a62986df11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>abeb98d2e5a9b3a0e50871476571fd47d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a88b6486d251d4ed82d5863791afa16ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compute_child_allocation_vfunc</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a526060d83b13e656a42bf7c1c8def6f7</anchor>
      <arglist>(Allocation &amp;allocation)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Frame *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a82cbc754f84fde353cb8fc88fd7eb0e2</anchor>
      <arglist>(GtkFrame *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Gesture</name>
    <filename>classGtk_1_1Gesture.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>Gesture</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aaf5197dc21f3ec1b778feca6392f2e32</anchor>
      <arglist>(Gesture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gesture &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a8365960ff47590b733daa3167eecbe14</anchor>
      <arglist>(Gesture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Gesture</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a962d75d40ce17d934b1ffd0357acb17e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGesture *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>add74ecbde44172bdf927a69e4d4131cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGesture *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a2b7d097c7eca1bab6ccc979b1ebc1b25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGesture *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a45aad140646af17074639291c2be03ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aaa6cfc76d4853b8554caa5d696d4bc4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a68177fd5021d021c0e2e64d3e75f4200</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_state</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a80f76f95d0af4544a407d0f95405d6a5</anchor>
      <arglist>(EventSequenceState state)</arglist>
    </member>
    <member kind="function">
      <type>EventSequenceState</type>
      <name>get_sequence_state</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aa7212f20406efcb72524a7270384cf59</anchor>
      <arglist>(Gdk::EventSequence *sequence) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_sequence_state</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a5efb876a92ddd1b03e523917f8f4c87c</anchor>
      <arglist>(Gdk::EventSequence *sequence, EventSequenceState state)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Gdk::EventSequence * &gt;</type>
      <name>get_sequences</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a16b26ab404c0d83c5449404b095c1e3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::EventSequence *</type>
      <name>get_last_updated_sequence</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ad024322f566009fc24365b51961f403e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Gdk::EventSequence *</type>
      <name>get_last_updated_sequence</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>afd75802e1dcb7e13324318163b241278</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handles_sequence</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a67b98b70d5ed3eca3df1bd1ad0d25a47</anchor>
      <arglist>(Gdk::EventSequence *sequence) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Event &gt;</type>
      <name>get_last_event</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>adf8af0cce322802afba1e002c32f94ca</anchor>
      <arglist>(Gdk::EventSequence *sequence)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Event &gt;</type>
      <name>get_last_event</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a9732ea2e990ac6688d938743752bf7e8</anchor>
      <arglist>(Gdk::EventSequence *sequence) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_point</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ac6b021c477711f9b7000375ac28d41c2</anchor>
      <arglist>(Gdk::EventSequence *sequence, double &amp;x, double &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_bounding_box</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>afab5931ecd9183409fe5fe869b2cc644</anchor>
      <arglist>(Gdk::Rectangle &amp;rect) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_bounding_box_center</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aeeeb5c705ed0b9e987b4f0151678c2a3</anchor>
      <arglist>(double &amp;x, double &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>af83511137e0e755aa48a1b9bf486089c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_recognized</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a957c88e508f82becf8459213647bfacd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>group</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a1d22eba1fb05ed774726894e0ea03b6f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gesture &gt; &amp;group_gesture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ungroup</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ac4321961d5388a68e49ceafa774a35ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gesture &gt; &gt;</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aab477c358f080ac38967ef59435a64ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gesture &gt; &gt;</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a4187730cd0cea4eb4db4b76a33b34d75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_grouped_with</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ad3ad7d933a47585a733669a2672cc18c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gesture &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gdk::EventSequence *)&gt;</type>
      <name>signal_begin</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a36c525c823485717c259f1981cf423cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gdk::EventSequence *)&gt;</type>
      <name>signal_end</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a7de783c463a08a516cad2b0af7f79005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gdk::EventSequence *)&gt;</type>
      <name>signal_update</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a758244523acf56df73e8d88537b9e01a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gdk::EventSequence *)&gt;</type>
      <name>signal_cancel</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a77ec0bafc2e0d8db1dd24b024038539f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gdk::EventSequence *, EventSequenceState)&gt;</type>
      <name>signal_sequence_state_changed</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a0e416af9c58e320909dcdc2a4d2c9378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_points</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ae5198bcd56d9a47bcb64d42cf922ed5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a0e66c0a0fd4f9762cb105caaf434baf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Gesture</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a98436490d5a5f96bbb8c339536e133aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Gesture &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a5707274dcd2d05f1b9377acf89edd522</anchor>
      <arglist>(GtkGesture *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureClick</name>
    <filename>classGtk_1_1GestureClick.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureClick</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>abbf9dde978ae3ce3142434c1d550a2c9</anchor>
      <arglist>(GestureClick &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureClick &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>a98324e2a395ea5544f5686f1183e4349</anchor>
      <arglist>(GestureClick &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureClick</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>a0360ec1d247d8f2d7e8f0d4fb29d0bb6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureClick *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>a416cfb9a0503e663e68737d3cd634024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureClick *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>abb9a62791c3e1f3f5fc8a413e43bc058</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureClick *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>ae66a0ebb80cde5a1692753fb0754a84f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int, double, double)&gt;</type>
      <name>signal_pressed</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>ad6e945748836abf5d34a4d74e7a9cfd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int, double, double)&gt;</type>
      <name>signal_released</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>a2aa2c6e02b2900c0b4ded36ca20906f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_stopped</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>ae962ce0e78f9ee6728d27683989dadc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double, guint, Gdk::EventSequence *)&gt;</type>
      <name>signal_unpaired_release</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>a536acc3fab4509d76b4b1aa5e492b50d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>ae9758aaa33576ddc47d57d78c8e6fda4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureClick &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>ae15aee8c18bd7834f115e22f3d7f8271</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureClick</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>a0a14067a251a263432945d5ada2d9995</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureClick &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureClick.html</anchorfile>
      <anchor>afb8e38f9fbd502d3370ec6bc659d860a</anchor>
      <arglist>(GtkGestureClick *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureDrag</name>
    <filename>classGtk_1_1GestureDrag.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureDrag</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a41826bd359edfc44d921a8670626f0d0</anchor>
      <arglist>(GestureDrag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureDrag &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a017afa0256da4986a88d23bc6a718f0b</anchor>
      <arglist>(GestureDrag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureDrag</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a506cb20da88b656d7e4bac355a59d751</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureDrag *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a7edf4382cdaa9c02b5edfadebe769959</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureDrag *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>abb875048d93a133b4090f46c8b36a44c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureDrag *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a08a9c0576a724fc719047e446c6f22c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_start_point</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a95d5334173da7457657806c90d707681</anchor>
      <arglist>(double &amp;x, double &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_offset</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a14bee233ab8b2e6507d9fec2c6c8dc12</anchor>
      <arglist>(double &amp;x, double &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_drag_begin</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>ac079e169075bf20cc2faa204af1481aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_drag_update</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>ac7d3532cf6ce004c4ceb8ba4023889fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_drag_end</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a8f011f44d43ff590bca8a2e61ba5535e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a6308f95c06d99d4b2484674ced2ee3d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureDrag &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a36c418b3f7b9bc29d9bf00a31a3457ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureDrag</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a25e6c694d5791e90afcf6d55c88ee1dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureDrag &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a89c53349831b08a1296053bbacc502de</anchor>
      <arglist>(GtkGestureDrag *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureLongPress</name>
    <filename>classGtk_1_1GestureLongPress.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureLongPress</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>aa37ce9db7c1a9d70055be5db1905dd47</anchor>
      <arglist>(GestureLongPress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureLongPress &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a643ca9f7a74ce886febc40db8c852baf</anchor>
      <arglist>(GestureLongPress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureLongPress</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>ac926f7b1126f64fb95a03fda2fcb127d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureLongPress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a1adda2d64e8609f717c49064a84d2807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureLongPress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a0435408a2e1332f3334ea1825df68c4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureLongPress *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a8e7213848f59912f1104aba20b6d76e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_delay_factor</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a68d6b0dabb1a2dba79a2f8b6ab7bfb33</anchor>
      <arglist>(double delay_factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_delay_factor</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a984215f983f95ba3d2534cc388ad5c4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_pressed</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a38e4cdad4ed7b1d60b52165a0fa6cda5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_cancelled</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a1624c812e161d5287bf098eca1ee5b11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_delay_factor</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>afc5fa54284f5ab9bd9b86e6281ec9ac7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_delay_factor</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a9249de4ea910d2e6c835d6e882b53a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a4f3826fd91616f4ea3f55e3ee2d8af52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureLongPress &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a398c63143e9589febc33252a08a5fc8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureLongPress</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a60c3f4053c88440d8a72083a83a8c9fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureLongPress &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>adb8bfcd928ccf4d56e15931a1df246c6</anchor>
      <arglist>(GtkGestureLongPress *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GesturePan</name>
    <filename>classGtk_1_1GesturePan.html</filename>
    <base>Gtk::GestureDrag</base>
    <member kind="function">
      <type></type>
      <name>GesturePan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a73e05ccfa335798398753a104f0a7fca</anchor>
      <arglist>(GesturePan &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GesturePan &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>af576a8ed80d6357eb3901ec32ea2ae27</anchor>
      <arglist>(GesturePan &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GesturePan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a371aae24933f24d0e8b73320b775b5e5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGesturePan *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>af03e69f968b31d0b08001e581ec252e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGesturePan *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a73fe7a2e3c864ce400f8008ec29bd91d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGesturePan *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a00267a20e8f4383f48a580003cd44977</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>af68e1d1340ea7f1739a16aac33843c99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a50032b69926cd5c3b1715ebca8067fa9</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(PanDirection, double)&gt;</type>
      <name>signal_pan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a32d10fd715fcb5f93f80a6b9a95789ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a127027bbbff0f8e73a94fab970f23526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>aa742ae2dd478fbc0f1427f864e88717a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a232acd08e5e7ef344d9d214871d5fbf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GesturePan &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>ad7f86886deb27a567660a0ad0ac3f903</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GesturePan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a4c1f702f082469b0741e5c180060337d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GesturePan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a2d14662593d2eb259157e5318551af01</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GesturePan &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>aab936aa1f486dd4160cd02a253a475c7</anchor>
      <arglist>(GtkGesturePan *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureRotate</name>
    <filename>classGtk_1_1GestureRotate.html</filename>
    <base>Gtk::Gesture</base>
    <member kind="function">
      <type></type>
      <name>GestureRotate</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a13d3f5a7ea31da0d95b93d5541eb860d</anchor>
      <arglist>(GestureRotate &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureRotate &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a72bb57eb9ba94cfbbe845cd294b60c26</anchor>
      <arglist>(GestureRotate &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureRotate</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>acdb1ce5fed658033abc88ceb01044f02</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureRotate *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a56b0ff157edb1d3bf8b97c2b8dba4fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureRotate *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a336df2f8c2579862bfd797352e8f2155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureRotate *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a045d7adfd6e8bcfb7c2b955c2eae717e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_angle_delta</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a193a0ab8a9ad439ebe22fcd2d8cff08f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_angle_changed</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a65294e7ff7da898931d02642e3136498</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>ae268f7bc5f17788b682d6fc13115eb36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureRotate &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a51610e95331f2adb36e0a0a71304e116</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureRotate</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a020c2574ca642ce8a9d18f010423ee5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureRotate &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a371f2634bfd0f00e960684bf985ae069</anchor>
      <arglist>(GtkGestureRotate *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureSingle</name>
    <filename>classGtk_1_1GestureSingle.html</filename>
    <base>Gtk::Gesture</base>
    <member kind="function">
      <type></type>
      <name>GestureSingle</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a19eeb7b92e7e4975f60fad7d4e7e85c9</anchor>
      <arglist>(GestureSingle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureSingle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a1f00b6a187a621620a0ce8070460aa4c</anchor>
      <arglist>(GestureSingle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureSingle</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>af124e320f5e5d249ed3aedb024dab710</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureSingle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a74a3e655f6553a54cb7d1e9beb42a472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureSingle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a1b4add118a2fe2b07b2e8cc23817db50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureSingle *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a2cbacbe5353d1b3e24a2e8455a947c6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_touch_only</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a1b9b60ed22bb5e2aed93397f2c66dc85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_touch_only</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>ab128de7d43dd7632dfb689830aad64d2</anchor>
      <arglist>(bool touch_only=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_exclusive</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a7a0096af7b07f3bbbc35655b0711820d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exclusive</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a0e9aea2e432e074272f6879ba4b07d91</anchor>
      <arglist>(bool exclusive=true) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a318aa235b06b131a44f8cc3be96eb253</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a500b02cfc64d1ba89702561d78878696</anchor>
      <arglist>(unsigned int button=0)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_current_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a62209fccae14f3489348a41d7083eeb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::EventSequence *</type>
      <name>get_current_sequence</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a4826e915cbfd2b852a3897c017a9eade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Gdk::EventSequence *</type>
      <name>get_current_sequence</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a477b02a714052296de13d6e4cbb0799a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_touch_only</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a2743cd8cb2c878f63d4c695956300a97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_touch_only</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a2a2e33dfa5dfc71e4e01a29d5765fbd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_exclusive</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>aa314773666a771eba58bc7078cc0be1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_exclusive</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a713a03e30811f156ff9cea6f82a7c199</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a137db7ee2316d89c0190cfe48c20cfb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>aea8413f70132179c63faca49c47c3edb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a363134dac96045d235bd890aa3aee44a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureSingle</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>ada3068818da092c34ed875cae42ff34f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureSingle &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a17e2aa00325dbf6a9b14bd5050a73dbf</anchor>
      <arglist>(GtkGestureSingle *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureStylus</name>
    <filename>classGtk_1_1GestureStylus.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureStylus</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>ac43a0be8d3b48ebdce10cc370b13de1b</anchor>
      <arglist>(GestureStylus &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureStylus &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a615591ca798a8c407070ec7481d40198</anchor>
      <arglist>(GestureStylus &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureStylus</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>afe9f9318a0ef47380aa8619cb24a4254</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureStylus *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a4d791d1e36fb97288374c216555ccd3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureStylus *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>ac0f9b45380598b297ce7edaf13bca5c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureStylus *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a023186c083985692d890e2641aa26eab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; double &gt;</type>
      <name>get_axis</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>af15721ba53a510b7739b74a78db7503f</anchor>
      <arglist>(Gdk::AxisUse axis) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>get_axes</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a261c4c4fee345e3f13528c3a465d95c9</anchor>
      <arglist>(const std::vector&lt; Gdk::AxisUse &gt; &amp;axes) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Gdk::TimeCoord &gt;</type>
      <name>get_backlog</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>ac2e988cab46bb0b9b4e7010508ff89ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DeviceTool &gt;</type>
      <name>get_device_tool</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a6c66d2a59d3c5eef1f0ea1c8fbb71cf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::DeviceTool &gt;</type>
      <name>get_device_tool</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a52bc70e94b9990494d03415fa7a81a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_proximity</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a9583a7fcc24ae710d5b34a6de9786870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_down</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a4e06270c849f86d677c180d086b10503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_motion</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a80feebf5501e559c5182cac3c9034921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_up</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>a2b31d4f3b65900f59fb229ca91005164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>af506aacc2601e0ab26067d22491de9f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureStylus &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>aa9ff59abf25e62aadeb2a15914afd2af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureStylus</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>aff9b178a5d2da6977c6c86433a5b4fa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureStylus &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureStylus.html</anchorfile>
      <anchor>adfa8fe126cc7b3c4043cc1bf421af136</anchor>
      <arglist>(GtkGestureStylus *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureSwipe</name>
    <filename>classGtk_1_1GestureSwipe.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureSwipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>afd1fcada48109fdd74bb4e97bfb3d1d7</anchor>
      <arglist>(GestureSwipe &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureSwipe &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a336a96ae78388ee3440539d0b04fccf4</anchor>
      <arglist>(GestureSwipe &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureSwipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a7fbd70b4451ae26157ba67586303ea07</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureSwipe *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a9f827ec9c3bd6e7a998124777f3e860b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureSwipe *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>ad9c42312bda4a003be65dc570e8992ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureSwipe *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>afcb1f65651fe3b067829acda4883a5ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_velocity</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>afeece994e990d6c9ef86db084d09281d</anchor>
      <arglist>(double &amp;velocity_x, double &amp;velocity_y) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double, double)&gt;</type>
      <name>signal_swipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>ad70e455d9a5e35cfbf4701f8c6c88715</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a9e905392425aee5c649dee28078f8074</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureSwipe &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>ac6a4158e2b5123f0d5373068a125bf3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureSwipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a09acae70988dd2e3c0ff13377b809455</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureSwipe &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>af1df159081fc80d6ac056ac683d51639</anchor>
      <arglist>(GtkGestureSwipe *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureZoom</name>
    <filename>classGtk_1_1GestureZoom.html</filename>
    <base>Gtk::Gesture</base>
    <member kind="function">
      <type></type>
      <name>GestureZoom</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a3706e175e0c8acc725f275b90211b540</anchor>
      <arglist>(GestureZoom &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureZoom &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a523cc0139379b22440e742ff566dd890</anchor>
      <arglist>(GestureZoom &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureZoom</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>ac7676aa54e487ed9ec362f9bbd143d8b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureZoom *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a946f199023e315a14a2834147479d7b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureZoom *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a1d59e31e0637004865632e5c3e1b47a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureZoom *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a1c9870faf910f33bf17b2f1004eff308</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_scale_delta</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a2b6a552b8b28a4770e779d9f239a6813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double)&gt;</type>
      <name>signal_scale_changed</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a6b414b8f9c078e4f1456917daa80088e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a8b0cca2a58f7a07fcc153496fc61f72f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureZoom &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>adcfa02fa998ccd5997ac740ef56e4230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureZoom</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>afb9736bb4743045f25818d140bf25044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureZoom &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>aed2b6aa6843e50d2a9731f85307dae01</anchor>
      <arglist>(GtkGestureZoom *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GLArea</name>
    <filename>classGtk_1_1GLArea.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>GLArea</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ace90644463d6b2f6303044b5bc6c3b3a</anchor>
      <arglist>(GLArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a5ad17aaaf6141e61b9c45123bf08c4d9</anchor>
      <arglist>(GLArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLArea</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aaea34598222f1690975728590c7b8407</anchor>
      <arglist>(const GLArea &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GLArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a4d2e8881099ba68859ef5e8ac3931df8</anchor>
      <arglist>(const GLArea &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GLArea</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a40d129edfe0413071dcfdc2e4c866fb6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGLArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a2b3114364070466837c930d243c23929</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGLArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>af625f10768be6a26c6148eb91a60bdd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLArea</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>af8dd6136d1a8c0d4f96375304a7f274d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::GLContext &gt;</type>
      <name>get_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a65ba138f296440b9a9b2132a86e1197b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::GLContext &gt;</type>
      <name>get_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a58e62ce25a0c696139d4caa1d01b891f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_current</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a9551faf1f05e1d53a5271d5720fbf0d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a84183c143fe9c2106e683a188fd68a1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach_buffers</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ad811e9c7ba2fdc7b4015962d68b6fb71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_error</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a91a9378bd5f229059c8a9019a3f7a9ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>throw_if_error</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aceb8031bc2ed33c4431d9172d94f2ac5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_error</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a90cdfc84b51c15cc37481dc4d123b5ce</anchor>
      <arglist>(const Glib::Error &amp;error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_error</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a33e94310561aa27c7aa17f5ebc52ea84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_depth_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aefa563e37dd1fbf5559c5bf6475d89f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_depth_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a166afad7e6019e0df4245b74f629f095</anchor>
      <arglist>(bool has_depth_buffer=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_stencil_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>af3326a981d7b32323600e40a89b9303e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_stencil_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>af31493a46f88226fd5207d36534d0490</anchor>
      <arglist>(bool has_stencil_buffer=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_auto_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aeb5b655b7c6ec30aa5190d2be3312e02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_auto_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ae345bad1c063aafdb865393e7651eea3</anchor>
      <arglist>(bool auto_render=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_required_version</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a209ae9d710231e19ba922d91a6d13382</anchor>
      <arglist>(int &amp;major, int &amp;minor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_required_version</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a1f6a4da0d66461b5a89abbb784dc2ab9</anchor>
      <arglist>(int major, int minor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_es</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a281318d825c7589dc1dce5201b97d889</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_es</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a23e31c2159ada10a38503735ac84385d</anchor>
      <arglist>(bool use_es=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_auto_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aa7972c003afbcac575d5a37ed591f989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_auto_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aa0d00e4f69c857d98d9fcae7a6f29953</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::GLContext &gt; &gt;</type>
      <name>property_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aa76c5943d643bdaf554e6fe290fe6261</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_depth_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ada1bd470ffa1354d4c8c37321dd1cb01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_depth_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ade361b2e7077411fabfed4cf042d9bc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_stencil_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>af1194022b9ce2fecb00efe080646ec78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_stencil_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aaf5a6a3cc6c3cdb58e161cf190c72b63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_es</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a1e856aa7d42e7661ed331e9e213e8f34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_es</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>afa1a24389113366dbf68289c2a37f6ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Glib::RefPtr&lt; Gdk::GLContext &gt;)&gt;</type>
      <name>signal_create_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a0da704c42566dc327a4d1ce0ed0aa1ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; Gdk::GLContext &gt; &amp;)&gt;</type>
      <name>signal_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>acf917538bef6538fedb3df9fcb94436d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int, int)&gt;</type>
      <name>signal_resize</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a35c0bb6477eb156153f4f8f0ad8b9da4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a0c624a50ee1d1f228a39038ce5711886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gdk::GLContext &gt;</type>
      <name>on_create_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a4231d791d752f6bf9d70388f361f68d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a83c1174d3e59d2a5b3ae2fc4a3d517c8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::GLContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_resize</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a464a918bd19016270a46b847bdce3091</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::GLArea *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a677d32c939662df389b694b986af5b9e</anchor>
      <arglist>(GtkGLArea *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Grid</name>
    <filename>classGtk_1_1Grid.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Grid</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ad75ec9d595f98a684b01c465c9ce16e1</anchor>
      <arglist>(Grid &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Grid &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a4f53cb44c4a8a93cdcc1eb8487d353e8</anchor>
      <arglist>(Grid &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Grid</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a847dce6617c2af3af8983da1b043858d</anchor>
      <arglist>(const Grid &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Grid &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a5c6e6e7522476bfc5f0bb27993e2d954</anchor>
      <arglist>(const Grid &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Grid</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a9d29ee3b7893975c17ec6a79df90577e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGrid *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a38dbe6adac2038e468beb6c38e13509c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGrid *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ab7c27a5e29dcedf02f7878dbe2c4bea8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Grid</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a41b9faaf5b40c854555055283839c2a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a2f3d5ceb9a1c2f491b541aa56ebdc1e8</anchor>
      <arglist>(Widget &amp;child, int column, int row, int width=1, int height=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach_next_to</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>abb0182cf16ebae0e0efbb719f9f27cce</anchor>
      <arglist>(Widget &amp;child, Widget &amp;sibling, PositionType side, int width=1, int height=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach_next_to</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a1ed8a7ab9304a8227b7eda6dd10d8210</anchor>
      <arglist>(Widget &amp;child, PositionType side, int width=1, int height=1)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child_at</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ad45135931c8cfb8883b4d07e16459ede</anchor>
      <arglist>(int column, int row)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child_at</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a20e1f1d319de7679e3062cb68305c601</anchor>
      <arglist>(int column, int row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a26e6a47559c2e7bb48004e469673592a</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ab9e62a5dac349a31477f1b4f29aa9d97</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aed8dd0882d18dce3e54fde7ee6f944a9</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a2ee7c9ac10c0977312ef4241246abe96</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_column</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a5f68273bdb59ff911c6c1a0ded85bee2</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_next_to</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a93fd7a162bf0ffb84233dafdf10f95a1</anchor>
      <arglist>(Widget &amp;sibling, PositionType side)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ad2587a5431a9fb864db8d6da21bb6844</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_row_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a03e08c2082abfb2e3ade7122c64903d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ab68e13f2bd04240ddba33c440fdc24db</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_row_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ab8231c1b25639ba7a5957c642f07cb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a6e759cc855df772dbb389df96b0d3216</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_column_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a2a847bc9e146a4b42717a2e57eabbb43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ae6fd289f9ec6701894a1c39e99486cc6</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_column_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aee8676cfe045a07d56bb2a11562b8832</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_baseline_position</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a6145cfc5d3488c05bd7e927370ab51a8</anchor>
      <arglist>(int row, BaselinePosition pos)</arglist>
    </member>
    <member kind="function">
      <type>BaselinePosition</type>
      <name>get_row_baseline_position</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a43cafd2b470e9a4218d4444d92b62202</anchor>
      <arglist>(int row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_baseline_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a823e4e325ceb7c4469f28b3d6172c321</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_baseline_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a99fcf199493a0cee3139c1d75ebeb064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>query_child</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a4a594c20c43bc6acd60f84f21b864074</anchor>
      <arglist>(const Widget &amp;child, int &amp;column, int &amp;row, int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a89e51ea6404027df4ebc1396d091d305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aa97bf255c3f454af8e27eea9ca6a1571</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a11a947664a7a697eb6999612712f4b38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>adca7abf87aeda8f43385174deaaca8cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_row_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aefc8c3740b015d197e861aa0df9cf842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_row_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a783329173829017d38977895fe59a676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_column_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a76ad3803d2a87836cba29830fccd5b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_column_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a7fef9fc807bd6108a1754ac695e9546a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_baseline_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a0a8d78fa97fabe173cf6bcff66618c6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_baseline_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a101e493d3b912278224783a73a6dbc60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>adaa54c2f5aa670d69ea405b8065d9f4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Grid *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a68c9c43cf4e285287bdb377925db18cd</anchor>
      <arglist>(GtkGrid *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GridLayout</name>
    <filename>classGtk_1_1GridLayout.html</filename>
    <base>Gtk::LayoutManager</base>
    <member kind="function">
      <type></type>
      <name>GridLayout</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>aeb9bbd42518d1a68fdbbd48bdb11595b</anchor>
      <arglist>(GridLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GridLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a4568d3357960712d5c0a9f731eecbf1b</anchor>
      <arglist>(GridLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GridLayout</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a935780c7b94a951861871e47e330c0a9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGridLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>ac089e69b9c43729e88395837622f3a74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGridLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>ac7d45d529da08a275e690ab606d45f46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGridLayout *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a60367fd8cab1260c69ffec1085203126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_homogeneous</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>ad93e13570a1839984e6459a7629c115d</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_row_homogeneous</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a198a687250cc430a6c9b2ef4e4b906ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacing</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>aa8e9f29696ac52656832c30bc5fa54a2</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_row_spacing</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>ae70ea64463204cbc42ac4d1c92890d6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_homogeneous</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a2fae28ca60c6fcb29481b70fe3f21f41</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_column_homogeneous</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a5320939bed0d3a155593bda6ddccec40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_spacing</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>af1194ba4cd4c5b1ca953a7dc60a24525</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_column_spacing</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a1001c07695ed9f99fcf3d5a2a86d9317</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_baseline_position</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a83dee423f66d77bfdd180b33df1d04f7</anchor>
      <arglist>(int row, BaselinePosition pos)</arglist>
    </member>
    <member kind="function">
      <type>BaselinePosition</type>
      <name>get_row_baseline_position</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a49f05d2ed64b2ab111cca334271e2f1a</anchor>
      <arglist>(int row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_baseline_row</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>aa04dea6c87f1f167b3e23b7f3a32b68c</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_baseline_row</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>ae24a518ce75532a21b44c5ffd1b502ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>ae15832f4c17731eeba7da96091399644</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>ab122e205208c8ee395d1f6f8d63d9993</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a8acecae594652c47f79c7c2a95a8c4f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a00ba7ebd7c79a95ccd88bccb9180f3f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_row_homogeneous</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a08e8baceac76e361666809e1ca055eab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_row_homogeneous</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>aa8eb2aeb5fffb30c0829dead119ee273</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_column_homogeneous</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a1097628bdab93327effee4ee1c3640b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_column_homogeneous</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>abd1c5c389a6efb00680ff5cfc644758e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_baseline_row</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>ac1f4176101a1dcc01c380f90672d25c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_baseline_row</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>aa11e625941dc5a2110299b38205a145f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a5b00fb32e71b62ded4875e289dd5cef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GridLayout &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a083c23167b56c7ebef2c7d7490befe8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GridLayout</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>aebb401f2ec75b90db6dccd68cf38f2c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GridLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GridLayout.html</anchorfile>
      <anchor>a625ea898d8de5239881a59795055d3f1</anchor>
      <arglist>(GtkGridLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GridLayoutChild</name>
    <filename>classGtk_1_1GridLayoutChild.html</filename>
    <base>Gtk::LayoutChild</base>
    <member kind="function">
      <type></type>
      <name>GridLayoutChild</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>af326401b7b283ff2a6023743cd8c75a5</anchor>
      <arglist>(GridLayoutChild &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GridLayoutChild &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a84d4d9c704960559996c6e400b666b03</anchor>
      <arglist>(GridLayoutChild &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GridLayoutChild</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>ac2ac769fb8a5eeafcf5792dbcff12bf2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGridLayoutChild *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a6f8bec4cab4f889d20aa03e350e282b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGridLayoutChild *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a881cfe7fb4d77b93af4c3a3fcf86102d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkGridLayoutChild *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>afbb5d0bbd5e389ae476f8244c2dd22d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a7f870f39a8ae9c1c1061861a130ca848</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_row</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a710eccbcd03b35dbf4cf80da674487bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a388824d52351a655d0a94a893853297d</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_column</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>ab0e034188cbb027eab763dcfa4f4296b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_span</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a7467752f2d07e32882711cc285c9b622</anchor>
      <arglist>(int span)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_column_span</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a25b68f369f7ec25f1e78ecf1b95fedb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_span</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a6e56ac2cae9515d224a04c3098e05899</anchor>
      <arglist>(int span)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_row_span</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>ac763db0230d61d7db043aff84b34ed75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_column</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a79c8799cdc292f60bf03216a50a0c651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_column</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a9632d345e167f825f445172370c9e34d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_row</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a342ee73a060bec24e476871a85a9f29d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_row</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>ae0a18a56ac5d6b328333bee18a5e80fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_column_span</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a2a4ec85c75e6195e71adfe7534922393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_column_span</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a2ea09c4f77c71ea3b24836e06884331d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_row_span</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a268026ec2f0fec7ba920ae1f240b3557</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_row_span</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>ab7e40da35367fc054991b6865578d563</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a1724f2dd27b5cd93baa8d51c5c235c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GridLayoutChild</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>acea8dbb6f2f9ec378e1376cf339ea5f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GridLayoutChild &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GridLayoutChild.html</anchorfile>
      <anchor>a247f3dbc86d22ba4ec4fcf4c68208475</anchor>
      <arglist>(GtkGridLayoutChild *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GridView</name>
    <filename>classGtk_1_1GridView.html</filename>
    <base>Gtk::ListBase</base>
    <member kind="function">
      <type></type>
      <name>GridView</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a907dd71b9fa5eed4a25b9435e13fe419</anchor>
      <arglist>(GridView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GridView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a446ed19fa1f378e9bbc8efeac8e0c8f9</anchor>
      <arglist>(GridView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GridView</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a1b690134010a8e70476360ceeca876eb</anchor>
      <arglist>(const GridView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GridView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>ac15ad2ecb5f8c70578e0de40d00ea38d</anchor>
      <arglist>(const GridView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GridView</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>af36cf0fb5ee6056db82482df528a58c5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGridView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a8b95b6367ced0b3296de5e02aaf76965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGridView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a03ffa0ad209f9c8db13e6d8fcce87fa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GridView</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a234b059aa3770dda4f776e80000d0455</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model={}, const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; SelectionModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a5b81c00bf0f7ca43f0e02ec150765fb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const SelectionModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a0347ad696b1daf0e2a3c306f15e9a08e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a4b1cbfbddf968117aebbe6bf021d33e4</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_factory</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a31fcd757e4a1d89a72603f47e2bbac82</anchor>
      <arglist>(const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ListItemFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a80d0ac3de56873af75bbeeca84d9fcf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ListItemFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a87bf02ec6bd5e717596a61ad0e29bae6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_min_columns</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>adf2b5c966e41738f99c9a0f04f109e94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_columns</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a2b3395ee6ee6d7feb7e1a69d404c61fb</anchor>
      <arglist>(guint min_columns)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_max_columns</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a5adad341a560197701aa26b073caba70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_columns</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a338fd7c70a57ebfc6a45bfabe69e78a4</anchor>
      <arglist>(guint max_columns)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_rubberband</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>aba9cd3a392e4ae5cd75d075c32a1fa5f</anchor>
      <arglist>(bool enable_rubberband=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_rubberband</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>aeec98ee2124082d6e1a29debfc2e3cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_single_click_activate</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a1c83344326004718890b0a5336698224</anchor>
      <arglist>(bool single_click_activate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_single_click_activate</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a293cd73b827c29d9d89c64c7ea36f854</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_factory</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a5330aad013a6c0ff67b960e55799821d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_factory</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a85b0fd6561dca31d1e4b9bf4abbb22d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_max_columns</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a7934506d5ea00cf6c8f8a78cfe6945fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_max_columns</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a8d1cae0b9430f92b8bc9320931699ec4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_min_columns</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a21fb9db6c866f72b60808534cca1deb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_min_columns</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a2bfebda1481acb50149eb5bb8c1c87ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a60a8b4bd74245ab77e3285c93e0ebf47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>ab9f6cbed233d1133b779485c9f711e69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_single_click_activate</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>abfcd39801c1e448ab2322df4e456a2eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_single_click_activate</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a8b58f197ec78679132882b0efc64f5ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_rubberband</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a0d730ef4d3add656bacea63acd20c9a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_rubberband</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>af78d57bbff660dc513e0b5fcfd9f9aa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint)&gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a5eb3487c719475d484549f3be5634d60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>ab83de4c00ef8dfc18f3808392fbc27ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::GridView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GridView.html</anchorfile>
      <anchor>a8846cfa1d4aab144e2a8321ca86e31e7</anchor>
      <arglist>(GtkGridView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HeaderBar</name>
    <filename>classGtk_1_1HeaderBar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>HeaderBar</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a23b419905c6e9d689e9116ff837c19eb</anchor>
      <arglist>(HeaderBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HeaderBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a4e7f7aa9c1edfd6ec69da007245a14d1</anchor>
      <arglist>(HeaderBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HeaderBar</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ab6821e4671175216a09577ef504f49c3</anchor>
      <arglist>(const HeaderBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HeaderBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a60e58211d676b63e368a5c0c01d26faf</anchor>
      <arglist>(const HeaderBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HeaderBar</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>adb317e9f362332ed0a5cd9de62cdf780</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHeaderBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a2ad8b8e02a06dab15125f4c14fa16513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHeaderBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a598eebd8eb69f4ea17c331b74788a045</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HeaderBar</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>aaa8af5f2ed6116d7ed5bfd53aa1ae1c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title_widget</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a0e537928fa8066200a975b82e8ae45e6</anchor>
      <arglist>(Gtk::Widget &amp;title_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_title_widget</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a5e0d22e652a5085452bf70862b62fd58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_title_widget</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ac30a48394e3e80c28cd73fdc93b4c88a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a05ffbe8af3be47e1936abe977f416721</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>abffbfc9fe9f6d7c29d0d6e2df70b0297</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a30ea6bf1c428c96450de4ee6a1f2407e</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_title_buttons</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a3bd029eaba11b4f137189d6370ce9c1d</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_title_buttons</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ab25552d8bd7e9f81b118912dd565c6c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a32492928b6c0cbcbecddc5d432022aea</anchor>
      <arglist>(const Glib::ustring &amp;layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a3ca80d371544a0b452c1e7d72cb41ba9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a243c5d3fb597c8094bb4524ef41630f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::Widget * &gt;</type>
      <name>property_title_widget</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a7254eb9cb7364c214b68874c6b8fed00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::Widget * &gt;</type>
      <name>property_title_widget</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a4e6b0df80b691f14c7ee39461c904c5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_title_buttons</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>aa6e6e03c44076d83617414cdc5a698a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_title_buttons</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a886333917f273c048346239d5ad939dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a88a4e20216edfbf9078b32256fba4efe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a3344727310cbddf797c9269d67cf0388</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ad65a6f26a116053d336dd488a135bcba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HeaderBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a615e8f2c1045b9502ae903d30fa321a0</anchor>
      <arglist>(GtkHeaderBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconPaintable</name>
    <filename>classGtk_1_1IconPaintable.html</filename>
    <base>Glib::Object</base>
    <base>Gdk::Paintable</base>
    <member kind="function">
      <type></type>
      <name>IconPaintable</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a554fc27fe44e12b4b89294511fae57c4</anchor>
      <arglist>(IconPaintable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IconPaintable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a20c82a83a41324ccde6e25bb3877fad0</anchor>
      <arglist>(IconPaintable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconPaintable</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>aa850d11704da387d8957951aa60614ff</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkIconPaintable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a96d1dac8bc71df6c456a6f60b602a64e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconPaintable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a2220c85560a9b23ced70c03d2a6e5adb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkIconPaintable *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a12a23dad7651d744c95cfcddac519999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a8ccdc8d8b1aae1bffc0b5340079cb250</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a6f4f6076f4f159bafd05a40545b06920</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_symbolic</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a5877c82439ec62beb64cceb67fe5be9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a578d915853c37fd4ec4d41afd45e17f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>afcc87935c85b57711891d0cec72f990c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_symbolic</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a8908ea6a2f9c65623325feb04890b649</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>abe9ad182d5411e7ba674de6276285420</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconPaintable &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>a781527e05a27231ca4cc76df962b7909</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file, int size, int scale=1)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::IconPaintable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconPaintable.html</anchorfile>
      <anchor>afddaf98055622c03dc64dd37b2372dd5</anchor>
      <arglist>(GtkIconPaintable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconTheme</name>
    <filename>classGtk_1_1IconTheme.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>IconTheme</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a80bb9ce21a9a67e57316759c4a391281</anchor>
      <arglist>(IconTheme &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IconTheme &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a6385bba2969746cb5e12baac12ebef1b</anchor>
      <arglist>(IconTheme &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconTheme</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a226ca8b6121b47398b08a5b4cd7f84be</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkIconTheme *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a9f62bce0b8426d984104ca65493ad65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconTheme *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a73a6bf112c96e15d0a18f1516cf117c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkIconTheme *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a47f5d7d4be820bdec8e3ed111e04a174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>af2bea895e831b9b4579e136b0c9815eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ad3fe39bd5fd8f8e0ca138f74cd931be3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a9b1f8b874f0420e059aea57384d0b6a6</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a2eada7163e63a8137f1d01bf1c1cd43d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a06fbe6e5556cc1fc36c73394c4694ae8</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resource_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a36ae0e4fd39a0cb6853a85810b8e40b4</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_resource_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>acb12c7c9eaf4abcb367f6c56070c598d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_resource_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a95edbfce09488f385b7cc4617bbeb254</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_theme_name</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a2046cf41b4f328fdf5dbaf9643b1def5</anchor>
      <arglist>(const Glib::ustring &amp;theme_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_theme_name</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a4f4f1f596058b9cd8f82417f909cb5ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a691b94570379d42ffb74e9842f4f9bc7</anchor>
      <arglist>(const Glib::ustring &amp;icon_name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_gicon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a5a26351974d8a32b0b5b4b00d8790aab</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;gicon) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;</type>
      <name>get_icon_sizes</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a95b10e99e75ade878a46f4e390c6de74</anchor>
      <arglist>(const Glib::ustring &amp;icon_name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; IconPaintable &gt;</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a068db951ddaa392294b8a57df5aa736b</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, const std::vector&lt; Glib::ustring &gt; &amp;fallbacks, int size, int scale=1, TextDirection direction=TextDirection::NONE, IconLookupFlags flags=(IconLookupFlags) 0)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; IconPaintable &gt;</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>addb844c00f77649b344189ffdac1f3e1</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, int size, int scale=1, TextDirection direction=TextDirection::NONE, IconLookupFlags flags=(IconLookupFlags) 0)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const IconPaintable &gt;</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a084dcf7638a058396dc605d4c2e22140</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, const std::vector&lt; Glib::ustring &gt; &amp;fallbacks, int size, int scale=1, TextDirection direction=TextDirection::NONE, IconLookupFlags flags=(IconLookupFlags) 0) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const IconPaintable &gt;</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a75e3556787580fe135738c833610250a</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, int size, int scale=1, TextDirection direction=TextDirection::NONE, IconLookupFlags flags=(IconLookupFlags) 0) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; IconPaintable &gt;</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a7eecd1d02c43a603d81feba45393350b</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;icon, int size, int scale=1, TextDirection direction=TextDirection::NONE, IconLookupFlags flags=(IconLookupFlags) 0)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const IconPaintable &gt;</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>afb5b21aacbec926dd402f6e15a10a3b2</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;icon, int size, int scale=1, TextDirection direction=TextDirection::NONE, IconLookupFlags flags=(IconLookupFlags) 0) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_icon_names</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a0410cad24d14c6bd0c791a278ce48499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a123756f721fca86d7d89d4315b6c79ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a2dfdef6753645f4dd7b594989377646f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>aca473f5bf4ceff8870351beb7eaf9831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_icon_names</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a6ee628f8ad4b634b8b336bf0c9ca553e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>property_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>af97417da729b470a6a093000d910f1e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>property_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ad45a8e179e24f937dd2588e237ce9ac3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>property_resource_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a893b1d19853a7a56ebc9b2524d696694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>property_resource_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ac8ae70da164d0adb1d6a622e96b696a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_theme_name</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a36f08043ca170316f635a1f51ca88039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_theme_name</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a414829149982f7815ed4d7b63f770c6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>aad115f8c1359ecd1d6e7bd9bed70d91c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconTheme &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ab5e19724cb84f116235ca256194d49df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconTheme &gt;</type>
      <name>get_for_display</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>accce53ab7a0b3f7b55e4e92e077da14d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IconTheme</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a657508c71596013f27b6a7e71225d153</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::IconTheme &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a54a6116e8b997b4e1f7489f6dd72dc29</anchor>
      <arglist>(GtkIconTheme *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconThemeError</name>
    <filename>classGtk_1_1IconThemeError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_THEME_NOT_FOUND</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bbae947affffbf93fd295dbc4ce03decec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_THEME_FAILED</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bbabccacb9bb6315de1cd0df41e80bfdc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_THEME_NOT_FOUND</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bbae947affffbf93fd295dbc4ce03decec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_THEME_FAILED</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bbabccacb9bb6315de1cd0df41e80bfdc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconThemeError</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>ac3a9ae2c48631e8a5bf59cbc98ce8f80</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconThemeError</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>aa297b34b950da1e921471e96ff91fe2a</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a34853a4f0041665841f1181e216eea93</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconView</name>
    <filename>classGtk_1_1IconView.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::Scrollable</base>
    <member kind="enumeration">
      <type></type>
      <name>DropPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad6b7ea49f82faf60410da94295ef0c31</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31aed1461e5a1dfcd9cc2a2c1256cbc12ba">NO_DROP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31a73bb093b4e2ce554f38759894e2f19e2">DROP_INTO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31a3554608aad81e502f3730fb3111b3ace">DROP_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31a351b645b0cde94e2a6ad7c59d297b6de">DROP_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31a0608e83286dbf456757ed066c259f0d5">DROP_ABOVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31ab11f8a2240d2a7fd3efc5bc3bcdd6577">DROP_BELOW</enumvalue>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const TreeModel::Path &amp;)&gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>add8f85c73d34c783153a15ef401aa324</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aed25e42550a005dd92c0d765f1881043</anchor>
      <arglist>(IconView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IconView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a9b113fe08cc1687142afab1de4f3745e</anchor>
      <arglist>(IconView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a66783789c6e8cb55eb804f162d033bfb</anchor>
      <arglist>(const IconView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>IconView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad245c7e75ed66ab30d103b52a9f429b4</anchor>
      <arglist>(const IconView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>abeffd2b0477f8c56f3270296d07b6111</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkIconView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>abf13f9ea6448598b9b3c23a3c928e27c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad017a49c8c3b24524f2fd459764e6f90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af3f802fc8cad169d87cd37818599ae78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>abfc8b6e3a07120e8a319d5ec1a47fb43</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae079e4b81d6b3957f1928fae98441784</anchor>
      <arglist>(const Glib::RefPtr&lt; CellArea &gt; &amp;cell_area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac9889a4e1793bd4385fde40308bc1f5b</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a36aff875a9378724b885dace4d2f5b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0b1e0c82ae9f3eabe8f4a9fd3811763f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>acc01800ad2db011e8e081c89aacaa57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a2b35d76fe8f61708be01374a9986bbbb</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a6135d09d914655b1f66cd485b4aa8c2a</anchor>
      <arglist>(const TreeModelColumnBase &amp;model_column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>acafeb407af6dedc2802a8c59d518e617</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>add46c5563233cb57e48d12de7d1b12d7</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a460d0def66230e89831894203167fb7f</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a105d10628e33eef4a109607a7096152d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7f0cac207abbdc3152544259d366868d</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a1582732740fed65ba414944f96510274</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a3b6b864a6e5e04dda2c8f88b6703e06a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_item_orientation</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab1ceae06cf80d524b475c2144d5ea9d2</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_item_orientation</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a69a5c85a2abf16776a695dcf71e3aa42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_columns</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5292b7e7eea0562787d2325ec5efb0b8</anchor>
      <arglist>(int columns)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_columns</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad52ef32f6f62a80d4dd78dcb4510cd92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_item_width</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>adf0edb366cb11253f32ee873a70dc4f4</anchor>
      <arglist>(int item_width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_icon_width</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac8e4acf59e48db9b39b0ec6f1d133709</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7c3fd37fd767cb408684dc44fc8e0e26</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab636a67c86878a9d5485fefaa78acd64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af1dc3f45faf5c80532cc2499abf1f3e5</anchor>
      <arglist>(int row_spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_row_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a8a3a6cca5167b951912030daf7f7dd91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a981304eb60ff6d6486f84acf9a8f66a1</anchor>
      <arglist>(int column_spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_column_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a52fcbd3bcac23cd7f86d1d0a1e56a698</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a16b711d34f9154581a72bd035eb9f29b</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a88f047619429e1b7dd75b4b132e5116d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_item_padding</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac67ebe39e99af6d64454cd91d242486d</anchor>
      <arglist>(int item_padding)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_item_padding</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a12541b1bc365503c85bc14c50f4e8a4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Path</type>
      <name>get_path_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae12657d8e5fa30493258c9951291fd1e</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>addf23ac0d7fa1c48828f37a68736f98e</anchor>
      <arglist>(int x, int y, TreeModel::Path &amp;path, CellRenderer *&amp;cell) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a92b25bb75820c9e1e2854da2e229797b</anchor>
      <arglist>(int x, int y, TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a685291ab2470300343c2ad385c9f480a</anchor>
      <arglist>(int x, int y, CellRenderer *&amp;cell) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_range</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab2812f6d872ffa635c29d60ae687c4f7</anchor>
      <arglist>(TreeModel::Path &amp;start_path, TreeModel::Path &amp;end_path) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_on_single_click</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aee0728244ce8f71bd6215190836f11f4</anchor>
      <arglist>(bool single=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activate_on_single_click</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa178578c46c454c28669f515842c640e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ace84f4d56dba6533dd9a4b98ffa7c5d4</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selection_mode</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a40425b9b664567d59b098233a410c5e4</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>get_selection_mode</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad46607c8e721327b971dd0ff638a3f10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_path</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a4bc2d887359ba85d2a60393401eeaaeb</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_path</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a14e208570cd383386cf6d60d2cc43884</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>path_is_selected</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>accdd80a0a76619715bab9a63a64befa2</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_item_row</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a77bae2aa3d4d1f0112703bcfcc7daddb</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_item_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a8d61b3a0a99c584291e925eed4694b1e</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TreePath &gt;</type>
      <name>get_selected_items</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ada5ff8158452d649202695177a755677</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0336dd34d42cb519ab91112dd4c8a413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a69dfccc5ac206af4c803c3c4a04c1c46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>item_activated</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad81f97dec44cea304cda9db81f79fc04</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab12050929b15211835f637d38a8c1ed5</anchor>
      <arglist>(const TreeModel::Path &amp;path, CellRenderer &amp;cell, bool start_editing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af55d7e7a63fba784160613a586ebdd2d</anchor>
      <arglist>(const TreeModel::Path &amp;path, bool start_editing)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a3e4e8b701562189f65eb9a683b6e629d</anchor>
      <arglist>(TreeModel::Path &amp;path, CellRenderer *&amp;cell) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a8f9b1bca90772f195a2b158590c30a7b</anchor>
      <arglist>(TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a757090a3deed3ead776110f2afb1090d</anchor>
      <arglist>(CellRenderer *&amp;cell) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_path</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7330eed2bc59629acb8c9be30e804b32</anchor>
      <arglist>(const TreeModel::Path &amp;path, bool use_align, float row_align, float col_align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_source</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ade92d03908c926f16877cd437cd38b27</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::ContentFormats &gt; &amp;formats, Gdk::ModifierType start_button_mask=static_cast&lt; Gdk::ModifierType &gt;(GDK_MODIFIER_MASK), Gdk::DragAction actions=Gdk::DragAction::COPY|Gdk::DragAction::MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_dest</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab0b41986bc5cc0a4f84fd479220e4ab9</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::ContentFormats &gt; &amp;formats, Gdk::DragAction actions=Gdk::DragAction::COPY|Gdk::DragAction::MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model_drag_source</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a4d72e8aa56d0c81238408d8066d46d74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model_drag_dest</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae5f147b113285bcf82df07a28292157a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reorderable</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a04fe09dc32d974e38d679b1435c6f498</anchor>
      <arglist>(bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reorderable</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac994b5d33c5e7ed0097311c2c13ed031</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_drag_dest_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0666f2958bb96587388417cf9238654f</anchor>
      <arglist>(const TreeModel::Path &amp;path, DropPosition pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_drag_dest_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a252c259a829356d120ef8ebb3a12ae9c</anchor>
      <arglist>(TreeModel::Path &amp;path, DropPosition &amp;pos) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_drag_dest_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aff16229b5d3372354144b3baaf8f811a</anchor>
      <arglist>(TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_drag_dest_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ade72eb7d3d163fd27e7e15321205d9b4</anchor>
      <arglist>(DropPosition &amp;pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_dest_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a4ad238aedb643a97fcebb639d350a904</anchor>
      <arglist>(int drag_x, int drag_y, TreeModel::Path &amp;path, DropPosition &amp;pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_dest_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a192d9f8d153ad65b49cc4c291d1099bb</anchor>
      <arglist>(int drag_x, int drag_y, TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_dest_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a2b10ce9e8e55839442ac4d22b85f64be</anchor>
      <arglist>(int drag_x, int drag_y, DropPosition &amp;pos) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Paintable &gt;</type>
      <name>create_drag_icon</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a4ad1fc51acef1f988b037cb68872ee2e</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cell_rect</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5622c3d32fa434a4efc8c08940be0ef0</anchor>
      <arglist>(const TreeModel::Path &amp;path, const CellRenderer &amp;cell, Gdk::Rectangle &amp;rect) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cell_rect</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad5670f0ea7922ce332034d22a1bdfdd1</anchor>
      <arglist>(const TreeModel::Path &amp;path, Gdk::Rectangle &amp;rect) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a50ff0eaea7c81e90fac465d18fa24c14</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_cell</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0f7234c1b2b194097dd93fd2fa8961bd</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreeModel::Path &amp;path, CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_cell</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac35129fb16b99aa5e14b6b9333b9fda8</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tooltip_context_path</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7adcdf085ffef9e45ab0b8aca09f7c20</anchor>
      <arglist>(int x, int y, bool keyboard_tip, TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tooltip_context_iter</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a8f3b038c6da831f889183d805f763a16</anchor>
      <arglist>(int x, int y, bool keyboard_tip, Gtk::TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0e81a913a4f9bde2bdf38d802eee2e37</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_tooltip_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a4f160d5625ddebfb8f2bfdd0f05b2bb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::Path &amp;)&gt;</type>
      <name>signal_item_activated</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af96474fa9f98de3acb801284ff49749a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_selection_changed</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a07f78cd8cab036dd89e64b001fbde1d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0528c6977a711c7510d0d7ba286cd518</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>acfe344dcf6f5d2cfb4907ede0cac2bc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a52799c9ddb0c65553ce3d6832508cff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a469fc786d21f687daa4f2108549e1b7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a6582c39b86873da73d793c84cb12793b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa9894c4e44be8c6b6f8cfdf2dba51493</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7195e0aad9ab573b92a26f8066fabacb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab206a826cc82a1568e03d1f35f5eba94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Orientation &gt;</type>
      <name>property_item_orientation</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a740a55f8ca530ae1e3304e13fb6f7e6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Orientation &gt;</type>
      <name>property_item_orientation</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a3361df9efcdb630c69c4125c770c78b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7dd8b23f10b18ad4055dec3ae39c1bd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa2d9d9671849c0607fc5db05d5e7c6b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_columns</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5bee8433e771074026aca775ed052b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_columns</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aaa30ba4bea784aa4f3feaeabf808af03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_item_width</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab32c1fc41e66c70111fc1b999b066b7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_item_width</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a312adf3d319135f8121ed35fbb721a27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a939b053506544ab2ca9e324ec0913513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab8f760f968b7050dbae9995211658877</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa6b4a19666b272ea0acd7c1eecc943f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa9f39768a96b6be0c1f303072ad67d10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a345e0be9d9571374aee59a737ab9d9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a087f35debd011e7a8a952a6ea2c1a3be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0a1fed36a49e8d71b6de1aa9e0cdf8c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a934adbfeb04a4ee913779aa24b52067c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a941d7a174153250101a09008bda26eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad1d98c63478a622f7fcd971c810a83e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_tooltip_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae6c64267e1570cca8aac2f6b1b64eab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_tooltip_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a46f403f87a44e71f410d1b6b8e4c0c46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_item_padding</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac4037eb2cdb09a5f4fd68157fe630309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_item_padding</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a68875530ef0cccb3351272bd258b78d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a34bcd3778fe1f46a03b869f1a2e9a8bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5bcc2bbb8269cf8ce76659d8339cc591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa02d8180bec1482dcdea89fabafffa35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab84fe6e534a1d5ac7620776672e57245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::IconView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>acc54e1962ae23ab64bf25b153e61153f</anchor>
      <arglist>(GtkIconView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Image</name>
    <filename>classGtk_1_1Image.html</filename>
    <base>Gtk::Widget</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8ed6bbffba0750d512037c52c41241c9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8ed6bbffba0750d512037c52c41241c9aba2b45bdc11e2a4a6e86aab2ac693cbb">EMPTY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8ed6bbffba0750d512037c52c41241c9a484797e70bef449836ab6cca9aea0251">ICON_NAME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8ed6bbffba0750d512037c52c41241c9a5ad54c521e286a5e5afb7167f44a45fa">GICON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8ed6bbffba0750d512037c52c41241c9a9e57b212c433a4c4d4fab8f3ccf4f59e">PAINTABLE</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a9587ba1655e14d2b0b4bd27b1dd03049</anchor>
      <arglist>(Image &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Image &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a970e13b3ac854474f64c1a6fc7ddb73a</anchor>
      <arglist>(Image &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a27b21800ee6ad8b3d1dbdf5f4b50fc6b</anchor>
      <arglist>(const Image &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Image &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a071b04b8db27682ca6208268bacb309b</anchor>
      <arglist>(const Image &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5ec7523f4bb02268bc93f1b6c8b1db0c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkImage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a4bfed69cb1f978b1f03e8e91fe1da537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkImage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ac68ee0f84f707cfc3200d9c8ceef30f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a4de2d6e334d5ac01c3e80dc8382f14b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ac0d647bcefc9286598349b5aa318b3d3</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a415bb5931fddba12830369bec91de154</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a15af26704c50179bba0abee1a82ba30e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a371690986673c1cf3c9760db8c7fdc1c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;gicon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aac6da118aed4ade08b2a4556bf8ee508</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_from_resource</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ad74f3e502b27c23502af949580dd3a27</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5e1e3f5fd06aece9e706b2fba90a7a8e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a953b176dc3f748f5f458a6d7072cf4a3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a4a0f5f54a190f9d02435e0327f199364</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_from_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a79042a99b87aaa76a02eef3a3777897e</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aa9296aadfa716fc8ef75bfd11a25347c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get_storage_type</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aacda76846f00a1ecb2fd1253ebe7f616</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Paintable &gt;</type>
      <name>get_paintable</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a6ca1e78d53a22d7749a8aee7fc3509ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Paintable &gt;</type>
      <name>get_paintable</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a6785e64e8d0f5b5836c4b672774255e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a7dd7eb1bf5d322d4660233bf5e158ed3</anchor>
      <arglist>(IconSize icon_size)</arglist>
    </member>
    <member kind="function">
      <type>IconSize</type>
      <name>get_icon_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a928fd3aa4067b5b604995bbac62f4d91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a9e27795e076c04347789cbf15576fedf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aec8a1287a9ab9d01a942f2bf82e376a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a7e0972e9a5d72ea59e52f1f55deeeee5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixel_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a822c292915cc12677c1c31219ae575d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixel_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a322eff14d34aa750340fdf89e6bf9bb5</anchor>
      <arglist>(int pixel_size)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a1b140df0e81c0411a1a3800618599a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a20f422c351f9bfee7af4b3af7eb7c932</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aa41382273c1731731c1bea42f5b94998</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ab44f2e40be508caf88eb6d02adc2b668</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixel_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a7b7c799da8f427ae0da8570367c9ece6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixel_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aa7265d2935094a88772be95a21b06ab3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a7e2761e8d222783a9d630c8e780907c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a9c330d27e705ddf79813e2721a620b5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Type &gt;</type>
      <name>property_storage_type</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a1062098eefa3e124c1bee96c3de741a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a88a2d059742b431593fbd6d1fb0e8785</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a3a92f0812c9cb7af8c410fb5a52efa3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_fallback</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a673809de2da16ea477251182921bd941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_fallback</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a72d4ace0f7c1654e1d703c01ab1cf07a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::string &gt;</type>
      <name>property_resource</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a85a7d3a70dd225b17fff70da31185e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::string &gt;</type>
      <name>property_resource</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a6ad3a8dc2c7025b947afdc9ecfb91abe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_paintable</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a90eeee4c3af3c90bee266055b35412ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_paintable</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a59c90185cfb9b9c491b0aa821e698fb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>accc6e3ecff25f05e09b877b71c53a871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Image *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5d21ea1d0ef6fade2eba585171a83c61</anchor>
      <arglist>(GtkImage *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::InfoBar</name>
    <filename>classGtk_1_1InfoBar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>InfoBar</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a0de1205097e970455a65b2a17d0c3c0f</anchor>
      <arglist>(InfoBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>InfoBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ad256c2a4556a304176b3a24b95a9cb02</anchor>
      <arglist>(InfoBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InfoBar</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a0c4008579ec4e85ffea03ff657433d00</anchor>
      <arglist>(const InfoBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InfoBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a1daff9d96ab1a4e62d9467d26ec0aa2a</anchor>
      <arglist>(const InfoBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InfoBar</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a3ab95760cdddd9dae98b1ae07ec08da1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkInfoBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a64d9affd6ae0c2db8176799e7f537c73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkInfoBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ae3e1f0a56fb1e5e0693bc5e582d8a6d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InfoBar</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ae6d3b9ebcba99c59342d7e503e18bdf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_action_widget</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a91b61b0b09d281e916a144d1967f2118</anchor>
      <arglist>(Widget &amp;child, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_action_widget</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a3ddfc5c3b8490df10e08ad02d676117d</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>add_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a03b9a985be0b8e56e529c8559ba95c7f</anchor>
      <arglist>(const Glib::ustring &amp;button_text, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_child</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a188c77440b9fe281947cfae08f6b9bd2</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_child</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a7593f860c1381ccd270e10afbea4cc66</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_response_sensitive</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a4268bfa2cc6998a1b103b5ab0eb7cf0a</anchor>
      <arglist>(int response_id, bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_response</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a8f1e615b675b31f01b07172f6ad7dc52</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>response</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a291d5ee1d3476de76306df6d2c48d78d</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_message_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a118aee05364b0c0f4ee50f5fd8f9d304</anchor>
      <arglist>(MessageType message_type)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>get_message_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a6e10575b40cd6c371cfb4e3fb4ec60cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_close_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ae580cd847a10545e78ec187c764bbe9e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_close_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>aca7e3ff7886d756df4b2db094024c5d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_revealed</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>aa68df17ee2df6141d6b433aa1ea2c7e8</anchor>
      <arglist>(bool revealed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_revealed</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>aee125effc2611b40e5fc92b65897f429</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int)&gt;</type>
      <name>signal_response</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a6c04f7da63077044332852e44a82831b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; MessageType &gt;</type>
      <name>property_message_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a88ff014ff5ef7fb93f489e51bdc7ea22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; MessageType &gt;</type>
      <name>property_message_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a1ab43b43bc38884aaa8a014b482d821b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a132dc52f3972e654eb9965c410d0398b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ad21a87dbd41256f5aa8b55d69ecd736d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_revealed</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a9ce8e2a6732c11d9e262420ffdc2c4c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_revealed</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ae5d4c91f1ae854c93bc5bc4d8f0e7f1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>aa63ab295b237830baa3ee2ce3908d80f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::InfoBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a4a1c7856c1c8b30910df3495787c5876</anchor>
      <arglist>(GtkInfoBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Inscription</name>
    <filename>classGtk_1_1Inscription.html</filename>
    <base>Gtk::Widget</base>
    <member kind="enumeration">
      <type></type>
      <name>Overflow</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae790dfa333cb7f309f46b15ef81d108b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae790dfa333cb7f309f46b15ef81d108ba960f0b6c4711bd0a42965edec68192d8">CLIP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae790dfa333cb7f309f46b15ef81d108ba230936fc88abe698e0a81a2fba0bac8a">ELLIPSIZE_START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae790dfa333cb7f309f46b15ef81d108bacfa3955b5914d1e353a2e383f99a7387">ELLIPSIZE_MIDDLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae790dfa333cb7f309f46b15ef81d108bada3f7691594116cf83f2f4218a27b7a0">ELLIPSIZE_END</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Inscription</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aa509da23c0bcfd8090020d15ae4ecf4d</anchor>
      <arglist>(Inscription &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Inscription &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a0e360dc53b1d876c79a4423ed52f0097</anchor>
      <arglist>(Inscription &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inscription</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>af22862156f349d45307c9e657d636077</anchor>
      <arglist>(const Inscription &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Inscription &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a0a303b42cc45313054036de41fa09c01</anchor>
      <arglist>(const Inscription &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Inscription</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a49fbf34071abdbc49e03127fae11d620</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkInscription *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>ae18426bcaf3f89779786fdf4dc161c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkInscription *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a56beb55c65ecd239f8708b9790771ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inscription</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aa682778c71bf0ffe8a391e7b635ec814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inscription</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a75c3c758a0256652c15d4af2581e4390</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>abed358c854a43606be48aeb023d61f19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aba24ee4b4e5bcf0fdceefc8aa9504e33</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Pango::AttrList</type>
      <name>get_attributes</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a2a24e38b429a5923afafc67eb7dd1a67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attributes</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aca38f03bc73d3dd00a8f5e29b581d253</anchor>
      <arglist>(Pango::AttrList &amp;attrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a6607202b0eb9fa12fdd59746ea6d7cd9</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>Inscription::Overflow</type>
      <name>get_text_overflow</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a8cf12ccb70bdaf4a408eef9d28f10318</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_overflow</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a70de56e730389ac1783838d9e6b303a4</anchor>
      <arglist>(Overflow overflow)</arglist>
    </member>
    <member kind="function">
      <type>Pango::WrapMode</type>
      <name>get_wrap_mode</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aecbd76c0350fb5a88ecd1c01a4527af7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap_mode</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a339a4db5229c8acf13ff3a66f9441528</anchor>
      <arglist>(Pango::WrapMode wrap_mode)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_min_chars</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a64c19bb2d0d5ede65a822718ec57617d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_chars</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a053efb0bd9fcbb2fcc94a25855f7a5e0</anchor>
      <arglist>(unsigned int min_chars)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_nat_chars</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a6ef16a74e7d5d3a17e0eb848513025af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_nat_chars</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a144173af2694a4c784cd559be245a7e6</anchor>
      <arglist>(unsigned int nat_chars)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_min_lines</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a8c1d32f0a65294b2876955477980fb09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_lines</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>adba0c336633aa4f547d56bd09df86632</anchor>
      <arglist>(unsigned int min_lines)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_nat_lines</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>af684d44517fafbcc33ab3ca6691007e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_nat_lines</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a1d1065df3a1f61c40cbc1c45872480cf</anchor>
      <arglist>(unsigned int nat_lines)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_xalign</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a6c318b479d7d003aae8a97032852e9d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xalign</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a693ee96ab83aff387879ff86e0bd7000</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_yalign</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aed71f9369821c7e3aa49b2f23f961467</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_yalign</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a3d33190534d492108412e2d4f94b62ed</anchor>
      <arglist>(float yalign)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>abc3d15d9bbe8886c4f1a656c8fa43cee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a11207e0d440423f680561c2b293b1654</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_markup</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>add1f6b3a05aa632710d7517799474af9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_min_chars</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aafd42ea31b7d060a1a88043ff137ad51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_min_chars</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a53d2550f056bb47d5d2ad1bf820b1a4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_min_lines</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a8168b11a5ab2bf1bba2561c066a11ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_min_lines</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a0c150ecc32b57ecf251a7074361ec7dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_nat_chars</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a068272422a00018d8bbdaf87d1380ead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_nat_chars</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a10dd82616526bedc79a32838f5538276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_nat_lines</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a28a249a6d73dbc4d5c7d54e9dcb513c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_nat_lines</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>af2f4f644069d9c60acf49ef21259ce0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a9cbd4e522c85e1432aefc7caa330f6ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a187267f84b770633e94fa59e42a29566</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Inscription::Overflow &gt;</type>
      <name>property_text_overflow</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>ad55aafa21adeac9bc70d5de48c622fa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Inscription::Overflow &gt;</type>
      <name>property_text_overflow</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aaf42e7801d7efdd6545f1ca8365e2337</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>af6d699f7fa6ae478f58fb0a6b9977755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>ad6e120578e186e03189cdc4be1452ee5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a1e939ba2ecb11c147ee11ed58bc99df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a3029d463c07575bbb81b35d7403b444c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a71acc9f62af5977d77d753979c591bce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>aea3e953b1a06472c5a6a6a65f5cdad44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>a392e07bd30b1317f7a166679bbb94ee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Inscription *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Inscription.html</anchorfile>
      <anchor>ab65cee130e95c070c3b3e9b1130c8adb</anchor>
      <arglist>(GtkInscription *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::KeyvalTrigger</name>
    <filename>classGtk_1_1KeyvalTrigger.html</filename>
    <base>Gtk::ShortcutTrigger</base>
    <member kind="function">
      <type></type>
      <name>KeyvalTrigger</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>add28f236f0e277a6d46dd5788cdf0b27</anchor>
      <arglist>(KeyvalTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>KeyvalTrigger &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>a55ac711c535b3787236752f29b138ec9</anchor>
      <arglist>(KeyvalTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KeyvalTrigger</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>ac39469c1033ebf33b57f29cadb3ca6fe</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkKeyvalTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>a8b4bf240adb3c1b4f993b6fb7fa1aba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkKeyvalTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>aefddbb88ec4030ebd4fac81e1ca839b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkKeyvalTrigger *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>a801fa9e99e0a40ecdce67eea8f463df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_keyval</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>afcb4436d4582301a4f5b3a6f30fcb137</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_modifiers</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>aac85449ad79b4e850b7ab4bb8a162f4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_keyval</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>a934f536773067d690e83b6c33664610f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::ModifierType &gt;</type>
      <name>property_modifiers</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>a14614a4b7b969c1fb93e97f13d98510d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>afdc1f86679c1c9184f51a146617da14a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; KeyvalTrigger &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>a0b83cb77f1406a2dc9266730ead89bc2</anchor>
      <arglist>(guint keyval, Gdk::ModifierType modifiers=static_cast&lt; Gdk::ModifierType &gt;(0))</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>KeyvalTrigger</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>abdbb95836ed689f4065b9e0fda3d59be</anchor>
      <arglist>(guint keyval, Gdk::ModifierType modifiers)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::KeyvalTrigger &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1KeyvalTrigger.html</anchorfile>
      <anchor>ae276ed73c47040b9e04b479c3f8cefcd</anchor>
      <arglist>(GtkKeyvalTrigger *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Label</name>
    <filename>classGtk_1_1Label.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a52a4e9e17b24a388e5a8087fdd482dab</anchor>
      <arglist>(Label &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a86299a7dbcaf2ca9049454f687d9d580</anchor>
      <arglist>(Label &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aea63f245783507aab7e16be932b3b388</anchor>
      <arglist>(const Label &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>afce380b101786bf5462bc925636a2d97</anchor>
      <arglist>(const Label &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5efcc21dbca4d2f267e45974114df601</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa1a2f020caac2692098a97dc6828a23c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a6327e4897e7c5d597bdbe3b85065420f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ae9e3c17df3dbce1e185c1d45082b23f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a7d1d3a153e0952618a18b716352a2c14</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a1222d3297f24e3e2bfe8b65315cf71c6</anchor>
      <arglist>(const Glib::ustring &amp;label, Align halign, Align valign=Align::CENTER, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a2284e390d01964332ff421c965a6e49f</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a83aa8b6c5478eecc86fbf55d71eb76f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attributes</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a79b1642f8314e17babcc2808e74315b1</anchor>
      <arglist>(Pango::AttrList &amp;attrs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::AttrList</type>
      <name>get_attributes</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a14e425655c14e061132beae11e6544a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a14bb0bfebb8711444cc824bff66dcd27</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a9c64884f68def54e3ef73d9b4634d0c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a63c357c5247b89944d81ff2fc07977f4</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aaf9ad0734654a2f10671ca7804e21434</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>afabdffe536fe0052f0cbb07dcc2920f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ab4f8fa88f3fe54a462fd5b6c6b7958ff</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a78fd0fd7e9de83ce9af6096e7f8b93eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup_with_mnemonic</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>af3416c57a10654a234364e9129c94d89</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_mnemonic_keyval</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a856b0008dece43b0822945a2dab4f1fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aee19a9bd4d6468633938f7a19203a9cc</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acdfa0d76859d1d478888f13a34c32366</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa854dfcb3891899e21f4c75ead5ab104</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_with_mnemonic</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a8d1093d177941101af0d109e845ffd65</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_justify</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a750398a5c60b27ee6eec76debff943bb</anchor>
      <arglist>(Justification jtype)</arglist>
    </member>
    <member kind="function">
      <type>Justification</type>
      <name>get_justify</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a3d44b90b5c66f29ad8e043a9bb4705ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ellipsize</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aef7347ac55e67dddaed9808987eec576</anchor>
      <arglist>(Pango::EllipsizeMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Pango::EllipsizeMode</type>
      <name>get_ellipsize</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5cb792481bf0453af03956daab3a282f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a68576e81de5db72faa88c9a539ec495e</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ae62eb1c16fc0fba3dbc1011fde6193f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a769709b9efb3fdb66cae6cf2361443ed</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a650dafb166678bc897c9c7c27050db93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_lines</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a3c9dca6bddf4c885b95b89706873d80c</anchor>
      <arglist>(int lines)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_lines</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a1974bd7cc98d168fd1fdb48c4b1b96b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acc8c77a507c45771216bc5bb875ae653</anchor>
      <arglist>(bool wrap=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa0b26b6cd0c3d4733931391e5da672e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a9df899949bba667b469f6cffca1f78af</anchor>
      <arglist>(Pango::WrapMode wrap_mode)</arglist>
    </member>
    <member kind="function">
      <type>Pango::WrapMode</type>
      <name>get_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ab5887d327756ef2a85d2f0d35c337ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_natural_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0418ad10f6e27eed52d1506f1ab0e33d</anchor>
      <arglist>(NaturalWrapMode wrap_mode)</arglist>
    </member>
    <member kind="function">
      <type>NaturalWrapMode</type>
      <name>get_natural_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aaa0b393aa8fdf4d24315a8b52314fa73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selectable</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5c74b4a98edbe2eeafef177729ed786a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selectable</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5a7120225ca6f268b37b52b361eb4ef7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_region</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ab08a40a5e56346fde1fca0e5af283205</anchor>
      <arglist>(int start_offset, int end_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_region</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac02fbb3212e71297ccfb315f0adc430a</anchor>
      <arglist>(int start_offset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selection_bounds</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a654ac66e2504ee2ec969f4ca77773b27</anchor>
      <arglist>(int &amp;start, int &amp;end) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a7fb3fca237b7b58dc900b734b6599ed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a499ad53487c7b5fc002c60ddeecfe5fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_layout_offsets</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>add9c8da10b59cc0a807aa263ef8f208f</anchor>
      <arglist>(int &amp;x, int &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_single_line_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0d124486d364720a101a1d548d040f13</anchor>
      <arglist>(bool single_line_mode=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_single_line_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ae8d7830d830f297040b1f513e7cc99d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_current_uri</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>afdff6a8417548b0a53524dd0e92b0cb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acee7d4e87d7cc14080a7b8ded5f84e5e</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_xalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>affc012838b21f0a9dfa496560206134b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_yalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a269e4347606c5c77bf6ea438f0b955ca</anchor>
      <arglist>(float yalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_yalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa0c0f4c955fdd1f75115d47f405111b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_menu</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a60600995420150ee4a3f80af040313ae</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a6b44808fac7db63a4b73f838500b0bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ab73db8de6852b2bac99a775aecb93294</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tabs</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a9e1d116209ba9d0c5129c0cfdc4a600b</anchor>
      <arglist>(const Pango::TabArray &amp;tabs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::TabArray</type>
      <name>get_tabs</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acd6a680bbd90d3e0690e9691baf85bfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::ustring &amp;)&gt;</type>
      <name>signal_activate_link</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a9a73630691a1cd913388c7fcdac4920f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a6b8a6ee66bdc4aeb3ff3b8fd98af79ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a1c1467d1bbc288bbb36108a574d22c5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a02a39851de0815b814c9ba1e3e9c30a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a3d13724e04aaadda05424b9f90718f13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>adacfbd0859655ec55bbfe2c149a0f924</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a8a95ced8dd494f42f670bfb87261ec00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>adeab22fec3724ea470adf62b88289956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a99ead7b7aa0bc121464f4325827af611</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Justification &gt;</type>
      <name>property_justify</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a96011bf081ca05c09ce54d418e0e44a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Justification &gt;</type>
      <name>property_justify</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a76761a260cbce476e00fbf802bdc6b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a64de2013b78b50d5ffd8448daf0300e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>adcc4cdc59a55a6d9edafda844ed0acb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a92057fba9a575df1a3d0796478042114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a52f9663cf6dfc862f6656cdd5fa171b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; NaturalWrapMode &gt;</type>
      <name>property_natural_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a58baaab14446e77f0dd098c544e84a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; NaturalWrapMode &gt;</type>
      <name>property_natural_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0a2be7e1f3b92445fab2dd8455827635</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a1313fb3241b260a54b6c791db8eb5719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0d92b66fdd54f7ca957f87e7ba904e42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_mnemonic_keyval</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a266d38ccf5bc6322f8b87e2dd6f6eebc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a3f6ad29a2ebfe40d99fc031752259587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aec90cb04c3084568f1b856ae1821d374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac216640845995e837071f32a97db80f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a9c8e985064daa7ae39edee97f30af1fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a8d2cb59173b31fcec760812baeeab7e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac974322b577d06900821f50917186927</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_single_line_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0e1b4bda07a23dac93523b994195c69d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_single_line_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a4c57b1d69f0669a319b5ced59c28120d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a661c1e988c7c00f3c414825f29eebb60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a78895ef8431aa04d0f011a4627970e31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_lines</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac7ca4c689caa37fb19debd013c78c112</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_lines</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a7bd9584af1b3e9b67666b6125e4dba7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>af1905ab0963bbf7d4bd68cf74a793df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aef74fbcdbe97b888d7d3b1141e0714f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0492f61023dbfe32c1806b20f777cf21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5a6d7553c4d97ccf5c422304c7c55bc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a529dde0f67e479fe77a7b6d479142e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a86e1a7c34d98251ee398b3c885fb3770</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a39ba437959b2fdc07579c82885c44d99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a58b0154c0ba361efe33041fd07c90dd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac4c29fb674f35c5dd560aacbb4300239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Label *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>add1b6e4820241f869ff776e9c69b6816</anchor>
      <arglist>(GtkLabel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::LayoutChild</name>
    <filename>classGtk_1_1LayoutChild.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>LayoutChild</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>a972ecc8a5d8107302ab90543b575ab19</anchor>
      <arglist>(LayoutChild &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LayoutChild &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>a705518c9082b08dec8d88e793205bee8</anchor>
      <arglist>(LayoutChild &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LayoutChild</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>a3d7f1beb4d36154113ddc645fa9a74b6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLayoutChild *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>a4128a9cc07fc4a3f2502c4ca7b393ace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLayoutChild *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>a3d1e674bace1b42f707b1a504eca1399</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkLayoutChild *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>ad1339cef499f5537ff40d2ec8759f1d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; LayoutManager &gt;</type>
      <name>get_layout_manager</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>aa05aeda88e0de5f74c7d0ea14052ef52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const LayoutManager &gt;</type>
      <name>get_layout_manager</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>ab536566b9a264ddb6294d156c9a832c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child_widget</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>a17ea8eedf1305e5d3f674aab35e4bffd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child_widget</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>aa289aa702bde10e6c3e06a350d53fd24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; LayoutManager &gt; &gt;</type>
      <name>property_layout_manager</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>aa7b9eea86598ee6c6cf9393f436a8267</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child_widget</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>accb58077fbb900f4d2ad524228b6cca9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>a4c19bc1ed441fc66108b20f47ad5f56f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LayoutChild</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>abb6852db7e5251a506e2c0f152077891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::LayoutChild &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1LayoutChild.html</anchorfile>
      <anchor>a3d1e0d92285c405f56b03ebc7b22bcc2</anchor>
      <arglist>(GtkLayoutChild *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::LayoutManager</name>
    <filename>classGtk_1_1LayoutManager.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>LayoutManager</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a8a50a4eebfa589dab8bfd79a3bc20dcd</anchor>
      <arglist>(LayoutManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LayoutManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>aa397366f07932f3a1126b1605961fbca</anchor>
      <arglist>(LayoutManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LayoutManager</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>aeb908f0f10a043da6430b0330a06cd0e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLayoutManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a483212dd600950ba6f1e61b45b496294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLayoutManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a501251d2f1568073c6c9189c2ee8d0b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkLayoutManager *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a1b67d71ae8ac2df8fecb998995c1d6fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>measure</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a5da667203b41c65ce08902c06fdece08</anchor>
      <arglist>(Widget &amp;widget, Orientation orientation, int for_size, int &amp;minimum, int &amp;natural, int &amp;minimum_baseline, int &amp;natural_baseline) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>af8b2c607fc5dee04e78bc4d1e468d7bf</anchor>
      <arglist>(Widget &amp;widget, int width, int height, int baseline)</arglist>
    </member>
    <member kind="function">
      <type>SizeRequestMode</type>
      <name>get_request_mode</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>aad608aa6e77d71f43f8357ae3810fe8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a3ed932002e2066ab500400bb64c84f62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a48820eb305dd3ff7fe83c7fb29cac801</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>layout_changed</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a60615f09521540426e4d7d21673ab337</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; LayoutChild &gt;</type>
      <name>get_layout_child</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a56653ce51cd91e6967b3db35683705b0</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const LayoutChild &gt;</type>
      <name>get_layout_child</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a643adabdadebfce949bae6a44889a5fe</anchor>
      <arglist>(Widget &amp;child) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a3dd527751c7084c86cf2634597eac229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LayoutManager</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a7dd56109d40fcb1fd3e66a4894c13b03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SizeRequestMode</type>
      <name>get_request_mode_vfunc</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a968dd29007b2eac5bd17b0ffbb8d7404</anchor>
      <arglist>(const Widget &amp;widget) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>measure_vfunc</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a6fc8e1480d728929737894b9c7dfd409</anchor>
      <arglist>(const Widget &amp;widget, Orientation orientation, int for_size, int &amp;minimum, int &amp;natural, int &amp;minimum_baseline, int &amp;natural_baseline) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>allocate_vfunc</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>ab7e35e15204b55d4dd1dc65c664dbde3</anchor>
      <arglist>(const Widget &amp;widget, int width, int height, int baseline)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; LayoutChild &gt;</type>
      <name>create_layout_child_vfunc</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>a72bed4b0466c3b99a4ce12d058d7bc29</anchor>
      <arglist>(const Widget &amp;widget, const Widget &amp;for_child)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>root_vfunc</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>ab3780a8975941ff584595905a18a10af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unroot_vfunc</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>aa4f0141c8fffe0cf48e6486a18c8d1cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::LayoutManager &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1LayoutManager.html</anchorfile>
      <anchor>ae8691e0d0be18a846ad64d81d49edfb6</anchor>
      <arglist>(GtkLayoutManager *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::LevelBar</name>
    <filename>classGtk_1_1LevelBar.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6325bddf3cabc28df0072be9b3a8a62c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6325bddf3cabc28df0072be9b3a8a62cab1fa9dd3af034b3ef4291579aa673c07">CONTINUOUS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6325bddf3cabc28df0072be9b3a8a62ca947436f2927405d3b5997a9ffbaee5c1">DISCRETE</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>LevelBar</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a1866d5ecc4a2ca9286321787c12c6208</anchor>
      <arglist>(LevelBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LevelBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a57881ad6681cd63e3c9fdb87ad0fd88e</anchor>
      <arglist>(LevelBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LevelBar</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a2ff669040bec9a05ede431b313207e93</anchor>
      <arglist>(const LevelBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LevelBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a3fdcf95448375cbaabeb7c50e21f7edc</anchor>
      <arglist>(const LevelBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LevelBar</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a1e207767338c16b49d75ae554c81b2af</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLevelBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a3d780e54dda976085e7a4986a984bd69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLevelBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a171c6e0d34767329c403c08b09826ef4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LevelBar</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a8e6e5c61488b5a55b251ee4a97a73b48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mode</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ab347bce4c494462a70acdf555cf4bf4c</anchor>
      <arglist>(Mode mode)</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>get_mode</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a00586b40c02bb76ab27ff27990d264ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ae4c95a76c1f561740b2081b1e512e968</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>add8c7bee0ae39e685ff295e164916f3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a692ec1669999dcf3d3ced296992ed855</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_min_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ace6d785a5f1af59194d4d3ffb7d0568c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ab2773c4e9119a2df92380cec5534e6b2</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_max_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a0a55d83d378f87f12b41fc4f247f15df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inverted</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>aaac73c5fe66b35bd2261775043c028f1</anchor>
      <arglist>(bool inverted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inverted</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a9ddcedd3bece5e624883d939312e297f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_offset_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>abbc88572fc7794caaf3bcf265a502b42</anchor>
      <arglist>(const Glib::ustring &amp;name, double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_offset_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a1b73c857faaf8625fa802228e68bf43c</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_offset_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>aa94d2150dfb5ee7f6d24af369e5909f0</anchor>
      <arglist>(const Glib::ustring &amp;name, double &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxyDetailed&lt; void(const Glib::ustring &amp;)&gt;</type>
      <name>signal_offset_changed</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a9ed390d1a8cd728f879961f30a5adb7a</anchor>
      <arglist>(const Glib::ustring &amp;offset_name={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a982719eda5569a563f1efa1b30483db4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ab7aac0579ee8df5f106ca5bca7d02871</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_min_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a2548264300c242bbd302aea4bfff4292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_min_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a6a7d1855c48010bd6e1e13ba4d397ceb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_max_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>aaff29471178e096358b4d9fd77a89f49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_max_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a693feb460195607e17f2f898e594b40b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Mode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a0a9fbfa9ce6f90854c4c32e3a3c63164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Mode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a9e6cbcbd45f42a3da125b548d86691f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a275f8c839f2238b89efb261cdd3d7c1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a69689b1b3f76c7873de37a819f1487f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a3837eaba3321b9feb261c6171978f3f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::LevelBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ae5ca0b77187bdc201f507bd99295ee05</anchor>
      <arglist>(GtkLevelBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::LinkButton</name>
    <filename>classGtk_1_1LinkButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a05550a5c5d634bc20096ffce0ff540b7</anchor>
      <arglist>(LinkButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LinkButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>ab3b91bb5911c0546c9ba51280cbab2ea</anchor>
      <arglist>(LinkButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a4ae205f8cba7b4d7ada97e732f7c954b</anchor>
      <arglist>(const LinkButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LinkButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>af68fb6eac173427b23a0146ac536da69</anchor>
      <arglist>(const LinkButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>af2f36076cb769708158b104b870af29f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLinkButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a01e2192f9822c37b815fc6d1d2e33d84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLinkButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>af31f8b307ebf0f7b215256b42e302aeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a9e945e76051cf4b10a479432280154b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a74eb16e81540ba56ec819e75833a8bee</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a9c5aac6925b91bf5b80521bd11789339</anchor>
      <arglist>(const Glib::ustring &amp;uri, const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>adaf0cbbf5a026b23bdc6a669544be8d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_uri</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a1c9e4f2925219604883f48499382f7fa</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visited</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a7c48c472bb50f33685bf58a4d765c586</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visited</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>acc166b4be292555b232d824fea7de52c</anchor>
      <arglist>(bool visited=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_uri</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a7961965c9b2e0d4190c7c9df006b0437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_uri</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a2b4f6a83a0f326b1204f287df95f0cf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visited</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a34b5b4230c1751d405d35bb35871dc73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visited</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>ae07cd7603b20e533e77f76fb1062a8c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool()&gt;</type>
      <name>signal_activate_link</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a78e3fedef1345a2e61c7e442c7ec0290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a3c0101c2fa540d4b79b3623ef8d598cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::LinkButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a5b87ae1c3eea47dee4af988eb8c9d2a1</anchor>
      <arglist>(GtkLinkButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListBase</name>
    <filename>classGtk_1_1ListBase.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <base>Gtk::Scrollable</base>
    <member kind="function">
      <type></type>
      <name>ListBase</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>adfe934777d2239cca99114fe295f740f</anchor>
      <arglist>(ListBase &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>aeaa7ae7dcff92feff81f13ca65607efa</anchor>
      <arglist>(ListBase &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBase</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>af93e12d76838cb7e96d5f97606a64134</anchor>
      <arglist>(const ListBase &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ListBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>a3ba02d71548fece59c99a28e71f22b27</anchor>
      <arglist>(const ListBase &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListBase</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>a599b6ef7cf7be26be58f987861a72f01</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListBase *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>af9f73037b73c2380176aed69e2589e9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListBase *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>a2aef228123072660fd45c1fb9d2d8149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>af9fcb81d71968daae1bb4fe0e06c27af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ListBase *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListBase.html</anchorfile>
      <anchor>af151ddb3e6976fd2953c93311e1b3b4b</anchor>
      <arglist>(GtkListBase *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListBox</name>
    <filename>classGtk_1_1ListBox.html</filename>
    <base>Gtk::Widget</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(ListBoxRow *)&gt;</type>
      <name>SlotFilter</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ab6d621e12d195672554b1ff9d4e7b023</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; int(ListBoxRow *, ListBoxRow *)&gt;</type>
      <name>SlotSort</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a9333b990e0dbfeba3b959d8408d72347</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(ListBoxRow *, ListBoxRow *)&gt;</type>
      <name>SlotUpdateHeader</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a74867f0d150061cfa1ed146281d2461f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(ListBoxRow *)&gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a435d69826eb4fdb5a04451d7cd6baa99</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; Gtk::Widget *(const Glib::RefPtr&lt; T_item &gt; &amp;)&gt;</type>
      <name>SlotCreateWidget</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>adbd060431acb8814c699a676bb25fe16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBox</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a08f67231355abb99fc17836bb486ca14</anchor>
      <arglist>(ListBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>af016ce228138553470664416000ae639</anchor>
      <arglist>(ListBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBox</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>abdaff6633746f8b065630d790fbe8658</anchor>
      <arglist>(const ListBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ListBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a28725c08c37f2256ade47d333b41478b</anchor>
      <arglist>(const ListBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListBox</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac07d7be61c242809f6f4e31d073306ec</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>acd18ff207f385ae34f73de0b0007078c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac0ebee6a06e6920c367f6a5678767891</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBox</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a4e7b189bad9617ba342f15d992010d73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a8d3f1bb679db890a438a18411ec85d3e</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac02504d926f246ce07877857631f255b</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>abec9d89f68d70ad6281a0ac0828a7bd0</anchor>
      <arglist>(Widget &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a3001a5a37f1a2dc7e3567534a0217ab2</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow *</type>
      <name>get_selected_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a62046af9c29705c7f4af02d590d63f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ListBoxRow *</type>
      <name>get_selected_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac268ded6acf8dddf9d7a5b62de707762</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow *</type>
      <name>get_row_at_index</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a9825f1198ac6043a56717f8b32a34692</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const ListBoxRow *</type>
      <name>get_row_at_index</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>adb442575f260573a37ff2fd5a60a978b</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow *</type>
      <name>get_row_at_y</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>acd5e365f0796bd9f96c91c31eff93b0d</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>const ListBoxRow *</type>
      <name>get_row_at_y</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad6ac839ecde29b4b64ca107bb54949a7</anchor>
      <arglist>(int y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a2b416dd55db990aaaa2d4581fa785781</anchor>
      <arglist>(ListBoxRow &amp;row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a4c4aefc497cbdf9282911d0eced4c4f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_placeholder</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a0dd8cb8a7348a69b7767481c5444178b</anchor>
      <arglist>(Widget &amp;placeholder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_placeholder</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a7233ea96f6cb85772488deffda1f9282</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad49d2fa8c6f7162d44954bdba506514e</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a2f5d69a4845487a360d7fb8b2188e996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ae87c920818d95a6dd3c02ca37d50287f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ae324348e618be246abee1a70e679ffe4</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ListBoxRow * &gt;</type>
      <name>get_selected_rows</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a83d0d01ecaf472826fc5070a597742e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ListBoxRow * &gt;</type>
      <name>get_selected_rows</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a1a233354a0423f4b7cd7050fbdcb9740</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a5a42ed34c5b05d8463ef0aa4aa5010af</anchor>
      <arglist>(ListBoxRow *row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a6c8ad9642b0d91df05d0d7979469956d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ace9b1cea0f7a98d5b6d6cb959d8fbe02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selection_mode</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac1146ca9ca24d6e8ecca9533fe8e326c</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>get_selection_mode</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a6619ac583c379b0dc18aba6b7f1044fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a26820805c4b78be1f924b1cb65e1ea0f</anchor>
      <arglist>(const SlotFilter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_filter_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>aa66bcedf97c72cace3032deafce68e8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>acec1d5f8d73d591fc3eb2772c4f0e480</anchor>
      <arglist>(const SlotSort &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_sort_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a3c0c13a65d5bf2b4e1d646d288e4f898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_header_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a328bf911cc92df6de0fe2617f6a96b62</anchor>
      <arglist>(const SlotUpdateHeader &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_header_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad5bf97cd6f1572913748770330fd600c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_filter</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a8697105c5381e7413db25ce1ebda750a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_sort</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a4383ba21f0095cbc2c2962c7e00121dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_headers</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad81c0387e715fd961bd95eb6545e84f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_on_single_click</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a1898ce4466db562b69f9f5b39c127a1c</anchor>
      <arglist>(bool single=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activate_on_single_click</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a00f51e96baaa515edbb8156d82bef6f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_unhighlight_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a9bfb670adeeab4f8d28ccc6bb02b56f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_highlight_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a55f47065a53885fea8e5233ecda5171d</anchor>
      <arglist>(ListBoxRow &amp;row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_model</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a91602dbe7a2ea127955f5f57df44bd5d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, const SlotCreateWidget&lt; Glib::Object &gt; &amp;slot_create_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_list_store</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ae070254e93fcaf7913cd7847ea92dbc4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListStore&lt; T_item &gt;&gt; &amp;store, T_slot &amp;&amp;slot_create_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_separators</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a00ff6b87a19b01638d62e0b046c24c01</anchor>
      <arglist>(bool show_separators=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_separators</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a6d7437a0550ca31865685c40d9a7b94e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a98b7680e36557384f505ea5e78a436ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad1cb8b6a4a16db03153dca1bc2177ca6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a36569d806fbb012be295b3b3500dcbda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a51171de00bff0daf32608001b9207b99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_accept_unpaired_release</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a22faae5a5645f4421789046f144002d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accept_unpaired_release</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>aabf3235feff26d3eef66cf2e34630a2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_separators</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a9ffd830c83a05c43883aeaa69dd4da1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_separators</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>aab6e6fdbc10f1d3f24804ee9910dd66b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(ListBoxRow *)&gt;</type>
      <name>signal_row_selected</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>adababb1a01a20be5406aa5d17daef301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(ListBoxRow *)&gt;</type>
      <name>signal_row_activated</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a6ca0a8d46481f245427f0420be89c032</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_selected_rows_changed</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ab8976044f1df2cbe6f5b4603819dd719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a15df6652eb5bc84294a7f0f39bd60b2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ListBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a9f4c147f48f6af93e7332d44c675e62e</anchor>
      <arglist>(GtkListBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListBoxRow</name>
    <filename>classGtk_1_1ListBoxRow.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Actionable</base>
    <member kind="function">
      <type></type>
      <name>ListBoxRow</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>adca2264a171f0b4668f7b29ff03344cb</anchor>
      <arglist>(ListBoxRow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a5e9e487390d0318d94cf2f7f5b069930</anchor>
      <arglist>(ListBoxRow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBoxRow</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ad3c9be49a419a4dd339253ddd48e8df5</anchor>
      <arglist>(const ListBoxRow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>af3640d5e9fc8ec0254a03f8d99512c37</anchor>
      <arglist>(const ListBoxRow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListBoxRow</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>aca4b89e7e9aca7cb7eee3d132fff7911</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListBoxRow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a138a59f27bb1f6de8a247dac5ee5d8e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListBoxRow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a7949747ec0ee6b397262473fa6229e91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBoxRow</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>abcfe284a4932b5974e41de5a28d3b8c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a067420e4aa091760d77fb942bc139e75</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>aa2e7c41d9e237a19ec938f921ccfbdcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a343c4b1a6ca61c07279279cbc9060bb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a962927d346773b46c450db67f626ef75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_header</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a36cb86bb15a37a7cb3bcb3aaa51fe6e4</anchor>
      <arglist>(Widget &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_header</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a5342933c5930949f0a9194319340eed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_header</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>aab2d062d1b1156049ef47ce03ef34d77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_header</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ab90048ae4c37ccdc31b89be7d34b80fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_index</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>aef86491ceb55881cfb67f11476859c21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a536ac1bbde16b4a5a91166b4fd64ecf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a01f78bafaea66698a7e7d4aae7bb9c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selectable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a68fdfc059c5f1b69bb1aa335059bb2e0</anchor>
      <arglist>(bool selectable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selectable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a834454ff47caea921f9f95cd1a77de8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activatable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a6def50402ee9ce47c4e02a3bae4283f5</anchor>
      <arglist>(bool activatable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activatable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>afd02ae194be516abbe2933d925d948b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a810e9fc33295700048fb4452766ff5f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ac1a1423a98e8fa709e8b8de8c7b12f50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ab61a946a644377476a0bc97f92ed00ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>aa99a0e2d73c6be3d3a638ac2a77e155c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a33fa47eb57117b3e377874ff63af1794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a10ce84fdf015faabd44cefcb8c329860</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ab5ec7da95c59def3d2bf2d4f84d8ce4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ListBoxRow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a513222d90b6a448c0559eb5e0c009492</anchor>
      <arglist>(GtkListBoxRow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListItem</name>
    <filename>classGtk_1_1ListItem.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>ListItem</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a2aa692f5c4e3be96f2dd07ed94739024</anchor>
      <arglist>(ListItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a095dd04e21b8769189836734efa1a032</anchor>
      <arglist>(ListItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListItem</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a431775aba27eec2989788ef9588d3b37</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a946ef5dbe6088c61b13de68da41070f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a7b5e9123dc6856d599ecb90be3c8eff3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkListItem *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a402847e5dce08ac2cfc2c155c1ea26a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::ObjectBase &gt;</type>
      <name>get_item</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a92547370debb2cc2ff63d8709789344d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::ObjectBase &gt;</type>
      <name>get_item</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a304cf2b7d9aa81af327b58a8a1205de6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>ad9d980f2d51bb2d0c19ed743d8d28fb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>af7e4fe7c13062d2bd3a341eeb40697a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selectable</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a1a04b636221e3dda0a1d306005be650d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selectable</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>ad38b8ca21ba0084a6aa6ff432c34a686</anchor>
      <arglist>(bool selectable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activatable</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>ab1c93459655003a30c313108bfbde7d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activatable</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a2a4f803bc33efdcb17397ff287aa9f4b</anchor>
      <arglist>(bool activatable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a10787b4147bf75051adfbe38353c5c8a</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a4821f8b45db7a5658a13f6b2ee4d35f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>ad4b1318cd6b25bf2eed8db6d75aa9a8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>af651620c1fc1c8d5e45f550072b995a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a3018a9ac46d483b0e4965510c4d0c170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a5857ede8967d709726ec1c4d1319acea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a3f00c7043a19d19693edb0bf896cc387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a14f0c8011dfb4fa0503e86089007d5ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Glib::ObjectBase &gt; &gt;</type>
      <name>property_item</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a1981e0bfc42e830714e452231be6830d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a8c99c1509ebc710e3886d6e2e8dbe60c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a09fab9f8a5d8ad23005523462326f147</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>abed9c2fefd20e5658cfa1a3d296431d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_selected</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a21e4d7363e0f61778a0ba333b8299930</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>a215bf271b7540464a8706fe141fcf4ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ListItem &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListItem.html</anchorfile>
      <anchor>ac0bff0bf2a3d28f2384f7923b9dbf8a0</anchor>
      <arglist>(GtkListItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListItemFactory</name>
    <filename>classGtk_1_1ListItemFactory.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>ListItemFactory</name>
      <anchorfile>classGtk_1_1ListItemFactory.html</anchorfile>
      <anchor>ab7fec78a2b882b2d45bb194d344e40b8</anchor>
      <arglist>(ListItemFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListItemFactory &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListItemFactory.html</anchorfile>
      <anchor>a4fe37fe6a0bb3fd0b2b1586349ea2577</anchor>
      <arglist>(ListItemFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListItemFactory</name>
      <anchorfile>classGtk_1_1ListItemFactory.html</anchorfile>
      <anchor>a491a7dae2ab9dd7fc96562353d46434e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListItemFactory *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListItemFactory.html</anchorfile>
      <anchor>a72b294023162901ee21b5ed181c02a92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListItemFactory *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListItemFactory.html</anchorfile>
      <anchor>a10589346edd5fa6235d935e681379986</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkListItemFactory *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ListItemFactory.html</anchorfile>
      <anchor>a3830d558078ae69fa8792376e1c685e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListItemFactory.html</anchorfile>
      <anchor>ac2f0db05f0b0a9a24ac7add0a67b158c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ListItemFactory &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListItemFactory.html</anchorfile>
      <anchor>a04bcb337bf882e64c4ed10de5e5fde30</anchor>
      <arglist>(GtkListItemFactory *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListStore</name>
    <filename>classGtk_1_1ListStore.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::TreeModel</base>
    <base>Gtk::TreeSortable</base>
    <base>Gtk::TreeDragSource</base>
    <base>Gtk::TreeDragDest</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>ListStore</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a8ceeabce402b50f6066c44ac34228fb7</anchor>
      <arglist>(ListStore &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListStore &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a771509722ae149f314e14849babced8c</anchor>
      <arglist>(ListStore &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListStore</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a557b9783d6c10fa264ceb926cf35ba38</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListStore *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a5086758716b9f34a5219b1387aebe59c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListStore *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a08c19507bc7e2e7d10df7e3966aab148</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkListStore *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>aabc577b9267750688417879a066d49b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_types</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a6abba5fb66c20f1bfcea79adff7aa321</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>abf6e5cbe94951adc5b62120d9df1b562</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ab71d860741465ea79bc352c4575e47ec</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_after</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ab9032c9d9f620e10f32428e2358f44df</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a1fd8146c61bae1a95b050e9126ea1928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>af47307c865cc5de0856fe3f8571fc681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_swap</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a2f3617442cd5b52db485f4dc31f91da9</anchor>
      <arglist>(const iterator &amp;a, const iterator &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>acc5515fbabf7826d6d3a0e15ca81d2b9</anchor>
      <arglist>(const iterator &amp;source, const iterator &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a8afcdd1bd1b5c5b8fa2630d4ab106784</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a770bf1cc24ab0e02bdd96531107da603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_is_valid</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a41899fc6105079401c9b33deec687a30</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a02c6259caa541faf590a2925e9244e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ListStore &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>aaa6c530560f66872482a0650739276c5</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ListStore</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>aab8cae9bc8193ce13e7b983092405d25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ListStore</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a6fdbba7946ad83842d61574697dddbc6</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ac3fcc4859dd5941d9aa0c54024f37bc9</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ListStore &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ac9a0a0d9b34c33a9775ec4d89da2f0df</anchor>
      <arglist>(GtkListStore *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListView</name>
    <filename>classGtk_1_1ListView.html</filename>
    <base>Gtk::ListBase</base>
    <member kind="function">
      <type></type>
      <name>ListView</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>ab1a5bb197fb0490e7df824d8983ef575</anchor>
      <arglist>(ListView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a7b67654fc369e639680a55fced21a56b</anchor>
      <arglist>(ListView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListView</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>af83bfc5f88da9170e8585fa0840c11b8</anchor>
      <arglist>(const ListView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ListView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a04935acd1556fdda8ddddfbf597f7527</anchor>
      <arglist>(const ListView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListView</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>ac25076b7abba37c53529a473164a315c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>ac02ac50bf956d1b15f79cc6d0b867ca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a5ae496f96971bbdc6a2f4d0eb44130f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListView</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a69fcc1f69fe2525034519bc8386b0214</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model={}, const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; SelectionModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a17e6650cd20b979a0c6507022a381a69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const SelectionModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>ad8ec1737a30b16a0af41cd826c4859f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a25ecab05768748c2793ff981bc905dbc</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_factory</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a370b0e5dd6c5a8f943926fbd9e7927a4</anchor>
      <arglist>(const Glib::RefPtr&lt; ListItemFactory &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ListItemFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>ac03d6d6105006407535ded4db415b47d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ListItemFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a843221f0f0a3608788263896d03f329c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_separators</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>af36b3bd550a7a40d466819a8c572d801</anchor>
      <arglist>(bool show_separators=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_separators</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a68adc132386d2bf828fba19e376f5784</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_single_click_activate</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a3e2999a050557097b1ba1046e679cb0d</anchor>
      <arglist>(bool single_click_activate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_single_click_activate</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>aeb2c0df9c8c4f60a4bc90c28c40db4cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_rubberband</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a7854e8b813e4035371d61e65432585f9</anchor>
      <arglist>(bool enable_rubberband=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_rubberband</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a3bfda775506319736b8dd29012b76fac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_factory</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>ae9c0cc44197e2f8a802702bc6c01842c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ListItemFactory &gt; &gt;</type>
      <name>property_factory</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a654388e43f09e6903977f388be3242e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a56b8fad32afd68375fb816d87a4c7ce4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a170fa77bb762a85b835072b362f64035</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_separators</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a7659bd625152c4220500d9fbc2866da5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_separators</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a4c7e6ebc6b3be48c133ca74d648bbff7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_single_click_activate</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a89aa64cca5cef48e36c1e74e066d9b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_single_click_activate</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a0e49ef3ae19daf306a6dba0dbb60e808</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_rubberband</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a139a38c503bbfc95beadef662d292d97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_rubberband</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a0bd03401dd0f42fb8123822c4832911f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint)&gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a49a334a0b4386d3484d1ded9ecaf691d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>af28564800355db3a84faab522ef40f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ListView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListView.html</anchorfile>
      <anchor>a462baacb366b18cea8efe3746923ecae</anchor>
      <arglist>(GtkListView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListViewText</name>
    <filename>classGtk_1_1ListViewText.html</filename>
    <base>Gtk::TreeView</base>
    <class kind="class">Gtk::ListViewText::TextModelColumns</class>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;</type>
      <name>SelectionList</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a1f97eb1ecf054d665dd557314853bd99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListViewText</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a70dbfc3f59b573009c4dc9e063a5584f</anchor>
      <arglist>(guint columns_count, bool editable=false, Gtk::SelectionMode mode=Gtk::SelectionMode::SINGLE)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListViewText</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a53d7fffcf0fe5e0b17e7790fafc160eb</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_title</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a7e773a6335b0bf999dedfe2df55667f1</anchor>
      <arglist>(guint column, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_column_title</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a4fa65b80139b826719f343a330e07832</anchor>
      <arglist>(guint column) const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>ad4f779b79e37e4f6a170f789e5c3837a</anchor>
      <arglist>(const Glib::ustring &amp;column_one_value={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>ae77a57ee42fc3c000a3fb88d023d969d</anchor>
      <arglist>(const Glib::ustring &amp;column_one_value={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a7e85ee6fc54751bfff8079baa2226c97</anchor>
      <arglist>(guint row, const Glib::ustring &amp;column_one_value={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_items</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>ad9e617ccce390aa6933a055def3139a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>adc6ab55c51d2b549a149f69364a95a28</anchor>
      <arglist>(guint row, guint column=0) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a2d4b861b95e2ab0ae103b9970b1ca9bd</anchor>
      <arglist>(guint row, guint column, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a06c8b4f7c6144b1a50c22908f773b896</anchor>
      <arglist>(guint row, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>size</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>afa243639a0589acf1a558c5c46137242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_num_columns</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>aa00a8fae8653cdfd1c00ce043967ee5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SelectionList</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a2a3d953ef7751801cbe406b19f3308ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Glib::RefPtr&lt; Gtk::ListStore &gt;</type>
      <name>m_model</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a43b177deaa12148493b06918ab061699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TextModelColumns</type>
      <name>m_model_columns</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a111c03fad9d8cb07d7b915c01eb64c8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListViewText::TextModelColumns</name>
    <filename>classGtk_1_1ListViewText_1_1TextModelColumns.html</filename>
    <base>Gtk::TreeModelColumnRecord</base>
    <member kind="function">
      <type></type>
      <name>TextModelColumns</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>a72b75538215e87e4c62a4461757304f3</anchor>
      <arglist>(guint columns_count)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextModelColumns</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>a8490eff2370a3d51102b0936efa2d4a9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_num_columns</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>a80a21bfd6faed6f6d916c2e0a706e159</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>Gtk::TreeModelColumn&lt; Glib::ustring &gt; *</type>
      <name>m_columns</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>aec72434550a757b162257709242a2fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>guint</type>
      <name>m_columns_count</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>aca01b633101f9840c6ea31fbae0ae2ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::LockButton</name>
    <filename>classGtk_1_1LockButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>ab0c21639178b77d4323e94313dc2d7aa</anchor>
      <arglist>(LockButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LockButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>acfb30d76d0f8f62d8bb22809c9d6faf2</anchor>
      <arglist>(LockButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>af58195672c4cf09f88689f998a69ab0f</anchor>
      <arglist>(const LockButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LockButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a8190833084c61291333bc5a9eb9dd421</anchor>
      <arglist>(const LockButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>aeb0ef7b258fc23835eba79797d8325b3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLockButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>aff363278ed9236f83f2dfb8ff0494403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLockButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>ad1d9ec725edd389a6ad39ab041baa957</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>afe9c21b4d9eeacfbefaca4cbd4e95cb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a765efa50534cc38f724d9e2618c4c5f8</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Permission &gt; &amp;permission)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Permission &gt;</type>
      <name>get_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a305fe15b284cf2ab34c205fb180637fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Permission &gt;</type>
      <name>get_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a13660337eb6102cd2566fefeb71793c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a69c6a01ad436b4fbc19f52d7e336d513</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Permission &gt; &amp;permission)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a8de94e8585dd52f464725a3f68a2dad5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Permission &gt; &gt;</type>
      <name>property_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>ae05b62d09f0b2b1b79a92414c4deeb29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Permission &gt; &gt;</type>
      <name>property_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a1a382cb11d3773c500a9276b9c3c39b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text_lock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a770a0d73efb1ddbc5515932e02db814c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text_lock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a517978ca3cbbfd5068e09720db8c2029</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text_unlock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a6c244d621c61595228efe183e1557b99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text_unlock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>ad00f0cbd9bfea86d18f418f125f73246</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_lock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a8271fe3a401a14ca88537db5eef92eee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_lock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a31eb8c0a60b07dddeaca394aca452d3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_unlock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a792e084943187a630bf4ea2d98447870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_unlock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a496adb27f46ce23d792fcc967cae57ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_not_authorized</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a1ff8b1482176f999fb1e44b0dbf4d566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_not_authorized</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a58a3c01d86e3a4a198955a1ef44c56c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a15b625cf7f9450abad24df450c755504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::LockButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>aff71e7c9b7d9ddfb155f7d81a4959a59</anchor>
      <arglist>(GtkLockButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MediaControls</name>
    <filename>classGtk_1_1MediaControls.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>MediaControls</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a2224f245f7849d19aa1c3f0a6f95a40e</anchor>
      <arglist>(MediaControls &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MediaControls &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a8dc0dde334efd2ae1c4b673dfae2bf97</anchor>
      <arglist>(MediaControls &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MediaControls</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a397516a171ef245127481284b19b6b01</anchor>
      <arglist>(const MediaControls &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MediaControls &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a2658580122dbd7beaa699bf81651b1d1</anchor>
      <arglist>(const MediaControls &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MediaControls</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>aaa988819243dc6437846b2bec5a13ad4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMediaControls *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a5f89e92947323b91048654dbe21daca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMediaControls *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>aeb8a8ce0712af98b2151d62d19394804</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MediaControls</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>af2926e8d9865aad2cb30d97889fae51f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MediaControls</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a26d95f8c048e99295e752c1da058fe71</anchor>
      <arglist>(const Glib::RefPtr&lt; MediaStream &gt; &amp;media_stream)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; MediaStream &gt;</type>
      <name>get_media_stream</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>ade919ae909635dcb26a82de435a45f40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const MediaStream &gt;</type>
      <name>get_media_stream</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>acbdae1a165264bced384260f57988736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_media_stream</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a756ddb256f535eb262a2dbe08e67156d</anchor>
      <arglist>(const Glib::RefPtr&lt; MediaStream &gt; &amp;stream)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; MediaStream &gt; &gt;</type>
      <name>property_media_stream</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a4b0678a98e48d001b34e1ff37fc43618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; MediaStream &gt; &gt;</type>
      <name>property_media_stream</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a0c73310289c10d765a6e218638bf52b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>a40bded80dfb4d668e78dd29901fa077e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::MediaControls *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MediaControls.html</anchorfile>
      <anchor>afc102abdc74089cf9538b5b5f3a05926</anchor>
      <arglist>(GtkMediaControls *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MediaFile</name>
    <filename>classGtk_1_1MediaFile.html</filename>
    <base>Gtk::MediaStream</base>
    <member kind="function">
      <type></type>
      <name>MediaFile</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>af569a83ed0a066814b7941fc0f159853</anchor>
      <arglist>(MediaFile &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MediaFile &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a5ae624ce2612034da00bebff99b6dda6</anchor>
      <arglist>(MediaFile &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MediaFile</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a85ea1f6b8d20b3f9a8ddd33772890264</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMediaFile *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a31b214ec2b1c9f30dd88a3d69f9c4c45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMediaFile *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>afb41387c174ad29df308a3f27cda32c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkMediaFile *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>aeea357c8d8bc1bca7147e524f9829ba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a5172b21ca59109e418503bb304ec6d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filename</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>acc2b24d4186b7deca1a65e2ec7b6f09f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resource</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a17517250580830859b7dff3b76a20ac0</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_file</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a23e34fcf8b1f703b15b0e7d6143646d0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>aa418202df6af6b3864b19fddddfde7a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a68cab8c07b7893bedb2691d8a2f00635</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_stream</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>af0fa6ef122210e790725296d3e87830a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::InputStream &gt;</type>
      <name>get_input_stream</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a48671496276c51db966e16eaad28e900</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::InputStream &gt;</type>
      <name>get_input_stream</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>ad518d248b7720bdb4c7801c20a8b8215</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>ae2bf060eb7ae824ec24708804436c180</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>af2fe95d4a35170056377a0f30abe88f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::InputStream &gt; &gt;</type>
      <name>property_input_stream</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a50b1769b621d0c433a5f4c720aa916a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::InputStream &gt; &gt;</type>
      <name>property_input_stream</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a73156c59ecfa4bff40f17757e17bb593</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a0f0079c1c9ff91caae24b8918e0b27fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MediaFile &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>adc46e7b565f2c442214b2e06367f0923</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MediaFile &gt;</type>
      <name>create_for_filename</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>ac7d85ebad252cf86826a86a80ce5da96</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MediaFile &gt;</type>
      <name>create_for_resource</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>ad2ab4d56684bc8ff2f0f8fd39ae0c1f3</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MediaFile &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a5edd2a4c635a018ca3f78f2e6ade2a7c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MediaFile &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>ac069acc618ddeffa6924d86ac2f1b9a9</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MediaFile</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>a03db8ec5bc083e55f2b04b61b3129840</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>open_vfunc</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>ae05f93893e9ef41c025a4bebc0e541be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>close_vfunc</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>aa1a224e4fbcd8ab5f4e5f16d89f384a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::MediaFile &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MediaFile.html</anchorfile>
      <anchor>aeef29180136f7c1d04b55917b73f88fd</anchor>
      <arglist>(GtkMediaFile *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MediaStream</name>
    <filename>classGtk_1_1MediaStream.html</filename>
    <base>Glib::Object</base>
    <base>Gdk::Paintable</base>
    <member kind="function">
      <type></type>
      <name>MediaStream</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>adc38a6ae63ab15f6acc0c694c04d5188</anchor>
      <arglist>(MediaStream &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MediaStream &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a623e6429d6bab53b6e00b3eb1212054d</anchor>
      <arglist>(MediaStream &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MediaStream</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a97917544aba7e8125175e9c05857d796</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMediaStream *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a1265231fd6228939cc7d65f8400e21ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMediaStream *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a76ef51a7e3ec42f6a615400b849c62c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkMediaStream *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a155a38778e50173067f5b578a92e5b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_prepared</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a807f4409aeaf125f0161b581d9bce301</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::Error</type>
      <name>get_error</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a565cc3e7a2aea25186ace13788cc705a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_audio</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a196f01b6cf9219c4b9dbf7f57b9dafff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_video</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a12835893acae19963e61795985284b94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a0c81c545cf6f78d1711894179833ce2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a0ac44f85e58e816287169360be4e8793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_playing</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a4a5a81aa6d4c4ad2da7402da82c72bdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_playing</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a29d5786191936f4c633e53b7e464012d</anchor>
      <arglist>(bool playing=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_ended</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a53c76d365c3144d5d39e68b1107ab206</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_timestamp</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a93058557625dba9ff676733b50a888c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_duration</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>af2893fac78fedd920d70e52a20d9e3f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_seekable</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a31f1235e8aef8e20d8bced5e70b1de78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_seeking</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a8ecceb2a731a0d3cf22a5ec27472fccb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seek</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ac8b08e82e1c4ef7a71414cbdb3739a1c</anchor>
      <arglist>(gint64 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_loop</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a9bda85e313c80abf86ba018d1ff9e969</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_loop</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a53e792fb8be760b4717ad1f29ac8cb53</anchor>
      <arglist>(bool loop=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_muted</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a6cebf325ef611af494f46b7a05fc9b3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_muted</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>aa812ff050a0de405329b750c703d9dca</anchor>
      <arglist>(bool muted=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_volume</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ac47fb6e8068640f0789f00d1c7881bd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_volume</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a64f114046e556e4e9b096c05a05daafd</anchor>
      <arglist>(double volume)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>realize</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a2991723b4011cd92bf804961c0319a2b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unrealize</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a197be6cac7a429f3a94518066b5f61c7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepared</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ab389898458ba149f73a4bcc576443872</anchor>
      <arglist>(bool has_audio, bool has_video, bool seekable, gint64 duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unprepared</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>af91f3e7917bd31aced2c9488fac731ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stream_prepared</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a87cbfc0c81ec96cbfcb3ed42c4adb764</anchor>
      <arglist>(bool has_audio, bool has_video, bool seekable, gint64 duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stream_unprepared</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ae239e161fe520e754620a0efe4486eb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a9102dedad872b20534c2b05b280f361e</anchor>
      <arglist>(gint64 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ended</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a9083da2fd5c9e45f7eb9b8ca2944ef9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stream_ended</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a196e9cc3dfd5370536b6498752e565bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seek_success</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a755133bc1f151a3e34a661fcd7ca4bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seek_failed</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>adf31c893c6fb3a5e0d766f5bae040303</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_error</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a0f371dc1d2ef32b3e723ba063515b670</anchor>
      <arglist>(const Glib::Error &amp;error)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_prepared</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ae343a278cc9c0ffb0f914e2d07ad4ccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_prepared</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a79e14d6ca610bf9bec9d78304067435c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::Error &gt;</type>
      <name>property_error</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ac84d034f88509517e1ebc44e3e00a5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_audio</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a2827bf3d73d4d87f9c39133a35563488</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_video</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>aade0ee6119ffebdafbea80251bc373db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_playing</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a24b2ac6f88ec677459680b392da9621d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_playing</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ada9365c943f8d546705a9d99848dc94f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_ended</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ab1e0eb9e0b8da6ff51ee24404b563c97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_timestamp</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>aed9ac77587373e294561b7612934d604</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_duration</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a89852433734cd9bea9291fc23ae4e8e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_seekable</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ac12a1ffd4d403208ade352c573ffef13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_seeking</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a20df2067a2077365189b761f6a4d9bb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_loop</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>aab465c8f6a91fd1668c96021e4e2d89b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_loop</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>ad2f0269c13a83044efc8d2e1c6b1052d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_muted</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a978e762545dc2bf982cc973aea21ca92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_muted</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a0062864537d6cacca3b95c0bab8ef6de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_volume</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a51afde5ef484ece02c0427b18c6f963d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_volume</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a723a288ff86bef73b4754e9c61e43441</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a6631a730278f8185437ea2a7e38cd08b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>play_vfunc</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a3a74eb85968e78b4104c3a66ca084597</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pause_vfunc</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>afd4e8d04a707f9efeb4f977f76298b6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>seek_vfunc</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a99eae46b347d4efe96f9a2e921e95208</anchor>
      <arglist>(gint64 timestamp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update_audio_vfunc</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a8edc9a29cf0f5a8f2df4aa08cccfc82e</anchor>
      <arglist>(bool muted, double volume)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>realize_vfunc</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>a3fa63a1b4785d3c92bf8b2aedbb96e0b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unrealize_vfunc</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>aa94e28953a3a617b369413b80008c923</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::MediaStream &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MediaStream.html</anchorfile>
      <anchor>aa75788ff7e0712c16799a556e33c20a1</anchor>
      <arglist>(GtkMediaStream *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MenuButton</name>
    <filename>classGtk_1_1MenuButton.html</filename>
    <base>Gtk::Widget</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void()&gt;</type>
      <name>SlotCreatePopup</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a4838951a69ffa9df9b70adb6dd8ab679</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuButton</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a21f9162c78fce734eb023043cc5848aa</anchor>
      <arglist>(MenuButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MenuButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a274850e31c630fc4acfce1ce85c83124</anchor>
      <arglist>(MenuButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuButton</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>aefce03398cb863c112513556a85e2312</anchor>
      <arglist>(const MenuButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MenuButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a4c1c67bfc5d19a1dd386f72a459be455</anchor>
      <arglist>(const MenuButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MenuButton</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>af900ba072fb8345cc0fafa7fe181a316</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMenuButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a2fcf20f090af5395ddb2804f2ad80d0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMenuButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a2ba681216ab998e0623a3792a817a7ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuButton</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a8e235264ece5ce91e05ac289dc79b15f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ae84a046ed1a43940976d93e317f0b67a</anchor>
      <arglist>(Popover &amp;popover)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a0875556f797993029a4c40043e4dff8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Popover *</type>
      <name>get_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a717780cd62b892e654672a3e7cfc8555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Popover *</type>
      <name>get_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a257ec2fa7314b2be4cb48064effa146f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_direction</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ae685281383022cec34b111675969ac5b</anchor>
      <arglist>(ArrowType direction)</arglist>
    </member>
    <member kind="function">
      <type>ArrowType</type>
      <name>get_direction</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a76fbb0a01c5edf76226fdb4c79a22d52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>af93de0eac741c8ca3d5f68b69f305bc8</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::MenuModel &gt; &amp;menu_model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a3b96f9cbbeabf493a1d6e3ce32a730d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7b1351048530505379fe6d9ef062018a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a2829af931cc25a92090ab00c187b43ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a58a716908d316722e51c00740b52eef4</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a79fac6ca9b21dde72785eef8042dedca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_always_show_arrow</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a75e6438978c8b11faae892f1eddadc9c</anchor>
      <arglist>(bool always_show_arrow=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_always_show_arrow</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>aa694f9d78b23cf9f12c36f928b6f7926</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>af07547dcf32a6fef45cbaa4fdc002286</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7ee1727fc964a1152a6b0ce30f27afe6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a4f938b65b0e38b5b952e7a7ac894ca50</anchor>
      <arglist>(bool use_underline=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a399ff06d7ff2a229a4f2a43759ebdf90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_frame</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a17973efc2cf085133262af5541ac710a</anchor>
      <arglist>(bool has_frame=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_frame</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a68324fa624955d2cea3d235cfbb05b2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a01cdcf408fcda7982f774414d8791870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popdown</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a4fa466f2ea5db7579bb275752a40d4e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_create_popup_func</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7f821714558a200296585d16fab6cd98</anchor>
      <arglist>(const SlotCreatePopup &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_create_popup_func</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ad896f754217e906c29c442bff3a088a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_primary</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ade4bb60a0930a219e82498a5486a96fc</anchor>
      <arglist>(bool primary=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_primary</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a6317b0ba97425182c929d117775e2212</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7b1a37212d048afdcca9df8e0dff5d45</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ac9c48e1dcf3df5468d2636a2b51b50f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7e10f56b86e41b8b66d9ac453c3a928b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a477427567070d68ceac3c5875cdd767d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a691886f7973e144366402b4b1221b10f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a4fcdb6a90f18f9eaa556a975f93fcee8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ArrowType &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a584bf66fa518ef4fdc523abd466a1874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ArrowType &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a8449e0f65b8543c6d3dec2aeb4b7e7a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Popover * &gt;</type>
      <name>property_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7ef7664999fac495069bbbcdd6661bfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Popover * &gt;</type>
      <name>property_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a77b0f8ac0a5ab191c03347675d075756</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a9f0e9523fa34e518bc8fd089c8271871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a87b197ecf02d4b9aa9f56e66cd5e20c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_always_show_arrow</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>adc636a938e799e5c7cff173529e3fcbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_always_show_arrow</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a51d6fc495c88e51e640b6ee7cbc2b2d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a3cb20755e8b4baaa250cf1a88129c51b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>af9e8b38a206c657b28cb8b1ad4d71df0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a9ddb4b9f10c77280d4921d57e1a67b0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a3912c0813eb69a46c0657309d0e10040</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a88c2536fdffdb7785f8eea0997f3e37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a5361e9e669c8742b5ac26fe88bf08bc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>abf0dc9b4c83bb9d93f879d432eb49251</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>aa1e72188c52a3d71b7d33f1f880e5c1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a06fae83f3df3ae7b6c4d92f750c9ce9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ad90112c8d8fc65d97d803b5e4b1a59be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ad3c3177ae2df2ce92b0d5c4a34629c7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::MenuButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a9e338a776e234e33f534395f66327856</anchor>
      <arglist>(GtkMenuButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MessageDialog</name>
    <filename>classGtk_1_1MessageDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a955a6e0fe8dc55a8619af1510608f2eb</anchor>
      <arglist>(MessageDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MessageDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>adeb5e1bbe24b37b4c2320eb35d6f0612</anchor>
      <arglist>(MessageDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a80fa2453f502cbd14290defe50d23a3d</anchor>
      <arglist>(const MessageDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MessageDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>af78e4e71024caf74928e78a15a576e37</anchor>
      <arglist>(const MessageDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a112f9a4fb50a131b2c226ee0da1aa781</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMessageDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a6019fc42bcc8e891dfbcc6565939ec8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMessageDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>af5ffd5b91e470911e1259c31021ffd1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ab9cbbd3c31e277370c1d471beaa05d59</anchor>
      <arglist>(const Glib::ustring &amp;message, bool use_markup=false, MessageType type=MessageType::INFO, ButtonsType buttons=ButtonsType::OK, bool modal=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a0e04694921f097a9062477c5481ca34b</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;message, bool use_markup=false, MessageType type=MessageType::INFO, ButtonsType buttons=ButtonsType::OK, bool modal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_message</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a97e975958f9e913192c247d58e89f700</anchor>
      <arglist>(const Glib::ustring &amp;message, bool use_markup=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_secondary_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a49622e7b678a27beb868688d384ca232</anchor>
      <arglist>(const Glib::ustring &amp;text, bool use_markup=false)</arglist>
    </member>
    <member kind="function">
      <type>Box *</type>
      <name>get_message_area</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ab514233dce507f797ecb83021bd65930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>get_message_area</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>af32bb03dae3373d8946be10125c56f7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; MessageType &gt;</type>
      <name>property_message_type</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a9d31588c87592a70a3515aeb4ca346b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; MessageType &gt;</type>
      <name>property_message_type</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a70fad7d1fa1ac74f9f946caf77b2902e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a601dd1b9c96f77e67fccdcc8f0920371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>af666e9374c6d99d16e5042db564b609a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a491696ff6f8c0888076814e7686980a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a76fb3d570ed52649c5edf8aaf78d62ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_secondary_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ac96632705e65db903999ab99fdee1242</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_secondary_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a93e33c244f6b05275407975bae7d899d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_use_markup</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a62abf769f06003a4253f2e2b3a098d69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_use_markup</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a8afe49def702a6af733a2aff797424d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Box * &gt;</type>
      <name>property_message_area</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ad5ba0a20935a33566f08e4a5f2e83ebe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a01e92bc47a01c904eb4ef915fd1b2d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::MessageDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ab4333c7a2ff712f285e879653a6c324a</anchor>
      <arglist>(GtkMessageDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MnemonicAction</name>
    <filename>classGtk_1_1MnemonicAction.html</filename>
    <base>Gtk::ShortcutAction</base>
    <member kind="function">
      <type></type>
      <name>MnemonicAction</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>ae9d8097dc6419b257b04dccfc2e7262b</anchor>
      <arglist>(MnemonicAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MnemonicAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>a501546d8f1f01bd0b3270311c037f95f</anchor>
      <arglist>(MnemonicAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MnemonicAction</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>ac872f09bc25019c2375bc6125c505f52</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMnemonicAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>a87f34c1595627bdfd8f93edfd4501e77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMnemonicAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>a91f305ad60c39bee2f2d2bdd49e4e9ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkMnemonicAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>a98ae60f686ffcb74d124e6f916148905</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>aef0f0343d2551740f16375a50bd3c9a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MnemonicAction &gt;</type>
      <name>get</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>a0312ee12f59a9e72f2cd0509e97e70ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MnemonicAction</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>a307eea8470baa1c1d33fe09b8591e00c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::MnemonicAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MnemonicAction.html</anchorfile>
      <anchor>a575b0816371c2b9c6c81517faf7311fe</anchor>
      <arglist>(GtkMnemonicAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MnemonicTrigger</name>
    <filename>classGtk_1_1MnemonicTrigger.html</filename>
    <base>Gtk::ShortcutTrigger</base>
    <member kind="function">
      <type></type>
      <name>MnemonicTrigger</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>a7211d116476be66f5e18eb1f1151c007</anchor>
      <arglist>(MnemonicTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MnemonicTrigger &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>a3f147787be393a5101fef58007d14e0d</anchor>
      <arglist>(MnemonicTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MnemonicTrigger</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>ac96f105e2aba220154bfbb98f18be826</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMnemonicTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>af46679915084b9540160b695ad0ce3df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMnemonicTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>a7eb7eb7bfe980406776576208126bd0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkMnemonicTrigger *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>a660d5767b8cb53b84ea3a239a6a7adff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_keyval</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>ae01696d5f7ad8aa9985afa3d602a2ca6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_keyval</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>a3c809be32f8be059a5aa0eb60c06d874</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>a6918a5a2795f3c690cd5f508870e1441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MnemonicTrigger &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>a37ece13d0bed6fe4615dc49a2986b7cc</anchor>
      <arglist>(guint keyval)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MnemonicTrigger</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>aafc1ae7941ed34928592973754e1d5bb</anchor>
      <arglist>(guint keyval)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::MnemonicTrigger &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MnemonicTrigger.html</anchorfile>
      <anchor>afffdaa776606a0d32da1b11c7744b4a4</anchor>
      <arglist>(GtkMnemonicTrigger *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MultiFilter</name>
    <filename>classGtk_1_1MultiFilter.html</filename>
    <base>Gtk::Filter</base>
    <base>Gio::ListModel</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>MultiFilter</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>a6d27a0383957244d36a466a140d352d9</anchor>
      <arglist>(MultiFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MultiFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>a350422bff1b65ec6a4220458818414f6</anchor>
      <arglist>(MultiFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiFilter</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>ae0e31e599a3c49da6774e81ed820e41f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMultiFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>aa340e0dd6151e61a0c95e44db89e4c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMultiFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>ae47708639250370c06d88477e5a095f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkMultiFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>a319c5d36c78d63e931791466ca0922c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>a5ff6d2d3779e19f609ec12e93ae31993</anchor>
      <arglist>(const Glib::RefPtr&lt; Filter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>ae1733ecaf799efdda7f5d5bf4128c8cc</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>a91440f312dfb310c7cfe2e348d0f8211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>a2340e3bfaaa87909ec40eb0296c705e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>aac8e37e73ca1becdb95d9f6bb6ca1c19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiFilter</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>a65996b667bd61ba2266764659dabbfe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::MultiFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MultiFilter.html</anchorfile>
      <anchor>a530eb338ee420045bba50ddd6c8009b5</anchor>
      <arglist>(GtkMultiFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MultiSelection</name>
    <filename>classGtk_1_1MultiSelection.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <base>Gtk::SelectionModel</base>
    <member kind="function">
      <type></type>
      <name>MultiSelection</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>ab10e08a771b4fbf0c0016eb54ab28ca2</anchor>
      <arglist>(MultiSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MultiSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a5f5a8de48a3c9a228ca219a2542c46ba</anchor>
      <arglist>(MultiSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiSelection</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a30fc5368542d53ec57457417a3df0f43</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMultiSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>ae750ec2d42cf1f91271a9846af9eb006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMultiSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>aa5d1722fefd5e7463547a904bfbd4096</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkMultiSelection *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>aad410fe458de60e40b7c785c10c73007</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a6ed7516f8af436ad9cb1783a461f5b7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a32341b93d1eccb2bd0abd67321f4b839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>af9d7e835a2913f9a4dfa4672253b4303</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a377c998484a36d0182902a338f2b3b4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a269ff12f95b4afe5519b7d14cbf2e77e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a5dfcbeb00a2613c573620c8ab0afd226</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a2947390dc7290beb9aa60b9b348079a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a0a5eb6b2ae721d02d4cf583cd1106f0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MultiSelection &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>af0531f8ccc10542df95a37bb2bd61b5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MultiSelection &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a062d66959655457fc5f7312bf9deda88</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiSelection</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a6fb143d1dc1cf4d5edce4c9ae0c9b0ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiSelection</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>aa5123d88a702d4a651961a9b78a5e153</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::MultiSelection &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MultiSelection.html</anchorfile>
      <anchor>a2d3550b5578b46776dfc92860fba6cb0</anchor>
      <arglist>(GtkMultiSelection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MultiSorter</name>
    <filename>classGtk_1_1MultiSorter.html</filename>
    <base>Gtk::Sorter</base>
    <base>Gio::ListModel</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>MultiSorter</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a37763633160d2f99d5ed5ea9e00560f3</anchor>
      <arglist>(MultiSorter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MultiSorter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a519657e7076279f9c1d9344add8b2453</anchor>
      <arglist>(MultiSorter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiSorter</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>ad423ffd1767f02ab049d2c66aaa8280a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMultiSorter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a2b2f446fb991c99d35d8d64f59d43eb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMultiSorter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a99e016928a7af90020d2f140dd231057</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkMultiSorter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>ad15d4c2403701140ef761d3ba0a014c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a7c0683ea4aa12d42e31f69a7c968c858</anchor>
      <arglist>(const Glib::RefPtr&lt; Sorter &gt; &amp;sorter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a024475258ce8f6ac94d9bc42c9962541</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>ad277cfb1750b4e11b7b7b7643ee69e29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a15218a60e4af01099b06cbb173815414</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a1c0366843083f8ea1f17c8cf82b1fc6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; MultiSorter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a0e0b166298bd174cf85ab5210d571459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiSorter</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a9b2d1615c7037225f6a47e998acb69c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::MultiSorter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MultiSorter.html</anchorfile>
      <anchor>a06e58c99fc50d4517b12f7cfe72df438</anchor>
      <arglist>(GtkMultiSorter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NamedAction</name>
    <filename>classGtk_1_1NamedAction.html</filename>
    <base>Gtk::ShortcutAction</base>
    <member kind="function">
      <type></type>
      <name>NamedAction</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>accdb6eb328bba2873513a665fe170dc3</anchor>
      <arglist>(NamedAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NamedAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a285e1de2a2cffea89297b7c1421dc821</anchor>
      <arglist>(NamedAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NamedAction</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a64e6948971e118270b9194ca85b2d208</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNamedAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a4b219c60c566fee59d14c879ff53c299</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNamedAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a31512c38fd414c03fc60ba0fc7d3357e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkNamedAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a6e53f83b41c66d2b30a008cdc5be466c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_action_name</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a8035eeb3bfe41079a1996f030222d019</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a64dd4f1a2b939033d54eeec1335611d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>ab22c51a36434a9bc77406827f253e01f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NamedAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a9835a6924fba070395eb433fc31f1621</anchor>
      <arglist>(const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NamedAction</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>a6e3c5327a9e2cc219e897db043c089a2</anchor>
      <arglist>(const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NamedAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NamedAction.html</anchorfile>
      <anchor>ac5051e9f58ac7f983ee2051177d566d1</anchor>
      <arglist>(GtkNamedAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Native</name>
    <filename>classGtk_1_1Native.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Native</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>acfc8f7002803d4580874659361048fe3</anchor>
      <arglist>(Native &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Native &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>a2a9d5b53787bea6f20039f6b2f3bd561</anchor>
      <arglist>(Native &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Native</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>afc5187f87c5d722e33bcf903a01552c2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNative *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>acc47201f7fefae4b808d96cd234917ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNative *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>a9bf68b5c93b10f01050cff05ffbb0cbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>realize</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>ae77c9fdb1f25a49e9532f46aaea93a2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unrealize</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>ada5640d23f8758ea2327e44ed3acbfd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>a9c3af26a8167bf7ecf36b385b928fc60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>a91128f74b18f97fc9fdc32cc5f0d2ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_surface_transform</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>a49dc953967f20dcf63c14f66813d5e18</anchor>
      <arglist>(double &amp;x, double &amp;y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>a7bc06b83340472fd919294bdec420817</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>afb823079f68a6adef2d1511e92fe5d08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Native *</type>
      <name>get_for_surface</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>a538374b36e30d3bf33524fa9751d9b6f</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Native</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>a4a116601f0e0f019ffcc6701bcc5e76b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Native &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Native.html</anchorfile>
      <anchor>aad31abe867b6b1ca08846c94b9ffbf28</anchor>
      <arglist>(GtkNative *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NativeDialog</name>
    <filename>classGtk_1_1NativeDialog.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>NativeDialog</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a63697c8063e3772d07c436689b2ebcb2</anchor>
      <arglist>(NativeDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NativeDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a7e3a5bd36c930003f595dbd4e1457a88</anchor>
      <arglist>(NativeDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NativeDialog</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a3aa8b225221de2924fc46eb69bd29f69</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNativeDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ad1050682ea9974c3d5f4c9a533a934b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNativeDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>af56977d434f8dd2b56b34a2bf702a7be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkNativeDialog *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>af664d825f247ee6221ea3cdf1aeee8c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ab7531d6c65f809ea29f5b399be1927d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a7c1e9291f292657909f395cd9e564a1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a6c1392158fee2f0b2bd29747700a94ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a26ef2d5720db2d66183a96c0fcb2ebb5</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>aecefea3b5b1541970d233585e5be5afa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a28a9c5c5c26734b37cf4def52da2d673</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a844851ee8fd35ca1c2711a295c42247d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ad98a894e95f2cc10a4cf7352ebc6ea04</anchor>
      <arglist>(Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>af8ac4b48c7a934251b53dc346168ab73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a8986f4f273a82d918b0c13864748b13d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ac85a72445604a710fbab883ac0895378</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a4b7b00352deee14efe2b1890f402bc50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a5d72cb3ad562bc900f9b50c30faa4528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a1bde852ef635a4703d1dc82689615912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a3f438c65a85e795098ed5bbecc9543b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a504a56e2a256decb22c749de7129d003</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a6c2a026a33f7d023829fe71fc2508881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Window * &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a79b8883cafad34842ff5f5a69e6eb47b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Window * &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a58f7605a61bce416f1453ae6e165cbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(int)&gt;</type>
      <name>signal_response</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a87a11461d12c9571ca6b0a2bd7c1aef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a8ee5cf1446427f62867ada8a74560329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NativeDialog</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>aede35973a476ff7dda911888942d4643</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_response</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a7308bb574e67d62a18fe484fd78dde9a</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NativeDialog &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a61296ac194efb002554f836ad62a3900</anchor>
      <arglist>(GtkNativeDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NeverTrigger</name>
    <filename>classGtk_1_1NeverTrigger.html</filename>
    <base>Gtk::ShortcutTrigger</base>
    <member kind="function">
      <type></type>
      <name>NeverTrigger</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>ab4f77be31b89b469b705ddd1e9a76471</anchor>
      <arglist>(NeverTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NeverTrigger &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>a1a9a4d4f59d9fa80f9c37008cab17c83</anchor>
      <arglist>(NeverTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NeverTrigger</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>aaf488e7bcd499880bedbb7554814d678</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNeverTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>a3ebd858544a28f6a2f1a2d4cdb9a64c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNeverTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>a684af28ebc58019d99b03015aa8887a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkNeverTrigger *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>a16d9e5792f0fcb41206388cdb08bfb0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>afcd5a222d6eb09aab91eedb2c5e38f13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NeverTrigger &gt;</type>
      <name>get</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>a11548d9274fe25819ed72b56722d42d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NeverTrigger</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>a51c99de8112762f846e084f569346e33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NeverTrigger &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NeverTrigger.html</anchorfile>
      <anchor>adf2a3c2d256787e4ff6e32ced7b5f15f</anchor>
      <arglist>(GtkNeverTrigger *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NoSelection</name>
    <filename>classGtk_1_1NoSelection.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <base>Gtk::SelectionModel</base>
    <member kind="function">
      <type></type>
      <name>NoSelection</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>acc73e984b0c0c3b915be5114ab9b80a6</anchor>
      <arglist>(NoSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NoSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>af2fe4bab975e71b66a84710b5e2aab57</anchor>
      <arglist>(NoSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NoSelection</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a881c7f41a4ed516cdcdb2845233b4d93</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNoSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a06d3a729431198bdc826e62f8c27493e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNoSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a1bfa7dc9dc6284ce90a0c8455ef3c8b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkNoSelection *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>ab3a41727039c28b556ba88bac689fe0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a928d8a5eb2145aaed7e6472a25fb6174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a5e94eada354dcdd03375b06c59bd812e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>aa2814667003a98b286396c0bfc510ea7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>ad7daf400cca024b17902ce406b54c772</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a806cb7ae45c7ce8e75a90526e49e41c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a25e96b5b8974da6d6ab58f4030e327d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>ae90a8778b57e23d642911a2092bd890c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a916caaffc284a3a3d2ebeda7c69465b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NoSelection &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>ae2d22a90819d2150bfc921d02a566b42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NoSelection &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>afb358aec8d2aac2e5f454d5a936dfda7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NoSelection</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a76aa245a55c79eb91e02df11ba57f5a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NoSelection</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a976076ab853a2a8ebe0a0a729b570d7f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NoSelection &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NoSelection.html</anchorfile>
      <anchor>a14302c7a5cd62898ece9640e2caf7037</anchor>
      <arglist>(GtkNoSelection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Notebook</name>
    <filename>classGtk_1_1Notebook.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Notebook</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a543c96b4847d53413a35fa607ce67d55</anchor>
      <arglist>(Notebook &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Notebook &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acbd59cdc621920b60d33b91044eeaba5</anchor>
      <arglist>(Notebook &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Notebook</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aba4d30c5bd51eba13297e74a5e85a475</anchor>
      <arglist>(const Notebook &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Notebook &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6eae0a87ddf95ca25f698abdacb16212</anchor>
      <arglist>(const Notebook &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Notebook</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aec56acf1847bd6a7d1afbd29be082a37</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNotebook *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ac1990785090c73c43924d86d25a7035d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNotebook *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a1d90a0d13f56885e3180cadb1bb5830b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Notebook</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a246784cbd4db5dffabb109051364d079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a35e14985c7a8baa31ad3ba1fbba444f9</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a643a072b9be70fffbcea106153128a4e</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a8ce64c87a2b0a7a3f82f847f7665e099</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad611194f11a92bcc92a43f976de21d1d</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label, Widget &amp;menu_label)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3d0993a6d1ce5f2e540242d805d80993</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, const Glib::ustring &amp;menu_label, bool use_mnemonic)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af7bdf8ec9f703fb21aec6d372085f38a</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad30547e3efa79994a6faf08939dd33c5</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a8398c92414dd1e3e5709e33e2611914a</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3a1f038ff9da250b46af4704e92ac16c</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label, Widget &amp;menu_label)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af3d22c96a66611a8c874c25521282101</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, const Glib::ustring &amp;menu_label, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3e12bc0a44aa1bb2adc34d95c251ebef</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acc6a124182c335fff1f92f25c91cb42a</anchor>
      <arglist>(Widget &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa691f645fb2e06163c505ae532e09bf5</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, int position, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa7c7fb6c19a8dcd1cc0e6a4166cda824</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label, Widget &amp;menu_label, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad6e61b655c32954bee24d11753d7acd7</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, const Glib::ustring &amp;menu_label, int position, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa6a990b0569647868e322287e9fff65a</anchor>
      <arglist>(int page_number=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a14d7df8f1c31d5c6cd94f5ed30d323d2</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group_name</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a708defd4951bbd6cad10bc19845e2524</anchor>
      <arglist>(const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_group_name</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a04c82fae5a24acef4fcfd53e70329795</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a31a2a486f0d5400189a2d973375b6cac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_nth_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a8fec5a4edf0da1f602632b96e42157cd</anchor>
      <arglist>(int page_number)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_nth_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5c3aad1adb69c185b17631966275a03a</anchor>
      <arglist>(int page_number) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_pages</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a07d5aa0d1f207edb9fed01478b412796</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>page_num</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a0d8e137f54a14f6c83195e83a6a35bcf</anchor>
      <arglist>(const Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3973ce8040c5a09cf3d0d109726dfd39</anchor>
      <arglist>(int page_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>next_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a541b764b5cfa4477603eee268729d448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prev_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aaa68ef247203cb6aa10f9a85bc788bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_border</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a808a962e182f89ab39e4c1ecceec809c</anchor>
      <arglist>(bool show_border=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_border</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a2d40e86f170b92dcac7455d590b3edd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_tabs</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5647410e4057a608182381e90c0d6206</anchor>
      <arglist>(bool show_tabs=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_tabs</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a4acbe5c34e09b082103464991b3658d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_pos</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>abaaff5c44279de084923d72f67d47fec</anchor>
      <arglist>(PositionType pos)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_tab_pos</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5528b8b026ee4be016be7c84531120a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scrollable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a630bc75ab021187d8a0f51af0088435a</anchor>
      <arglist>(bool scrollable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_scrollable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad44c0d731bed1a6ae8fd75a18ea67452</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup_enable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ae3b10dd4426260c6241854429a6843cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup_disable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a010a04440ca6d87344da201a4496dc9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_tab_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ab590df63b394d2edb6b96e5d937928e7</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_tab_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a84e646058293480e3794f014d3bf10ff</anchor>
      <arglist>(Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a9cc1f87301aa22ca9dc14f86f29db6a4</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_label_text</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6bc59b5a0c766064caf86e9f8ea6958f</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tab_label_text</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a911719a5985f471d13f6df20949193a4</anchor>
      <arglist>(Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_menu_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ab481a1f9a5389769a9eaee2cad5be20f</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_menu_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a2441940e85bb8cf25f9494b2ffb32e9a</anchor>
      <arglist>(Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a82b0b3ee1e42962df6526d551ad2a8ff</anchor>
      <arglist>(Widget &amp;child, Widget &amp;menu_label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu_label_text</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a0e3bd8b532d0b719d0235a78bfea0aa0</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;menu_text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_menu_label_text</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3a776bdb603a685955b7a6f799cb2e85</anchor>
      <arglist>(Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder_child</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ae4032dff09c516ed5e5e8aed1a54b5f1</anchor>
      <arglist>(Widget &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tab_reorderable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5a5fe54256f6f5613aae1833e7470583</anchor>
      <arglist>(Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_reorderable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a283f670166e6b40523a73483a69eb075</anchor>
      <arglist>(Widget &amp;child, bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tab_detachable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aaab91e1c6a03ed56dbd1c46b0098e779</anchor>
      <arglist>(Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_detachable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a7b0555d623c2784dc45b5b3e6aa9c3e1</anchor>
      <arglist>(Widget &amp;child, bool detachable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach_tab</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>afc3693a955efa80d300f6b07c12080b7</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_action_widget</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a7ddfd0784b25e53aff05fea176af7fd3</anchor>
      <arglist>(PackType pack_type=PackType::START)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action_widget</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a16f6e650cd093da1123a0914e619ed94</anchor>
      <arglist>(Widget *widget, PackType pack_type=PackType::START)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; NotebookPage &gt;</type>
      <name>get_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a7588dcdecea008f0140258d06c5db764</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const NotebookPage &gt;</type>
      <name>get_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6468f9b07d31a2a62840cd339f824f55</anchor>
      <arglist>(const Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_pages</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a7f95e4f9bd9c845ba34cdedca354ff36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_pages</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa18d0165f8a57bce2ced6459c7b3f7b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Widget *, guint)&gt;</type>
      <name>signal_switch_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ae967ccf784e78b0a8543ab0cc14d9e77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Widget *, guint)&gt;</type>
      <name>signal_page_reordered</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a53ecfbbbbc8ad1687d890c5cfff81efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Widget *, guint)&gt;</type>
      <name>signal_page_removed</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a583ad775af73b54f8bfa83bd95ced53f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Widget *, guint)&gt;</type>
      <name>signal_page_added</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a117ceb90d217f0ccfb9facbaf0baf27c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_tab_pos</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a1b0d40645e4a691b838d9c01d0fda6d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_tab_pos</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa9af2ea4f3465d5f29c0ac9046f3ca91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_tabs</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a74ac652814342ce02045c4e13123974e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_tabs</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5c04100a196d023853f6c00817c0a1fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_border</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acd19a1cd009ac0e22067a7e95e50f95c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_border</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a74a714f6a8c06650c99fa8c4e69721c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_scrollable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>afcfab07ef41aaced825464f1f3bd8434</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_scrollable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a22b824327e6c4223026ef05d0a1ee172</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6941d718b5bbfcf1a874a46363cc7b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ae0bc9d60e958bf7595c921fe6b287b92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_group_name</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a85db9542c79473ea0713c55b69dad8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_group_name</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ac0dc445b011be64612ec1337189c7bfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_popup</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5e009a3bc5c3e41febbf54b3ee1e3813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_popup</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5dadd585db2522bb643d591bc87141bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_pages</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6e2c36f91175188d7425fd669b9cb25a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ab30d3c860480e2e910f7aaf581a4939c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Notebook *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a1ef95b6a13995a2ca58c44673967287d</anchor>
      <arglist>(GtkNotebook *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NotebookPage</name>
    <filename>classGtk_1_1NotebookPage.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>NotebookPage</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a10452b4d8f4a7142936052191aeb915a</anchor>
      <arglist>(NotebookPage &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NotebookPage &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a118ab2302b78522ae2b4697083862949</anchor>
      <arglist>(NotebookPage &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NotebookPage</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a11b6d09c2da575a4ec6111465e06b6c8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNotebookPage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>ab29d30fc31f9d1054c2b484114b3a896</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNotebookPage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a965a348358bcbfdd5b0cfd67c30edc00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkNotebookPage *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>af37f5632b25f62dba08dc485717c2142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>abdd17a87a40cb81e3874f6f37904028b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>aa5848fbaa718d2ea8f5019e0dec4969c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a89597c606ffb842bb11dbc0c0e93298a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_tab</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a95a2c1c772f3af199a6f4af9aaf5817a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_menu</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>aa4a81918ba2a00c6f8c8539cf7df3103</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tab_label</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a664771089abe11f164c45b3999c66da5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tab_label</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>af09b92460fe2718757989e73cc887ac5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_menu_label</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a3ea9375397713e3d11cfc5f0d09fc8c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_menu_label</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a700eb83974e76858ab1a9173fb4110e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a9edb261fe1b28f0927f3def1d3510a89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a1962c0b861d198d649f45f09a6d99f01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_tab_expand</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a579710c5393da205f7aa4b1c0e1ee12b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_tab_expand</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a6cae70453faed73a4a16b8048ef88c6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_tab_fill</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a42fc33e92d719eb198ebc44cc1fe7c6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_tab_fill</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a62d70a6710f14858a8d42ebe9e6d5a53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>ac4993f328b6295b41bcb1bb2bce4b62b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>acb05981164294babb6d5745a0558e23b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_detachable</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>aa0b9443ef964435f813f06a97a1919d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_detachable</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a303cc1095ffe322343cb97bdd6d3e572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>a193049a009e237c6a9004bc76a8955f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NotebookPage &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NotebookPage.html</anchorfile>
      <anchor>af8a6f68099cfedb91cc368eb7d39544d</anchor>
      <arglist>(GtkNotebookPage *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NothingAction</name>
    <filename>classGtk_1_1NothingAction.html</filename>
    <base>Gtk::ShortcutAction</base>
    <member kind="function">
      <type></type>
      <name>NothingAction</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>af2cc447f36070c4e8571e93972a1d3f4</anchor>
      <arglist>(NothingAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NothingAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>a98877205a1c84ceac0b0439a85675f11</anchor>
      <arglist>(NothingAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NothingAction</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>a2c588435a27a00bf3698c217bc94b021</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNothingAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>a46edc09e855e7e9f5cf4081a35750344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNothingAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>a3302182b8c56edf5ba92d0f0ca4a4479</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkNothingAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>a571670406ff5f268943acb18d430e23d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>adf4a9f709d7a613e69ff76aa4c6797e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NothingAction &gt;</type>
      <name>get</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>aa1a52bc48e52216a7ac8f8b5e7027300</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NothingAction</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>a1b714e028e0d1c82d6a181c9bfefce15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NothingAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NothingAction.html</anchorfile>
      <anchor>ab66010841102ef782e6e37c4203c4224</anchor>
      <arglist>(GtkNothingAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NumericSorter</name>
    <filename>classGtk_1_1NumericSorter.html</filename>
    <templarg></templarg>
    <base>Gtk::NumericSorterBase</base>
    <member kind="function">
      <type>Glib::RefPtr&lt; Expression&lt; T &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1NumericSorter.html</anchorfile>
      <anchor>a5b3e133fba9c49e23ed0b348216e215f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Expression&lt; T &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1NumericSorter.html</anchorfile>
      <anchor>a65e8d144809bf29766529355edf14912</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expression</name>
      <anchorfile>classGtk_1_1NumericSorter.html</anchorfile>
      <anchor>a5c667f1abe6662f05525d272f9bd5e4a</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; T &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Expression&lt; T &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1NumericSorter.html</anchorfile>
      <anchor>a92f209aef9fe83f374d3edc5dc1745a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Expression&lt; T &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1NumericSorter.html</anchorfile>
      <anchor>a63cc9aa7b2d74ca1d30409e569487456</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NumericSorter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1NumericSorter.html</anchorfile>
      <anchor>a472e7c4900e2432d2af6b0f9887fb19d</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; T &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NumericSorter</name>
      <anchorfile>classGtk_1_1NumericSorter.html</anchorfile>
      <anchor>a3999c0a4d9822e99b28e74e7a521b154</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; T &gt;&gt; &amp;expression)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NumericSorterBase</name>
    <filename>classGtk_1_1NumericSorterBase.html</filename>
    <base>Gtk::Sorter</base>
    <member kind="function">
      <type></type>
      <name>NumericSorterBase</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>aee7cd4bc41ec33e3208483e21074da68</anchor>
      <arglist>(NumericSorterBase &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NumericSorterBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a95bde0080866125a22a0a71563aecfbe</anchor>
      <arglist>(NumericSorterBase &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NumericSorterBase</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>af385192e06463856626bb61edd90fb3f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNumericSorter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a3d8c08e0bf1f533ae3880997777a62c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNumericSorter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a64774ed3b3890aad76a89057b575f483</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkNumericSorter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a59487f897c8c093d5a47932f0fefa407</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SortType</type>
      <name>get_sort_order</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a3fec6f92e9220a275b3c264843f3bfdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_order</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a4ba24d282aef2134b1e2555372769061</anchor>
      <arglist>(SortType sort_order)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SortType &gt;</type>
      <name>property_sort_order</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a1d213868e901977ff1ec9b8e2973f0d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SortType &gt;</type>
      <name>property_sort_order</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a130a261e1f10d673ca9423740583fcc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>ae546d79d24fb314e7386a84dd8f9c9f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NumericSorterBase</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>ac684ff0c693ba4cf2fa285491fbc86b8</anchor>
      <arglist>(const Glib::RefPtr&lt; ExpressionBase &gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NumericSorterBase &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NumericSorterBase.html</anchorfile>
      <anchor>a4e6ae3547de5c6e5bb55ddabbedf4c50</anchor>
      <arglist>(GtkNumericSorter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Object</name>
    <filename>classGtk_1_1Object.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classGtk_1_1Object.html</anchorfile>
      <anchor>af1a972718cfedcb1547527d67037ac16</anchor>
      <arglist>(Object &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Object &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Object.html</anchorfile>
      <anchor>a486b8e502295ea8b96d08639a12a173b</anchor>
      <arglist>(Object &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Object</name>
      <anchorfile>classGtk_1_1Object.html</anchorfile>
      <anchor>a4927743f8b3b0649b6061c2abdbdcfc3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ObjectExpression</name>
    <filename>classGtk_1_1ObjectExpression.html</filename>
    <templarg></templarg>
    <base>Gtk::Expression</base>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ObjectExpression.html</anchorfile>
      <anchor>aa83ad2bd86d21d4605c64df6642999a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ObjectExpression&lt; T &gt; &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ObjectExpression.html</anchorfile>
      <anchor>ab413b3f83e7af88c64d84a06e8f65448</anchor>
      <arglist>(const T &amp;object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Orientable</name>
    <filename>classGtk_1_1Orientable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Orientable</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a5631598d8737859922b0f1e45223616c</anchor>
      <arglist>(Orientable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Orientable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a9e41988b04fed45b2b5949d63fb2af9c</anchor>
      <arglist>(Orientable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Orientable</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>accc7fbdd45d3d28d610a2b9fc518ad85</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkOrientable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>aff3a192c3b691efa1f4227b8e161843d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkOrientable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>ac8cf6c189f7f9ae8baa42160ac99e3be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>ad6ab22a97e3811deda0dbc1b16571162</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>aa798bca0a9aca6816d27159854c2fa1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>aac9c7b152a704fd78277a2110045b469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a02343b330f3f93b26995738c4498fb8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a8d719ce4ff64f64600625afef8c6f288</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a813eadcf6422e6a5a8d103d7f17744c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Orientable</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>adfa250e7d05b46b9b726efd1b37e5642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Orientable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a5da33d954352cfdb3a3455cdc51cb79b</anchor>
      <arglist>(GtkOrientable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Overlay</name>
    <filename>classGtk_1_1Overlay.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af53055cf0aac547a4ad92f50af701bfa</anchor>
      <arglist>(Overlay &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Overlay &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a0ded1620b4bed8de281482823140f2f2</anchor>
      <arglist>(Overlay &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af1c68876d72152dae35c779179c91ff3</anchor>
      <arglist>(const Overlay &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Overlay &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a5f4f183674ddf672c28436d89d159055</anchor>
      <arglist>(const Overlay &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>ac99ca432d4c8122a90c97be41e44fbb5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkOverlay *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a26a40f99c8691dfe96a9fa145638ff70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkOverlay *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a1348defaf652983c5fa443f249d71f2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af85f598b4841b10a4d730b7a9666c084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a6e8eb1201093c8b9c0ea7f0f274ae587</anchor>
      <arglist>(Gtk::Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>aa8eaa84529e69ab67bb988455d861734</anchor>
      <arglist>(Gtk::Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>ad996aa8899ade49a7c6c0a889ee69250</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af0e47d7861e5ed688cb5995d85e21acb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>ab0e820ed802f0d717aeb9df1a2db7bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a79219d370851ddc1e9afeb76c9652483</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_measure_overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>aa66f6e15916b019d5c39c76a925a6d01</anchor>
      <arglist>(Widget &amp;widget) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_measure_overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>ad8851e4ef321ec6ad9de5d324862a0e5</anchor>
      <arglist>(Widget &amp;widget, bool measure=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_clip_overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a6335cc19a43d646d8f1c5800e9619b76</anchor>
      <arglist>(const Widget &amp;widget) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_clip_overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a282ac275684670f403da47c43d096a75</anchor>
      <arglist>(const Widget &amp;widget, bool clip_overlay=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(Gtk::Widget *, Gdk::Rectangle &amp;)&gt;</type>
      <name>signal_get_child_position</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a14f628c23055078bc70ea2f19f23227c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a793752d594ab03f26472efcb28ec1d4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a80313adc6ac74db088107be76e54de17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af6a8595c48242a26344f779f9f5be52e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Overlay *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a1e7fda463c6b484106fded6217261518</anchor>
      <arglist>(GtkOverlay *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PadActionEntry</name>
    <filename>classGtk_1_1PadActionEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>PadActionEntry</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a52361ab8688b0bf6578a2d191c4685e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PadActionEntry</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>ac679241e22be048f50727354f7947426</anchor>
      <arglist>(PadActionType type, int index, int mode, const Glib::ustring &amp;label, const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PadActionEntry</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a220bcdfe78b709c045fe84d114249d26</anchor>
      <arglist>(const PadActionEntry &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>PadActionEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a0d800f62d15155d6ca606fb9a330e819</anchor>
      <arglist>(const PadActionEntry &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PadActionEntry</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a9969f62338f05ea8b0c25ed83fd8e23b</anchor>
      <arglist>(PadActionEntry &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PadActionEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>ad05c3a2a0983d35505cccb5e1287cc38</anchor>
      <arglist>(PadActionEntry &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PadActionEntry</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a5bde1fd5e4462fa09360eb54af8a50d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PadActionType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a957859f24384b685164edcb23db28f35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>ae2330cc387998b3e65c125df468c0099</anchor>
      <arglist>(const PadActionType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_index</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>adcfd73ab4acdb56bb5b98803006b570f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_index</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>ad589d61488c85ee963b8921d246d52cb</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_mode</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>abd5855c775ae85b4a4a31fb3984509a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mode</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a93b2aa56b88a090f14c94fc469ed1400</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a3fa570d251118fc50f1dbf3dc6184b58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a3399fac37a4a744ee56031eb69903985</anchor>
      <arglist>(const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_action_name</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a1a5e277f054a2a65944022067f6832a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action_name</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a115af917775c8a010ece955eac46a9c2</anchor>
      <arglist>(const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>GtkPadActionEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a233e6ddfac8e0f99919e45d93951e5e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPadActionEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>adef6f8e0dddf208cbd0024340a32c212</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkPadActionEntry *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1PadActionEntry.html</anchorfile>
      <anchor>a9197457bb39d9f0c3caa775db014a912</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PadController</name>
    <filename>classGtk_1_1PadController.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>PadController</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>aba38a4319c62bf4bb96defa0b2cca733</anchor>
      <arglist>(PadController &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PadController &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>ac7719b4015288c8b2fc0f7fc03c1113d</anchor>
      <arglist>(PadController &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PadController</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>a4c298747fd5e937ef5eaaa2f26e1cf06</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPadController *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>ae89e164fa88f29c41c82e6060ca37faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPadController *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>a3f4b2df0b7047c2f44c30d05186e82ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkPadController *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>ac7c59e83da26da4a03285ef8b4518093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action_entries</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>a01a8eb3a31b700bf3e6fc4582548c37d</anchor>
      <arglist>(const std::vector&lt; PadActionEntry &gt; &amp;entries)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>a8e3a98f3abc49ceaa85091d976c2e959</anchor>
      <arglist>(PadActionType type, int index, int mode, const Glib::ustring &amp;label, const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ActionGroup &gt; &gt;</type>
      <name>property_action_group</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>aa08aa46f439756925122a563d7818f5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Device &gt; &gt;</type>
      <name>property_pad</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>a074605be1b03d0aff19a016c10428d55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>a84585618c0b1197b6b9822aa5f60a870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PadController &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>ad9705b04748f69ddd5dfa5229f7bc07b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ActionGroup &gt; &amp;action_group, const Glib::RefPtr&lt; Gdk::Device &gt; &amp;pad={})</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PadController</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>ad32ee46fbd099481daf38bec4c1a8529</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ActionGroup &gt; &amp;action_group, const Glib::RefPtr&lt; Gdk::Device &gt; &amp;pad={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PadController &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PadController.html</anchorfile>
      <anchor>a228c3793a0b32a1352fd840e8d8b8631</anchor>
      <arglist>(GtkPadController *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PageRange</name>
    <filename>classGtk_1_1PageRange.html</filename>
    <member kind="function">
      <type></type>
      <name>PageRange</name>
      <anchorfile>classGtk_1_1PageRange.html</anchorfile>
      <anchor>ac7f862eb4c05ebda51d2f092fa81bb1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PageRange</name>
      <anchorfile>classGtk_1_1PageRange.html</anchorfile>
      <anchor>af4b9ab3281339dfaf87f183536ebe6f1</anchor>
      <arglist>(int start, int end)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start</name>
      <anchorfile>classGtk_1_1PageRange.html</anchorfile>
      <anchor>a6db510a76caf5598ef70a89abdd0b5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>classGtk_1_1PageRange.html</anchorfile>
      <anchor>ab9ff3bb4ba031825e2c50c6d7fe93757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PageSetup</name>
    <filename>classGtk_1_1PageSetup.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PageSetup</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ab781dbe497024c10e6b87c2d442bbad9</anchor>
      <arglist>(PageSetup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PageSetup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>aa5cdfc318cd52f9785dc0d4f9f7d6a31</anchor>
      <arglist>(PageSetup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PageSetup</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a05aee329f596d9167b24e1ef739758d2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPageSetup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a33ab2ab02543d996e0f68df9013c3d96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPageSetup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>adbe9be1eab09a921cff5e2e7c2db276b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkPageSetup *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a9c0d228e27afbe4fe84495200ed77d94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>copy</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ac599661022f5a5fc4d54273300d08f04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a973544ad4cb6318ca6339d2937158340</anchor>
      <arglist>(const std::string &amp;file_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a30775c4baa0d0ef5d05f1f87564930ec</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a1f5df3885c872a00cb2d0f75b3329639</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file)</arglist>
    </member>
    <member kind="function">
      <type>PageOrientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a6e01e36e1101bd5b9fd12e6b8de77e1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ab7932c9577ffa4cf479c09fb7a117072</anchor>
      <arglist>(PageOrientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>PaperSize</type>
      <name>get_paper_size</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ac9853f889e8cecfe62c3096f8b698cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PaperSize</type>
      <name>get_paper_size</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a44be00b206e7b577175640fcb5f1f6c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_size</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ad563a5d83e98d493a608993abab4c9ef</anchor>
      <arglist>(const PaperSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_top_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a201e6626f6a7c125718765f0b43ab6df</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_top_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>acca55b5eb3a0a91f56b07b8b8b393e86</anchor>
      <arglist>(double margin, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_bottom_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a464e4447a02aa6727f7a3ff39c1ef115</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bottom_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a65a74df621c6543b86d06f0d0bfffb9a</anchor>
      <arglist>(double margin, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_left_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a3569250b6fdace5f92e8aa67f2ee5e58</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_left_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a39f3559b024afcac8fd87d012f8193b4</anchor>
      <arglist>(double margin, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_right_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a4376f5cd0c75d2733b703a1f803fe9e3</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_right_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>afc9ed77357080264a306f3397014b4ec</anchor>
      <arglist>(double margin, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_size_and_default_margins</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a56182d0495449be884efcbc4eddd9686</anchor>
      <arglist>(const PaperSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_paper_width</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ace5d5d3db79f60b89287af92bf8bc440</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_paper_height</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>acc65fc84c9d6c627eb8b6ef3365114e3</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_page_width</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a29cd8bf5d4a2a2d53df5e2add1998e44</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_page_height</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a1120448dcc1fb4dbb07b03602c12ee09</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_to_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>aadad43431d1dd166d6e0d0f5557b965d</anchor>
      <arglist>(const std::string &amp;file_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a65faf713567f251a9093d2855ac84463</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::KeyFile &gt; &amp;key_file, const Glib::ustring &amp;group_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ab1b92d3b89a4c8ba57746a78bd3153ac</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::KeyFile &gt; &amp;key_file) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a82c81943c9d10cda00ba851c9304582c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a3410299453609c9a7267ff4b99d85e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>create_from_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a43231f76daa7a9e36590c3c2c25f54f2</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>create_from_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a2c4ba46af8324b961f33b7315b6ac471</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ab2579949eae9ea4c8f595d349fd56e4e</anchor>
      <arglist>(const std::string &amp;file_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PageSetup</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>af1265126802384735eeb4d261d51bf8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PageSetup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a23864bfe5e69d7d87ce9a369a21aa5cd</anchor>
      <arglist>(GtkPageSetup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PageSetupUnixDialog</name>
    <filename>classGtk_1_1PageSetupUnixDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>acea0088d142d76e35152f5d0e249c725</anchor>
      <arglist>(PageSetupUnixDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PageSetupUnixDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>ade6909058f6c45276b51ca22ff978117</anchor>
      <arglist>(PageSetupUnixDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a31c14903eeac699ed729b612c6a57cc0</anchor>
      <arglist>(const PageSetupUnixDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PageSetupUnixDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a0c0174bb66c479db24d6e9e57daa5c47</anchor>
      <arglist>(const PageSetupUnixDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a5d07bf88d527a8c6cfbf1de76d96d516</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPageSetupUnixDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a037e9e6f945a24d31cb2b16605eb1aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPageSetupUnixDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>ac5e1e4a42b7deec06f9b3579affb2a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a363bffd0625fc06469cce72d228a5507</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a2d08cd4a317c8d9eb6835a7410d51ce4</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_setup</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a889899b7971325bb006a2e431e496223</anchor>
      <arglist>(const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a67ede2096461e8323d7ed64f40741b93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>ad3bc13c2c9272f9871969f3576969c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_print_settings</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a08efaedff3def6f8d5adbd2b7aec380d</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintSettings &gt; &amp;print_settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>get_print_settings</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>aedee632ca2491e912573b7d72d6c7c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PrintSettings &gt;</type>
      <name>get_print_settings</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>afaeca56fd154c0f5f18b8e27948ea197</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a334592f8ed9c11b8ef988b326fbe1519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PageSetupUnixDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>afeaa6f6e0f487027d86974a7c3176d51</anchor>
      <arglist>(GtkPageSetupUnixDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Paned</name>
    <filename>classGtk_1_1Paned.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Paned</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a916e2965174b96d1ca7e226425fadcad</anchor>
      <arglist>(Paned &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Paned &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a8321839a25f16c4cdb803acefdded721</anchor>
      <arglist>(Paned &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Paned</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a58513c64f53e77ba28248a52c85d3935</anchor>
      <arglist>(const Paned &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Paned &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a9018b1f6026dedd5b804a67e4b792301</anchor>
      <arglist>(const Paned &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Paned</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a4552d7c54f658d840d08031b726b7387</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPaned *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a672f115757f2bd346bec1163c1b6f29c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPaned *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a85fcec8809877afae910e9c67ebfc85a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Paned</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a49c4c4b7495772ab82bc246082f8fb52</anchor>
      <arglist>(Orientation orientation=Orientation::HORIZONTAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a2400751bccdad821f04927ad3597c1df</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a6345e0ba953601a9db9d470d2fbe9825</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae1c6fdc180b99e6fa1ec26d8f26fd50b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resize_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a44e080349e921e5f30ada1aa25c0e70a</anchor>
      <arglist>(bool resize=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resize_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>af23120bbebb0252a45a07f94f5904424</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shrink_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>af7b30f70a385a257dbde4db51bcd3099</anchor>
      <arglist>(bool resize=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_shrink_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a5d87713ca1b4b4ea9ec5f4f1ac85d202</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a78c09530eaf201d48bf4e68844573cde</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a65ff020c40073f59e943818eab25f785</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a4457bad892b4ff90cb27c7da28206450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resize_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a33600225f4ed68a06a90285e3a1c1933</anchor>
      <arglist>(bool resize=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resize_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a9bda3c9b6e75ac495648577808dfcd49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shrink_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a2b0f2df28cf3a8b7bf8a45b4a4eed0ab</anchor>
      <arglist>(bool resize=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_shrink_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a48b07c8a6e2829afd2e9fd26965ce5f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>aca1d7b4bcfd0b05aa65c3db08de11f9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a2f8c09293943318951e42ee0972595ca</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wide_handle</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae910c0cafd04f347d2f371994607182f</anchor>
      <arglist>(bool wide=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_wide_handle</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a8b28d8b75a9965613beef86b4b906afa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a65923e19f26790786978ec07ba9e7b4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a822a73b19311834b597dc8bee9ea2531</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_position_set</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a0293ef3ca8d2b0d97ace2591b65e1a70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_position_set</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae8d9c2c2c72702687cf21d0f86e09579</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae2459a9408d025ff34fa75112bc156a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a20c8d4a1171904473a38f548209e1ecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wide_handle</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae2afc0bfb6aa693daa31e788a485006b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wide_handle</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a863ebb62baf01dcdb64d6c10c662987c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resize_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a7775cd1f92216ec3e02505654fddea48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resize_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ab327ff901cd9309b29b2392a735341d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resize_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a638ee17ad4037a9e2be7c345cc6366c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resize_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a768d60628426ce46333fba3534df19aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_shrink_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a0b25e3505820755d7c1d39903909fac0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_shrink_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>aee0baaa2b51a11294ca277f29b505311</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_shrink_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a53d104f627252c2cec03888a9d39651a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_shrink_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae260a7c9bd10fe1b7aaf7920100701a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>aeaf468029a9cc7cc9cbc78a418deba31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_start_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a60d84652166135c0dfddcf26e400b5c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a701f9ac1486756932a7beecf09700f22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_end_child</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>af3ebbfdbdddc25cb5a8f59c2cae7f260</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>abbbfa32f9a927c95b5f231c36fcc99af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Paned *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>aa2f1d669087433cc9410b7792315b6ea</anchor>
      <arglist>(GtkPaned *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PaperSize</name>
    <filename>classGtk_1_1PaperSize.html</filename>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ab3684d32ae1642482596ed4654199728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a1b18b83ba01b5d9edda168bb3688ab4c</anchor>
      <arglist>(GtkPaperSize *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a50cde0b498878eb7d45f6c62f2a8ff92</anchor>
      <arglist>(const PaperSize &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>PaperSize &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a43e7c18ecca71cec077d4308e692cfe2</anchor>
      <arglist>(const PaperSize &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a98f4428195ec8fba3d02de33dadbd6eb</anchor>
      <arglist>(PaperSize &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PaperSize &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac42c66e1e73af4593b016a15f9d8a6c7</anchor>
      <arglist>(PaperSize &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>abac2d4d7e0a6ef765e52fce69591660f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a08a6c95772beaaf05b7d25f895743767</anchor>
      <arglist>(PaperSize &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkPaperSize *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>aa97c8c8189e38029d9ae7697492bff6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPaperSize *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a55ba4d2df67033c51067f493c7271b52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkPaperSize *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac8f730ee23d63ec9b88089439d6144fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>aaabd9c3ed3ca871bf642d2a954224020</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ace19a7922a89a4bf52177ff15b9eda40</anchor>
      <arglist>(const Glib::ustring &amp;ppd_name, const Glib::ustring &amp;ppd_display_name, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>aa0aa75123c4f0e5637dde4f9e5561708</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;display_name, double width, double height, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a702c498ffabeec7eed299504dbecd2cd</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file, const Glib::ustring &amp;group_name={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>aca12fc15eecc2aef684f05102703b9ec</anchor>
      <arglist>(const PaperSize &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac10d5265e999bef02efc4251b8555d48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac3189d91d7f8eeec8ff372655e105c9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_display_name</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac2e3126a35e140a94ac4e067b8a71b15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_ppd_name</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>add230651f5c14e5cfb4d11d00c550351</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a823baeb36ef465428f7f05ddedb65f59</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_height</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac473e1efac9b6115af4ce779eb69cd61</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_custom</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a3c2e82d18919cdd7f5d103623599e1e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ipp</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5631b1a9b7ee630393672889cab014e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac9595adc9347b49a08a35529eb3520ea</anchor>
      <arglist>(double width, double height, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_default_top_margin</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5dcc6c250437f06db63a7c197995eeca</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_default_bottom_margin</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a54e97166cd2d9003285f44ba526f7ec9</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_default_left_margin</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a899d564b9a3c6b75467a609c4752db1c</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_default_right_margin</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a35f49859d7eebaa0f0b2ad4e2acb010c</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a76a956d5714e035bc370534d2989bb3f</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::KeyFile &gt; &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5baf03d7a8f49d4b877a87203b1e4d1b</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::KeyFile &gt; &amp;key_file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>acd4791178041faaaeb86f6e63f35c7ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; PaperSize &gt;</type>
      <name>get_paper_sizes</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5335edfab0b32d68053cc733fa44f7b6</anchor>
      <arglist>(bool include_custom=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_default</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>af734991bd70ffe66120b6958b8068097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkPaperSize *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>abbc16bae6e4829ee0a4bb5ae35c7f83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a51acf7cdb2532db255a6e4e85744528b</anchor>
      <arglist>(const PaperSize &amp;lhs, const PaperSize &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a567e4713d60c88578b5a2bd74bf71964</anchor>
      <arglist>(const PaperSize &amp;lhs, const PaperSize &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a97115520a323bcf24e2e834999a3f133</anchor>
      <arglist>(PaperSize &amp;lhs, PaperSize &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PaperSize</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a84a14295fdac57599ece4d7a7024b853</anchor>
      <arglist>(GtkPaperSize *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PasswordEntry</name>
    <filename>classGtk_1_1PasswordEntry.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Editable</base>
    <member kind="function">
      <type></type>
      <name>PasswordEntry</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a973ce72cbc8df0482bc2f0aa13e43580</anchor>
      <arglist>(PasswordEntry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PasswordEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>ad30cd36d9a4972b134786a91f3d688af</anchor>
      <arglist>(PasswordEntry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PasswordEntry</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a65eca66f7d4bd47cdd3105f641ad2dca</anchor>
      <arglist>(const PasswordEntry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PasswordEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>afd96b4462f20f18e021c4fe434d46745</anchor>
      <arglist>(const PasswordEntry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PasswordEntry</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a99c8a303c68221843725fe6ea6c9d2c2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPasswordEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a293b8291234dffb37ef5d7980728613f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPasswordEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a313fa6a15be1dcadd04f7821d052546e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PasswordEntry</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a62034a0ebdd6e952dbd9a32a39ba008b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_peek_icon</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a9ec8d3039a42a0da2c396e482339a45f</anchor>
      <arglist>(bool show_peek_icon=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_peek_icon</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>ae8052b64a5716300f4a57482b77fe057</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_menu</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a4db8c75d74990ecc43f2ae13b78a27f8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a0b283a70789f657d7bf7142aa0ef75a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>ac6cf98e220cfa265457f23fb182ef59b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>ae5aa06edf6ba3e610512d759b81f89ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a4da54914062cef56293f9ab6674f829c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>ab84b468490000a02fd817f757fedcceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a5d57b99e4955b4a81cea3b2e5090b115</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_peek_icon</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a7cf4afa5031c5eb0c31ff034116fc7c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_peek_icon</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a3639b9ec7c93dc3ac39f103e490b99aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>ab995bfe7acd462153ebd595be8e6a76f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a80162ee408ef14348e6e53a0e4d8ef76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>aa73a35c5e77a9612a16aadf75d0ba1fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PasswordEntry *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PasswordEntry.html</anchorfile>
      <anchor>a8fa5188cff083a4f3627adca3a0bcef9</anchor>
      <arglist>(GtkPasswordEntry *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Picture</name>
    <filename>classGtk_1_1Picture.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Picture</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>af402879a6a2bbcd6fcef2bba93daf107</anchor>
      <arglist>(Picture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Picture &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>afd98545ff9196b4c0673af9f98df7ee1</anchor>
      <arglist>(Picture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Picture</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>ac74d2daacd8734ebacdf284fddd171b6</anchor>
      <arglist>(const Picture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Picture &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a22dee4b95dda2b68490955c8186e1dbb</anchor>
      <arglist>(const Picture &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Picture</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a6beaeba291104ef330005c28ea0772c2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPicture *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a47abdd4bf7c7588d465d468a8b52875d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPicture *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>aba3e2e9625bd6d01d5d61cd161b67466</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Picture</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a56c74380f460f21ddfdf424a75bbe7c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Picture</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a1ffd765c2e6030311c914da113db234f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Picture</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a0e21aeac6f0e7a42134f84c3f68d6dad</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Picture</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a7aed333989f5197410882dbd75eb6071</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Picture</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a0e99df9ed40edd5ea3232dc88abc9bb9</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paintable</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a06fcd005759f60005872fa2909da6cb2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Paintable &gt;</type>
      <name>get_paintable</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a812d7241d22a2df585f6ca811153f6e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Paintable &gt;</type>
      <name>get_paintable</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a6857be1646b51749c04875f5d7e3bef5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_file</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>ab6c7c86411a36c04ff1eafec143948f7</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a832e6c6d7faa70b045ec540bf2ae2df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>ad547c1899daa4ee2c996ccb687043307</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filename</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>ac0c2074236c442482a8a1f1834cc4de5</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resource</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a5b081b24b579d64bb0ff33f13221a2ef</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixbuf</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a484818d3a9af3df6122ce5909ec2f87a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_keep_aspect_ratio</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a299fb0fd8c0ad11566343ac2ead7e263</anchor>
      <arglist>(bool keep_aspect_ratio=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_keep_aspect_ratio</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>aee8bd929d9803e7d4ea1c618cadd20a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_shrink</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>af4d82329d48db6ef24a4fdecacac6eb7</anchor>
      <arglist>(bool can_shrink=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_shrink</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a556d93b62f7842b9dc6d44e61839cd35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_content_fit</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a78c1225c29d3ad18c27f2ef3c8c5d3d0</anchor>
      <arglist>(ContentFit content_fit)</arglist>
    </member>
    <member kind="function">
      <type>ContentFit</type>
      <name>get_content_fit</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>ac26297689fd2e1d5ebcbdf7a843295ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alternative_text</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a87f0b5a194bca08043a33bdf8260d7ec</anchor>
      <arglist>(const Glib::ustring &amp;alternative_text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_alternative_text</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>acf1d20c248df9804b798251213ee2cfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_paintable</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>adb18fc5c2937612ee54cc4688574ea6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Paintable &gt; &gt;</type>
      <name>property_paintable</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>ab642d6271fd711010e71668bef1fb8dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a427b6ab7772340da38368a06c4910e60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a5e34ed299d66fd7016b9ff9ddf7dfdd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_alternative_text</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a682c15d8a893bd87b8a9118cb591b90c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_alternative_text</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>adf1b5b947d829b3d11e20b2207cec2c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_keep_aspect_ratio</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a60adfbb0302ffcb53578735a978e9979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_keep_aspect_ratio</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a83d7b56ecd8582132a0346cea2d7d654</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_can_shrink</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a745105e6d2dbfd4ab437b3cbad075bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_shrink</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>ab7da07b507c942b83946cee4601ad4cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ContentFit &gt;</type>
      <name>property_content_fit</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>aad1acb957cf5c12e0076941994552215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ContentFit &gt;</type>
      <name>property_content_fit</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a91244c3fd215666222126ab6f7256db0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a5fff2ac885d2b4f706f2aaf05813ed65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Picture *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Picture.html</anchorfile>
      <anchor>a2ee911d137f694a6b94927713100cc62</anchor>
      <arglist>(GtkPicture *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Popover</name>
    <filename>classGtk_1_1Popover.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::ShortcutManager</base>
    <base>Gtk::Native</base>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a7b8a9e6c1007d082dd351354d9f0f5e8</anchor>
      <arglist>(Popover &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Popover &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>abed378cbbfb815ed72c0630054ca7c73</anchor>
      <arglist>(Popover &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ac7d502328d957816dedf0fabd4a5a3da</anchor>
      <arglist>(const Popover &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Popover &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a20ac933b9e31e9f6fbaa987eb2fb2351</anchor>
      <arglist>(const Popover &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a8c8d1e6b32d8b0627a680ce2d3fb9bc5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPopover *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>abf7d0bfec17b0bf71742703fa482e6e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPopover *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a6ab3aed0f77226598196076ab145a6a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a1f986a5819a7708290e4cfb0eddc9042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ac9d5936f8ca62d0d18cfeb194fdddf12</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a8ead519d9ba66c3ee2094806c4ee720d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ad0126e53eb39a138bfccae661273ea50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a3ebb83ea93100533450b3820e36bc9fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pointing_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>acb37108108779298bd941eeabbbd6c10</anchor>
      <arglist>(const Gdk::Rectangle &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_pointing_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>af54873dffa581ba23bd97fd0df253ff7</anchor>
      <arglist>(Gdk::Rectangle &amp;rect) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_position</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ae01e8c24f9b4c7c5dcf03f0d0c34f0f3</anchor>
      <arglist>(PositionType position=PositionType::TOP)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a17097ae5438d0c14acf42621ffe26c53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_autohide</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>abbea98fd46f58ab51297748933a5e32b</anchor>
      <arglist>(bool autohide=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_autohide</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ab62e710a28e7188d4ceb96a098509d62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_arrow</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4c771e85617f7fece41a6f0112b9bbab</anchor>
      <arglist>(bool has_arrow=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_arrow</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>afe183bdd99ea9792cb60822814584328</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a7697bab1cf38f8275470a50183fe2bab</anchor>
      <arglist>(bool mnemonics_visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a5fe36c5d62c7bdc60ed647b76a993c5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>afe870414fb09b9d7c0394b9e3f1f5350</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popdown</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>af9b2fa74913791beee00bcae6ba01fa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_offset</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a1b1e08d4d7e42f48a405fcd8b3324664</anchor>
      <arglist>(int x_offset, int y_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_offset</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ab1ea64b1cf94ad567c60524c4d9fc2ba</anchor>
      <arglist>(int &amp;x_offset, int &amp;y_offset) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cascade_popdown</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4c19e1b4719cd624493ec0aeb850ba1a</anchor>
      <arglist>(bool cascade_popdown=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cascade_popdown</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a5df9b0b658a1bf41d5feea95f0bdac32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_widget</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a54f75f8a5ddfed0c4acd2ff477e8155f</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>present</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a03ffae6af8ba1370dc9f604453d9640e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Rectangle &gt;</type>
      <name>property_pointing_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>acbae7c971ca5cd827d7dde7514d9e102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Rectangle &gt;</type>
      <name>property_pointing_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ae5188103bb3f08bc0deb844381919559</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4e4b8060e0977073f1ea3eb0809794b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>af483a9aa1d4010e92e4b66465ea42cfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_autohide</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4c3f492002f939dd5281b6e0143ff896</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_autohide</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>acdff109d5caf9f1ef799f4b783c920a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_arrow</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a2f71a6dc827c7fb225c8b3780065b61d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_arrow</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ad396cb4e6e202b3c3c4da843eea25b5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_default_widget</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>abd03af2963cfbcdb1bf0badeca8c7170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_default_widget</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a3a6a7ae66856d199b27c66e148ae7180</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a57d081c2731d2f82187eb5ac8aa923db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>afe2178b98b2e3dc7a07ca9a432e0d9c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ab4bfa2a9fd00b800b5e9ea9620fefd4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ab6f246d2dde4cc5b72e3efe7d889d80d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_cascade_popdown</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ab3b8ff01d0c014df1c5ccfa711581eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_cascade_popdown</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a8a89b112086972e6f7d5ed09efd70bad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_closed</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a46defac7a5a796e1c41a19b0c022c7cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a24cf0abc37f2c558c2c0144497d827d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_closed</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>aa10105916b901c7314746217429e7a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Popover *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4c95251e5cca965825ba231fd813ecde</anchor>
      <arglist>(GtkPopover *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PopoverMenu</name>
    <filename>classGtk_1_1PopoverMenu.html</filename>
    <base>Gtk::Popover</base>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad58ce7e8f69cfe0805c467851e5716f9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad58ce7e8f69cfe0805c467851e5716f9a7398e1727dc7944c94c699b50b30ab10">NESTED</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>PopoverMenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>ae329591277d198a8dbc3e41021737113</anchor>
      <arglist>(PopoverMenu &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>aeb5991c6fe9954935d9e7dbe97160fc9</anchor>
      <arglist>(PopoverMenu &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PopoverMenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a52fb6a2daf8ed51c48bf806e8167c70d</anchor>
      <arglist>(const PopoverMenu &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>abfb360dd1ee701b1b2e6349e8110e6e4</anchor>
      <arglist>(const PopoverMenu &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PopoverMenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a02a62389fe0c125b29c35cec64b5185f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPopoverMenu *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a2b7128022c0ed23818c40bf1fc248987</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPopoverMenu *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>ad0a1fbe0974dda3cbb407891ce89da7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PopoverMenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a346cefb9234f923307d076052b3111f2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model={}, Flags flags=static_cast&lt; Flags &gt;(0))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a59fd7ceb95617fdc035910912cec3318</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a9e589a05d33c1c0f8a2302dcffbd7333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>afc6b2b1981118640c50c43a9937f7e5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_child</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a0da614de01f723badfaa112e71f5cc1c</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_child</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a11ecdc7d3dc6e42c6ef50fe5e66c0be1</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_visible_submenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a5a607c5d0166b67180bfee73b8475624</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_visible_submenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>afc32b442a786f8ff893f8355b421c52b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>ae69a232735deb200f0fa96ce2c3b0b27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a94815843835078a400bc7956306936f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a1b93f509337ae2e0e361c381c8dc6a53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PopoverMenu *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a8fda9aa99e4b5c3337c7c7cacd116c52</anchor>
      <arglist>(GtkPopoverMenu *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PopoverMenuBar</name>
    <filename>classGtk_1_1PopoverMenuBar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>PopoverMenuBar</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>ad89589a5e26ad54aa155bc3a070cecb9</anchor>
      <arglist>(PopoverMenuBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenuBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>a2f9a34ad80943bbba0176036ad328db4</anchor>
      <arglist>(PopoverMenuBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PopoverMenuBar</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>a9a0c46a003f8f4085f38ad012c0d0609</anchor>
      <arglist>(const PopoverMenuBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenuBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>aa143f8d4ed15a7bc3dca9ba5a76f7e2a</anchor>
      <arglist>(const PopoverMenuBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PopoverMenuBar</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>a900af900aa5c8fd97aedc746e9940944</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPopoverMenuBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>a19371e742f1280d65b5910f1e15ce4f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPopoverMenuBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>a72e7b15f6d41c69147dde89d5d9c060a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PopoverMenuBar</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>a65a98d4c5658a431f58bae53e619f21d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;menu_model={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>a58b0329c91bb45511a62e1f421fbabdf</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>a4b682c89ae73a709ef989ab0eac92891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>ae1db7904945f075836f73ceadd95cf0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_child</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>afa710902bbb9536696f70b7381e84a98</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_child</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>ab6c554e92952ce10fb144a054b20517f</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>aa67307bf4055c34634f6998a3c37c6c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menu_model</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>af449eea21e34bc83b505a880f45b28d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>aceb6e97b4417bf9fb803a06366d3a2b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PopoverMenuBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PopoverMenuBar.html</anchorfile>
      <anchor>ad10f075734a5ddff1219ee752beb5fc7</anchor>
      <arglist>(GtkPopoverMenuBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintContext</name>
    <filename>classGtk_1_1PrintContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PrintContext</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a7ab936adbaec0942883f0031e711c369</anchor>
      <arglist>(PrintContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>ab42ce21651900c1edf716e4015b0429c</anchor>
      <arglist>(PrintContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintContext</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>ae24e578106dcd4fdc7bb30f15c94a9c7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a50ba7aa69ddcffc8fc3a904bef55db6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a73e7ed6f515d16b15197e1710ad3f77a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a104ed69ec09e0d9d55f9eb2a64ef9988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; Cairo::Context &gt;</type>
      <name>get_cairo_context</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>accb2dd83630559bd6691a8c2ee33ce39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; const Cairo::Context &gt;</type>
      <name>get_cairo_context</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a4cc25666642657824f6740c5d6e4a77e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a19498ed2d837eef0fef04a6ba1bce064</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>aec1a9dcee64e8626079cee361bf784d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a340f02bcd89e68d7eb2e0cbab92e6237</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_height</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a23b917d3d4c9f58250079e2665b96a64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_dpi_x</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>af0eb708073412b556d0d8157ed2b6cef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_dpi_y</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a83a961b99ebe23301f355795dafe07ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hard_margins</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>afbd2b1a483810dfe1e205957381ad703</anchor>
      <arglist>(double &amp;top, double &amp;bottom, double &amp;left, double &amp;right) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontMap &gt;</type>
      <name>get_pango_fontmap</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a4d234d7eac19641278bd0b7016423e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontMap &gt;</type>
      <name>get_pango_fontmap</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>ab05eb525d5065df2867384894141a1c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Context &gt;</type>
      <name>create_pango_context</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a7145573ba9c5eb52d07530baab3e1330</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>create_pango_layout</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a461a01fd0f5477ec9161037e82a1cde4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cairo_context</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a4cb25dfa48c8a7242baf01b951319186</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double dpi_x, double dpi_y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>aa572c0e2937ab164db1b87b0b67fd8b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a913efa53e99f5579db2ea43edc1d9279</anchor>
      <arglist>(GtkPrintContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Printer</name>
    <filename>classGtk_1_1Printer.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Printer</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a83b29d4e892be02a4c18ced3b6d81d78</anchor>
      <arglist>(Printer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Printer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a5f53d1863d824770eb97af24d0e31532</anchor>
      <arglist>(Printer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Printer</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a32d887aa4d58b114a3c7f206439fd987</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrinter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a2a5ac333f9d8c1ddd32ae7acfcc20a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrinter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ad4e337d30e34547abd5cb9d7243199f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkPrinter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>adcd574dcd0dd93e3af8d564b03b5b52d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>abc140646db3054d49cfe33553d2603e8</anchor>
      <arglist>(const Glib::RefPtr&lt; Printer &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a1a8ed1922216205fa4cd40c411173fae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_state_message</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a21efc4790a11dae23a99ed9d184cf602</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a3a569a08cfc7f21c4901767b0498e487</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_location</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a3351167783e9b7f445e3fef52372c5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a771874d3b63a79327822c9223870df30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_job_count</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a9af3ad2a82c61b2ce95f411e2ca31676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a9ff7bdb63b8fb75c1f51546a5cadfb98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_paused</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a69178ac60cabc89fb2b5f7841d6ec8ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_accepting_jobs</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ab4c7e7b4f42fb3acfd0b383f9027ca5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_virtual</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a38900b83bcd02ae0940d3169c398363b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_default</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ad51c1208299f697184f035d1af72a2c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>accepts_pdf</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a25bd4812f4e667f57211457e3b684dd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>accepts_ps</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a98d90c84f1f99d6de5ea1bf5f9276a92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>list_papers</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>aec26730b9a6c59fcae88566c36c54d97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_default_page_size</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ac3adc0ea6d40831f3462292488a94404</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const PageSetup &gt; &gt;</type>
      <name>list_papers</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ac3b1b1bf50d60656fe0015e94f8823de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_details</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a0d8874f737b8914323e89054d4ea956e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_details</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a995c814fb4dcb345a84b29bb81e1bdd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>get_capabilities</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>adc72087906f9bb3e8486c534949b8eb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hard_margins</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ab5927a70d9d6a4bcd13882eb7fb0f0fb</anchor>
      <arglist>(double &amp;top, double &amp;bottom, double &amp;left, double &amp;right) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hard_margins</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a40e27662f7e9bfa8293144bce40b32f3</anchor>
      <arglist>(const PaperSize &amp;paper_size, double &amp;top, double &amp;bottom, double &amp;left, double &amp;right) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(bool)&gt;</type>
      <name>signal_details_acquired</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ab1d9b9ab85ec713af2cca04c81d15b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a19b4e706deb3912363b0c45912d79695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_virtual</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a90c7097055b448b3dbb8eb58222c2bfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_state_message</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a9124a2526bd087cdd79caca903919f35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_location</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a42ceca866d754d47ff10785db60a55c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a16a0b8ca6630be9bfc5aaa0ead0fe13b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_job_count</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a122db673d073e755c8a25574182ceb91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accepts_pdf</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a266b37d106e3deb77d83f9dc862ef9fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accepts_ps</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a6a576558a1cdb1b48c9e452a509296d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_paused</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ac33b32d5ef0fe0fa8b479413848bda3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accepting_jobs</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>acdd4940d9474aa9de29ad0b2bbe3b3a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>add7dc0f6cc9953c015ef5e3bdc23c793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const Glib::RefPtr&lt; Printer &gt; &amp;)&gt;</type>
      <name>SlotPrinterEnumerator</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a1d08fcb4d9f94d39158d152fa4bf19bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>af2c0b05a37f73118b72fe603e5b97cbd</anchor>
      <arglist>(const Glib::RefPtr&lt; Printer &gt; &amp;lhs, const Glib::RefPtr&lt; Printer &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>acc09fd460d0737fc77f7a35e8d972af0</anchor>
      <arglist>(const Glib::RefPtr&lt; Printer &gt; &amp;lhs, const Glib::RefPtr&lt; Printer &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enumerate_printers</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a0cd158313b69aed1879759aaf08e9150</anchor>
      <arglist>(const SlotPrinterEnumerator &amp;slot, bool wait=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Printer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a5b036651133f38d4ca86821630089103</anchor>
      <arglist>(GtkPrinter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintError</name>
    <filename>classGtk_1_1PrintError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENERAL</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1ac84d0d6c73628c9211a190b4dc224485</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERNAL_ERROR</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1aff507f58926aa74a3f17f6ef4c356350</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOMEM</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1a842c69d72b90ad5b90eebd1419b96023</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_FILE</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1a9775228070cb0ef32e8654c1043b13b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENERAL</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1ac84d0d6c73628c9211a190b4dc224485</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERNAL_ERROR</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1aff507f58926aa74a3f17f6ef4c356350</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOMEM</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1a842c69d72b90ad5b90eebd1419b96023</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_FILE</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1a9775228070cb0ef32e8654c1043b13b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintError</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>a6b2f4a2946166fee286215ae5e57bda3</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintError</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ac8d6980193b2c991de0b1a0265bfbba3</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>a4729995b010ab2d10b84c7ac4dd5f855</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintJob</name>
    <filename>classGtk_1_1PrintJob.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const Glib::RefPtr&lt; PrintJob &gt; &amp;)&gt;</type>
      <name>SlotPrintJobComplete</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a76787bddf905351086972da7ac94b76a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintJob</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a70728fd29b132f4768769dd23bddbf44</anchor>
      <arglist>(PrintJob &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintJob &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a7b06909674201396d4d10c1bfd984457</anchor>
      <arglist>(PrintJob &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintJob</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a3f474eeb08da198ce6a0cd4f491b8f4d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintJob *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a2d1491f23726229671b14abd7ecb4631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintJob *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>aace6003816b55e3b3bebf2f6902960be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintJob *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>abb89a7a5c24c1468bf30efb89cb45824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a748eb391baadff5736dd1c743efbab29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PrintSettings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a2cb1cd8eefa080d4e8133c2a449e86b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Printer &gt;</type>
      <name>get_printer</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a70f274de89f207f8983e2550c1c3dd26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Printer &gt;</type>
      <name>get_printer</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ac89dd0502ae61d59cfb959e39bb1a513</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a80562148304fd7f5bb7ffad29d0ab122</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PrintStatus</type>
      <name>get_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>abd1a3bce6776f7dabab9c9e2f6e683d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_source_file</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>acbad0bc9a07aee1543bb03f89e8cf108</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; Cairo::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a3a665f440120da3261783f2039c0fd12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; const Cairo::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>aaad4b3c4432506ca77e9d178f71d6d05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_track_print_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a64a70424f252a36e427908d9d16d8e00</anchor>
      <arglist>(bool track_status=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_track_print_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a93fbaaaf514808060a6673def0c02c9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>abea5e39747f71fe47c19b2fdd1126d7e</anchor>
      <arglist>(const SlotPrintJobComplete &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>PrintPages</type>
      <name>get_pages</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a2889c8213a7ca7f3bf307f655840d5a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pages</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ac5b58c59ff599b20566c324146ae5781</anchor>
      <arglist>(PrintPages pages)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; PageRange &gt;</type>
      <name>get_page_ranges</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a7bc0e025017289eac87900e54c866a4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_ranges</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a5483405ac926678726bb1b39277cb93d</anchor>
      <arglist>(const std::vector&lt; PageRange &gt; &amp;ranges)</arglist>
    </member>
    <member kind="function">
      <type>PageSet</type>
      <name>get_page_set</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>af5908ebca90aa3209cc82dc620f49d0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_set</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a1364f8f44e5e5f25d9f4e5467577d39f</anchor>
      <arglist>(PageSet page_set)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_num_copies</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a38656b24a1df90c4c48551ac4afc1a77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_num_copies</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a670b6c611f742b6d9f8775f3cd6479e0</anchor>
      <arglist>(int num_copies)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_scale</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a42e086a9a76488517dcf599cdb521892</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scale</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a29cd11b0dc3628cfa087ee9a422fcb94</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_up</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a32afd51cfb5af24141303647b6923d45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_n_up</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a59d6634cc486fa84ba07e18c2d94a3d8</anchor>
      <arglist>(guint n_up)</arglist>
    </member>
    <member kind="function">
      <type>NumberUpLayout</type>
      <name>get_n_up_layout</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>aa454b51f84753d5d435a43c15539d619</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_n_up_layout</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a839d83ad8b8be371784821ac4a5052ed</anchor>
      <arglist>(NumberUpLayout layout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_rotate</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a86b0534fc4ed19dc88783adf89fe553b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rotate</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a25cdc322acd43169e2112244428f71fc</anchor>
      <arglist>(bool rotate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_collate</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a6e929cc496e6cbac450a7cf1a21f7da1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_collate</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a86835dd53126cb82ccb31d9ed7ddda0c</anchor>
      <arglist>(bool collate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reverse</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>afb4b0eb8edc37680dde98145d4a94bed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reverse</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a66dc3b2d24a60dc6cdaffc2117e4dc1a</anchor>
      <arglist>(bool reverse=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_status_changed</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a67902a1f584fd659e205684f00ad0a14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a7f5013af37cbe2c42f90a870307e2075</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Printer &gt; &gt;</type>
      <name>property_printer</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>aadf8bac5d338d48da1111107481fbc1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_settings</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ad82c26fdd48843e3d71cab57b9f699f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_page_setup</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ac9b54bc4e7bd3a5ffcffe0cc5655cad7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_track_print_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>aec4b44530c26f3fbb2dabc3811126733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_track_print_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a4be201fd17d60c77d58e5936a02a5f48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a0d8ab613e689743bb5b79b6459b77842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintJob &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>adce1562d1e27158f6ac4968a66756320</anchor>
      <arglist>(const Glib::ustring &amp;title, const Glib::RefPtr&lt; Printer &gt; &amp;printer, const Glib::RefPtr&lt; PrintSettings &gt; &amp;settings, const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrintJob</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a872d57a98e2720d854276b1733ab7737</anchor>
      <arglist>(const Glib::ustring &amp;title, const Glib::RefPtr&lt; Printer &gt; &amp;printer, const Glib::RefPtr&lt; PrintSettings &gt; &amp;settings, const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintJob &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ac3833c5b958fb443c198f1d1dfc9ff81</anchor>
      <arglist>(GtkPrintJob *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintOperation</name>
    <filename>classGtk_1_1PrintOperation.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::PrintOperationPreview</base>
    <member kind="enumeration">
      <type></type>
      <name>Result</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4aedb78e0b9fa987ddce905b1fb4cb4e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4aedb78e0b9fa987ddce905b1fb4cb4eabb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4aedb78e0b9fa987ddce905b1fb4cb4ea2919bace3a09a7700313ddaa94bfada9">APPLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4aedb78e0b9fa987ddce905b1fb4cb4ea2027c027133e22c8929e2874dc44dd36">CANCEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4aedb78e0b9fa987ddce905b1fb4cb4eaca69f96c768067fbff6c911ca87bccc9">IN_PROGRESS</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Action</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga08b82aa3839b05d5e73e8bc8bea530ee</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga08b82aa3839b05d5e73e8bc8bea530eea263adae4b3f637c0bede71c59448cb29">PRINT_DIALOG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga08b82aa3839b05d5e73e8bc8bea530eeaf96eee4e48ee90430f17fb3a8388507b">PRINT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga08b82aa3839b05d5e73e8bc8bea530eea16146de8c60e5b0d74bf6d2a78d4f576">PREVIEW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga08b82aa3839b05d5e73e8bc8bea530eea0ceefc7f4aa071a30dd85c5b5bd14852">EXPORT</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintOperation</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a919efcc793c545f3b9ce7cd901053fda</anchor>
      <arglist>(PrintOperation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintOperation &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ae676232c1757ee9af1f414f3b3decdcc</anchor>
      <arglist>(PrintOperation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintOperation</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aaf20224f9d652f8bbfdc492757ecfff8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintOperation *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a0da600d77117bc22196a7279b156cf2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintOperation *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aedbb7080ea4bb5b77a56b4ebbd6d2457</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintOperation *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a206a6bdc2139611a54d093a4a0b12d40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a7bea50c6ee58751f07e79959bc545326</anchor>
      <arglist>(const Glib::RefPtr&lt; PageSetup &gt; &amp;default_page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a628dcd32c90905ebe15f5e7b00366adc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PageSetup &gt;</type>
      <name>get_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af5f49db82a03a78a9d4465b511c6abe6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa2b7cbeb184ab391ed10030cae56d290</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintSettings &gt; &amp;print_settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>get_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a3abca24b1ab551710c459d8afc48b91a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PrintSettings &gt;</type>
      <name>get_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a3d51be67b7570d4c5207c0f32bb590bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_job_name</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a2f823341ee850fdc82b83b789186027d</anchor>
      <arglist>(const Glib::ustring &amp;job_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_n_pages</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a41a215eff186075f793c29fd01d90502</anchor>
      <arglist>(int n_pages)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a6228a5dd3bed61a002185ccee6586705</anchor>
      <arglist>(int current_page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_full_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aecdd549da90856825d09f7ca9c23de40</anchor>
      <arglist>(bool use_full_page=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unit</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a327bf7816fde596e01080b059edf8e1c</anchor>
      <arglist>(Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_export_filename</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af6a3811929339ccbbe0e0b4f7172c2c7</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_track_print_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a0db78c570875001ae7752638a592f793</anchor>
      <arglist>(bool track_status=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_progress</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa9d267e6df375d17ed069eb62bb23e34</anchor>
      <arglist>(bool show_progress=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allow_async</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af4701d900a36b8ecedbb25605c1a355b</anchor>
      <arglist>(bool allow_async=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_custom_tab_label</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a36f4f4fd7ec8a3b2a2d40c7431ab99e3</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>run</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa10ecdf5a88e3f64afcfbe30a929f5e2</anchor>
      <arglist>(Action action=Action::PRINT_DIALOG)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>run</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a89875e836287d2b6b0bf5b1d63a670e7</anchor>
      <arglist>(Action action, Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>PrintStatus</type>
      <name>get_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab247ba0766174df739259342349aac27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_status_string</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>afdee72815f12b0a4e38f3b041ba912ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aeabeb6ce5235bcd152dd0803565cf9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_finished</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab03421933dacb2bacbb01170b080ce89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_page_finish</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a5d4cdc767c49064f1b58474b49206af7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_defer_drawing</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a41fd8d12cb747831e0c98208cd0f0e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_support_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>adfc86200f56ca59e6a28f31c508de2fe</anchor>
      <arglist>(bool support_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_support_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a024d67b16381b16fac4419707b5b0d08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a7149409106097f0f83a361bceeb2f441</anchor>
      <arglist>(bool has_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aded9cb2de0defc8e2fc6a54512cf548c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af7dc2111167970dda8b03e8a61b53205</anchor>
      <arglist>(bool embed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aab1ecb9f7ef007775937ca9852cb9179</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_pages_to_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a4e833b5373eba53508ad8d0889569d78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Result)&gt;</type>
      <name>signal_done</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a530fc17c708a9ddfdf175a28493855c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; PrintContext &gt; &amp;)&gt;</type>
      <name>signal_begin_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aea9352048970cdeacae0fc4bfffd8792</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; PrintContext &gt; &amp;)&gt;</type>
      <name>signal_paginate</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a79c9527fbbf45d44c3ab73b74c73edd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; PrintContext &gt; &amp;, int, const Glib::RefPtr&lt; PageSetup &gt; &amp;)&gt;</type>
      <name>signal_request_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>afb1b91ab1a2a4d6f9fd1a51c22ffe5a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; PrintContext &gt; &amp;, int)&gt;</type>
      <name>signal_draw_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ac9bfd7bd2792a8c8e9a1d1ea0de8e98f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; PrintContext &gt; &amp;)&gt;</type>
      <name>signal_end_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa67095afd3e31152e9b60f87ceb2c576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_status_changed</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a7b35a58d124b677207b64e2bef84e5a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Widget *()&gt;</type>
      <name>signal_create_custom_widget</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a9110c0e49185439d784608cf37c68d86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Widget *)&gt;</type>
      <name>signal_custom_widget_apply</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a46904e9a3f4aa126c439a04714cfff4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const Glib::RefPtr&lt; PrintOperationPreview &gt; &amp;, const Glib::RefPtr&lt; PrintContext &gt; &amp;, Window *)&gt;</type>
      <name>signal_preview</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a72cf2fe5aacb54ba6afe2be4da219b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Widget *, const Glib::RefPtr&lt; PageSetup &gt; &amp;, const Glib::RefPtr&lt; PrintSettings &gt; &amp;)&gt;</type>
      <name>signal_update_custom_widget</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a4a59ac9ac275136a16a6e37e4d39ddc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a9a4fe390faf76ac21a636b7cb2f88cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a49dceb47811cc31b6806b45bbab9c7ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aea08eb3cda07c207431c07a3d0d81978</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a134f13a3574996d8f47d72ad506ead50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_job_name</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a799559f1ac771946cf423119bf8e4628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_job_name</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>acce432a9b144d29f021f83b098fbfdf4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_n_pages</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa4e7a7b187ac145f9ecde3bacc27b310</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_n_pages</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a8e41e38d0ca83574e24d82f42a4408fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_current_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a043038b8bdc3ef813677ad1f14391f00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_current_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a1d8a5f2239a4bed1ec8f862cf943bd78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_full_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a5692f583cef2657c0ffbed0bf5ee310a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_full_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab10b024dc7b9674c475244509fd57529</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_track_print_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a207a7786a03bad3df29b96caa16ff5c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_track_print_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a687d3c9686dfb423f558a17dd691e17d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Unit &gt;</type>
      <name>property_unit</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a1c3a04ec6e75b681d672b1dd82b00f3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Unit &gt;</type>
      <name>property_unit</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>acdd4907a952343585fbee8fed2abb5e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_progress</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a12da3cc7d2cf6ad4feb15c5f3ad29e49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_progress</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a4f3b36c678ff8e769fbe5fbcc71116f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_allow_async</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a98881dd3487baad33a14d3765adf9821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_allow_async</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>abe813fb7c1cc8567c9811c260afc3659</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::string &gt;</type>
      <name>property_export_filename</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a43b28eb8f580cce5cd5c0a50c7e26e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::string &gt;</type>
      <name>property_export_filename</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ad3b435097c85b8a8ec19dd5510f289a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PrintStatus &gt;</type>
      <name>property_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a1557c56e784ed9546278e762f08915db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_status_string</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a52cf37c5793d04d96b29a629ecc15dac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_custom_tab_label</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a8333b2700926f8ab56447df195d68292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_custom_tab_label</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ac81afea010eed6e8bbce090f8491a655</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_support_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab2e14ff7ce2921ba1a56581fe9687863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_support_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ac503d62c4b6924bc09fd2486fba0507d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ae1b14f53d924ea6ea1d709692ba019ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a26620f09c751177dc70679e3220cc883</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aaba28c148ffc156c35dd648c683d6748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a665c77800d98746c302b43f12f8e13bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_n_pages_to_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a6f6a9839e30c253b0abbaa22ca76cc6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a64912c8b3f2611e78f3711cb10c5164b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintOperation &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a278086dd5fdc1447cf5e1e075e74a840</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrintOperation</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a10380ef757e632edc581133c47306da8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_done</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a2e1639590ddb1065033c7432f9d00f11</anchor>
      <arglist>(Result result)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_begin_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a49bbd3784381405c04375795dcaa9af0</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_paginate</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab86b3f8e5743417bb4902e69184f344b</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_request_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a456730bd9ac267fa334dd44f8a4a6600</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context, int page_no, const Glib::RefPtr&lt; PageSetup &gt; &amp;setup)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_draw_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a64bb3aa5adfe371c88d46f40dcf50fc9</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context, int page_nr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_end_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa0bfa6c5c6a031a4a9e5c2df95ad3dd9</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_status_changed</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ad609e661f2a3ad9172cb2145a5b5ab2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Widget *</type>
      <name>on_create_custom_widget</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a37aeb96be1f27f57acd5d0075fe02b02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_custom_widget_apply</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a35ea1d661f300aa9393d319a762863f2</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_preview</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a0feb9b18f7f9af368f623db71bb3abb3</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintOperationPreview &gt; &amp;preview, const Glib::RefPtr&lt; PrintContext &gt; &amp;context, Window *parent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_update_custom_widget</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a9da06cd96c3838c9c8e10a780e7b0285</anchor>
      <arglist>(Widget *widget, const Glib::RefPtr&lt; PageSetup &gt; &amp;setup, const Glib::RefPtr&lt; PrintSettings &gt; &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintOperation &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a647084f004a8d55d6f0408474871174e</anchor>
      <arglist>(GtkPrintOperation *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintOperationPreview</name>
    <filename>classGtk_1_1PrintOperationPreview.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>PrintOperationPreview</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a149e226385ea1220cefd46f036b6a49e</anchor>
      <arglist>(PrintOperationPreview &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintOperationPreview &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a5169e48824296f83cac1564c262c48dd</anchor>
      <arglist>(PrintOperationPreview &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintOperationPreview</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>af123ba680fcff6a169df284c5c20b95d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintOperationPreview *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a718fce7a470e753f837c2ae2ab287c9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintOperationPreview *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>aa94512bc8a520c6df8029e257ba5af26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_page</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a3dac5816cb7daa785e27870ad88d7185</anchor>
      <arglist>(int page_nr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_preview</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a163fd8c9eaa30288b8556e041dddcbdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>aecda62d2e63c941985eaa08d66c25f5b</anchor>
      <arglist>(int page_nr) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; PrintContext &gt; &amp;)&gt;</type>
      <name>signal_ready</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a2e5ef9bd2dcde28449a8ef131c62f979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; PrintContext &gt; &amp;, const Glib::RefPtr&lt; PageSetup &gt; &amp;)&gt;</type>
      <name>signal_got_page_size</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a6e3004df6786cfcc6a934cd13e353ffe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a8c978ce2952255ade981fbcf89364cdd</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a527668e99a3444b8c89b1324b26815ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrintOperationPreview</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>ad033fa4191b81bb742df91fb9766b686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render_page_vfunc</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>abe9e9698a22db6f589a996713d4b7db2</anchor>
      <arglist>(int page_nr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>end_preview_vfunc</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a900f7ea8384a538585a269e0689e4a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_selected_vfunc</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a3378aeaf4aa20a4caa301f060af5e922</anchor>
      <arglist>(int page_nr) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_ready</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a48e79ea95c740f11194fb62436b72881</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_got_page_size</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>ac654e9acc7f1e27eb65193276df3ec5c</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context, const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintOperationPreview &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a89c6a4a8578fd3eb2f3ef3903ea5dfa2</anchor>
      <arglist>(GtkPrintOperationPreview *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintSettings</name>
    <filename>classGtk_1_1PrintSettings.html</filename>
    <base>Glib::Object</base>
    <class kind="class">Gtk::PrintSettings::Keys</class>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const Glib::ustring &amp;, const Glib::ustring &amp;)&gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ae9b33c92c98815f94c7be6884a9673ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintSettings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa1e9113e5ed931f6a6d6dfd623c63ebc</anchor>
      <arglist>(PrintSettings &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintSettings &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a012e640628989e0ce5d0d0e2cf047621</anchor>
      <arglist>(PrintSettings &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintSettings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a8659425ec5300803bc01420a5b2d75ca</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintSettings *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a766dd9fbb60d56eed35e9fdc2a8cf519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintSettings *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac9e9a7d957070120bbe2046d5259362d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintSettings *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a607c619af7aa38332dd3521b605d30ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>copy</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>adae36060a8a548d3b17093bd3cf1ed0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa6755f714b483b7d13b2c214d9b77c4d</anchor>
      <arglist>(const std::string &amp;file_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a0e2a5301ca23d8e3d1f4eaa2638053e9</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a12f08b05334cffcee38cdc917530d6c9</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_to_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a7b664baf2edcecf9ba79a3ccacfa1563</anchor>
      <arglist>(const std::string &amp;file_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a781804d0c0f9b4e727397601efc3e76a</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::KeyFile &gt; &amp;key_file, const Glib::ustring &amp;group_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ad312feefe44b1ff9fab133264b7320f7</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::KeyFile &gt; &amp;key_file) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_key</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9b3cf21d5aab8b24d5256d1bb4e61aee</anchor>
      <arglist>(const Glib::ustring &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ae37909e3c12dda9923dfc3cb59722db4</anchor>
      <arglist>(const Glib::ustring &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aae5bd5cc0c634f2d4b85c74b5d9b24d7</anchor>
      <arglist>(const Glib::ustring &amp;key, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a787c9f1ad2a6163d9892cf5d40ab371b</anchor>
      <arglist>(const Glib::ustring &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setting_foreach</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4e72863f59c25a15a3ad98dcb4629cec</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_bool</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a3131a01d83ec81d0f472ab205761f8c1</anchor>
      <arglist>(const Glib::ustring &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bool</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>afcc5b6ed73334362f4a69036da6cd9e3</anchor>
      <arglist>(const Glib::ustring &amp;key, bool value=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_double</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ab991dfb9b45269d485a3d179df9cab36</anchor>
      <arglist>(const Glib::ustring &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_double_with_default</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a8ca5d4d5b9f970d27be6c63dcd733dca</anchor>
      <arglist>(const Glib::ustring &amp;key, double def) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_double</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>adeca28a23d3281b2f097b404166c7418</anchor>
      <arglist>(const Glib::ustring &amp;key, double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_length</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4c2a8d05763afde7546f4eef0b322440</anchor>
      <arglist>(const Glib::ustring &amp;key, Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_length</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a6b74c2d0132156be768aa52c19917cc4</anchor>
      <arglist>(const Glib::ustring &amp;key, double value, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>adb33b60122842dec5a319bc338e108b0</anchor>
      <arglist>(const Glib::ustring &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int_with_default</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a373c80fd25e52af2087d9175fc0b9256</anchor>
      <arglist>(const Glib::ustring &amp;key, int def) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_int</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac43cec16132ae384d2934c9082085af7</anchor>
      <arglist>(const Glib::ustring &amp;key, int value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_printer</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a78b6bcf39f4ef11d9b9d3b5752aad163</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_printer</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a6a159239737dbe69b76c5255bb7b4118</anchor>
      <arglist>(const Glib::ustring &amp;printer)</arglist>
    </member>
    <member kind="function">
      <type>PageOrientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9985e52dfcc0007549a5b63cd88aae11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ae95e6f4b0953ed50e011b8592c454245</anchor>
      <arglist>(PageOrientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>PaperSize</type>
      <name>get_paper_size</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9360f7a816b58a0b6cf278e4e5d1dd7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PaperSize</type>
      <name>get_paper_size</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a0c42d52897891ddb2c166daa104f9de5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_size</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac7cd04abafe46bde90930a23338db3e7</anchor>
      <arglist>(const PaperSize &amp;paper_size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_paper_width</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>adee84056ff4128c22edea6d556cd0cfc</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_width</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a60d82778f635cf3ec10479718fe6aa93</anchor>
      <arglist>(double width, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_paper_height</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa5a7e6d4e9a767cf3a97159ca17d8bff</anchor>
      <arglist>(Unit unit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_height</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a617d9e76443850588e8c23221b7149ac</anchor>
      <arglist>(double height, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_color</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a873552acaa0dc24b4fcd31c27d9f1664</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_color</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a2688f2bf741263a05b6110cf8959e42a</anchor>
      <arglist>(bool use_color=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_collate</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>af21701b24084c4a21b0d00c9ed49113e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_collate</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a42ee5a6a3251d4b092c194732eee2ea0</anchor>
      <arglist>(bool collate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reverse</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9c5d8b6c377a13f0760595eabf447c4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reverse</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a194951700c82a3520ec9365f08977c38</anchor>
      <arglist>(bool reverse=true)</arglist>
    </member>
    <member kind="function">
      <type>PrintDuplex</type>
      <name>get_duplex</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9460ac9c3581493e1b239ea9d8c083ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_duplex</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4c013dd0282b9461d62d34041fcb3d96</anchor>
      <arglist>(PrintDuplex duplex)</arglist>
    </member>
    <member kind="function">
      <type>PrintQuality</type>
      <name>get_quality</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aae6558407528bdf95f09d1b9e0ac18fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_quality</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ab1d275a378fd9dc2ecb2148134dbfb63</anchor>
      <arglist>(PrintQuality quality)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_copies</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a39217fb00b40f8431175a79840586b5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_n_copies</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac7512473a8ba42d4b332e3fa9eedde88</anchor>
      <arglist>(int num_copies)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_number_up</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9bce2a794a2b305bbafb85fe89a83dfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_number_up</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4bf9e5bec0e24f2eaab3e26b56403222</anchor>
      <arglist>(int number_up)</arglist>
    </member>
    <member kind="function">
      <type>NumberUpLayout</type>
      <name>get_number_up_layout</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9cb13196010c3ec7f36936a77fa90990</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_number_up</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa1e32315d2ad3047deb8e71912524f15</anchor>
      <arglist>(NumberUpLayout number_up_layout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_resolution</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>abbafce55dc0cbf0182d6cb77b62f2325</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resolution</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a96f73bbd21899c7887615f3c2d13dfaa</anchor>
      <arglist>(int resolution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_resolution_x</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a319e19ece19e1a47cd8ef6265ed6a4e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_resolution_y</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa72f05cdbdff5ebe6e94f019d2214f09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resolution_xy</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ab7ab3ed073fe4e71304737bb9987e19e</anchor>
      <arglist>(int resolution_x, int resolution_y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_printer_lpi</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a17308fae055f85ac64fc1ae6696e483f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_printer_lpi</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa9ae289b6ab79634582b46c41ad315e0</anchor>
      <arglist>(double lpi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_scale</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a3c8eba6172c6a6421c16a544751f466c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scale</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a673180f17410a986c2f3ac24641044ed</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>PrintPages</type>
      <name>get_print_pages</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a8e2af1b98080453dd8748ff11fcd0bde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_print_pages</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>adb546321c898c41c8aa7aa2e76a27c9d</anchor>
      <arglist>(PrintPages pages)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; PageRange &gt;</type>
      <name>get_page_ranges</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>af6a4cc7696b3984a3a714423f41fc810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_ranges</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9fd8aa13a0687925c58faf3b594a29f0</anchor>
      <arglist>(const std::vector&lt; PageRange &gt; &amp;page_ranges)</arglist>
    </member>
    <member kind="function">
      <type>PageSet</type>
      <name>get_page_set</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a07c956473196df099ca90c41deadc562</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_set</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>addaba6a327eee6b2b7e104c8f6aa4438</anchor>
      <arglist>(PageSet page_set)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_default_source</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa71149540eca83fb4ffd3e927ba0bbfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_source</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a6c437f90ae922f3865b80053dcd14634</anchor>
      <arglist>(const Glib::ustring &amp;default_source)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_media_type</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa677959bf964887782875dad18287e3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_media_type</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a3380f866e2183c82cb7b9c737c7968cf</anchor>
      <arglist>(const Glib::ustring &amp;media_type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_dither</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a15f325b23de77384faa795d7507ae6dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dither</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aae630dd22311bff2dec07df0ccabc687</anchor>
      <arglist>(const Glib::ustring &amp;dither)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_finishings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa15aeb9746d4ada5395309c627460207</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_finishings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a57823c89b11dbeaf7f9c44030c88582c</anchor>
      <arglist>(const Glib::ustring &amp;finishings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_output_bin</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>acecd90af76cec36fec4c78406a29b98d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_output_bin</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4217acc6b3be2d88e0c22f73ad7fe27c</anchor>
      <arglist>(const Glib::ustring &amp;output_bin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4ed6b8df0c6299274d933c16987480a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a11040215f807bf1daf52b22e53ada59e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>create_from_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4fecf9557ea26320dc769e317b16e08d</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>create_from_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a83bc3623b9797eb08f2c6aef7bfc3658</anchor>
      <arglist>(const Glib::RefPtr&lt; const Glib::KeyFile &gt; &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a60a47b099019b9d883388c022be0d438</anchor>
      <arglist>(const std::string &amp;file_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrintSettings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a73756625292f7e866ec90ed575f530e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintSettings &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a774374a459b75c38d4b86f2b6b03f914</anchor>
      <arglist>(GtkPrintSettings *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintSettings::Keys</name>
    <filename>classGtk_1_1PrintSettings_1_1Keys.html</filename>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PRINTER</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a85c9b5932806d97fa9661ca119ee87ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>ORIENTATION</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a5306b46e0ff0e33ba529d3f27faca60b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAPER_FORMAT</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a6ee604ef306131b902a27ae3773036bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAPER_WIDTH</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a50cdc710647867811c386d19e73fb735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAPER_HEIGHT</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a97b36b8dbdeed865cec7efff762c2824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>NUM_COPIES</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a24aa2b99a37352bee840076c5101b101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>DEFAULT_SOURCE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a6c28994a3a24b8fa3b606310eaafa065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>QUALITY</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>abda00fad81e6cddfc2b2804b7db76b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>RESOLUTION</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a8c65a2e69251bd673258df8b60feddc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>USE_COLOR</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ae00c21a6baa3bfcf83172cdeb2196354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>DUPLEX</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a48877bdf117a2120755249b4d6c6b035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>COLLATE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a9c0a1720011ff17522586b12f88f4149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>REVERSE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a8da8d47ac1d93764c89e77edfeb16078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>MEDIA_TYPE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a019f2d999feba85327cca3dea469f5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>DITHER</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a0378931e2aaeb205e9db098f45920374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>SCALE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ad594c30d34fdca82d34448f80cb6e19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PRINT_PAGES</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a4e36da4e23f1c0ceeaa0fc0eaf039224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAGE_RANGES</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a63afd8b02e9401b49cae2423da6d5827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAGE_SET</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a4daab0f18e6f3820af722e015aee9eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>FINISHINGS</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a1fdec4e8027d880ec6c83f2b7c4b90de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>NUMBER_UP</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a0f9a9c0c04f25795ce72a56e9c0476c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>NUMBER_UP_LAYOUT</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a5a817169a7c0e0521d5e0369d2be57f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>OUTPUT_BIN</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a898ffd08395dede53f983694fdc045fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>OUTPUT_FILE_FORMAT</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a3d231417edcce28a89adc54b179569e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>OUTPUT_URI</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ab1518e9da1540b6c6dc4897e2f1e5dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>WIN32_DRIVER_VERSION</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ab9e1278b35c7d232040bd736408aadf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>WIN32_DRIVER_EXTRA</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ae61b3fecdb4907a47247c47187584701</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintUnixDialog</name>
    <filename>classGtk_1_1PrintUnixDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ac1c5ea2d83ecdfb0d70544a1c406ecda</anchor>
      <arglist>(PrintUnixDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintUnixDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a526e549a528be073bec603250432ae03</anchor>
      <arglist>(PrintUnixDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a94fbcf8fdf588917e4acaf41ded5a705</anchor>
      <arglist>(const PrintUnixDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PrintUnixDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ad5da3db8f237b5f150e31b4e507f6578</anchor>
      <arglist>(const PrintUnixDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a12f818520c55e91b6164a6409c093af5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintUnixDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ae8d543407e309cd6e7e67cd0aa2f82b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintUnixDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a55d69c442642a62635687146d861bb49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>acc62334cf969975437cbe307d0ce1cdd</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>aa8efdf7580e4b7504d4c944e090fe2b6</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>accaeece085ddce6ac7921eda20c67d80</anchor>
      <arglist>(const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>afca868ff3ebcb4b2f7859660ee762e12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a45b1588393f7cdb1b82d1f6b42834fc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_page</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>af45f45a14bc6905f58dd96bee9436c91</anchor>
      <arglist>(int current_page)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_page</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a004bb7a299ad2eed065febe1173dc4c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a2ac1a73b1e48e810c4ebc946a4e2dbca</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintSettings &gt; &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a6bf4518e034887a06494cbed2c8624f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PrintSettings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a259c8af5d6bac85320684b9c7f032d26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Printer &gt;</type>
      <name>get_selected_printer</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a24801b20bbf270f3d2d2ee3fc12cc9eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Printer &gt;</type>
      <name>get_selected_printer</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a8a02284c8945fcd666056386a023db9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_custom_tab</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ae57463cf1f82fc1ac14d8d976d24c823</anchor>
      <arglist>(const Widget &amp;child, const Glib::ustring &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_custom_tab</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a248574fcfb34dab7148bb13efa9b6232</anchor>
      <arglist>(const Widget &amp;child, const Widget &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_manual_capabilities</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a75bf92d2e5c722e1d0eda310e22f29ae</anchor>
      <arglist>(PrintCapabilities capabilities)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>get_manual_capabilities</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a084f279a6a41a81889af720f8cf4c703</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_support_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ac2e3e6e8dcf7b6d7be88f5ad3f746117</anchor>
      <arglist>(bool support_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_support_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a7aa77d7bb8b5bb88179e14a00ee06395</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a289acd03bd9f320c2f72a056a1fc2a7a</anchor>
      <arglist>(bool has_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a534a015dec78a27c0c6bae501a581190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a77558993cb97b10470f8887a0e5e2333</anchor>
      <arglist>(bool embed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a0c7315aa4ecec03c20024e4fcb267971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_page_setup_set</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a061d1533e5cca5a08a51991fcfea9f0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>aee7203527e9e460d2ef6db08264c9615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>afcfbe42d87ffc17dc480477dfed34826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_current_page</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ac0d487e6a202e576054ae7f76903142c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_current_page</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a472d977cd4fcc4fc4cd79f64566a4991</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_print_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a3be9322ce01bd123d6b48f96e399e488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_print_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a22bbe041034a257b36763776c169386e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Printer &gt; &gt;</type>
      <name>property_selected_printer</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>abd5745ecda260698192402001dfc1918</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_manual_capabilities</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>acfde905496f4ba1fd6c533b6d7e4c68a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_manual_capabilities</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a62fdbffdc72b353ac26979c4defd8211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_support_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a9a798cb6fc68d85e5ce75455922c5f72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_support_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a368e7f8418e1813c93a6854fac06e8c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a756016e87d10fdb5e7eb319190b33fa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a00cbe1f65abf8c7e0a2487b5ed69a682</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>aceb19d1f88b806f1565b11c47961c618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a64cb479bee6e56149a88fb53dd722397</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a31b03c897accba31de002e6a18758ada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PrintUnixDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a426925f0ed9e6a45e83372397d29d4bb</anchor>
      <arglist>(GtkPrintUnixDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ProgressBar</name>
    <filename>classGtk_1_1ProgressBar.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>ProgressBar</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a1e663070cddc151a18ebc7c3d5a1a706</anchor>
      <arglist>(ProgressBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ProgressBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a7037bbe2c566995d9e0e13f70e9ff813</anchor>
      <arglist>(ProgressBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProgressBar</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>ab50248934776fdf5b958d71316a6135b</anchor>
      <arglist>(const ProgressBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ProgressBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a86162d3925bed74e634bbe9ba779234a</anchor>
      <arglist>(const ProgressBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProgressBar</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a1fc49f0750ec31a6b49a1e4dfefd859a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkProgressBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a07f879d345611f7dd0066ceecb8ecf95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkProgressBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a77ced93c6802d19b10327beb6c9f31f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProgressBar</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a858446fa519774ff54caed7bb87be5f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pulse</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a540b11622168ecb6da6ec77a918287f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>ae5db3e46447929140cf37d61b1fe9271</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a8944b906ff4ecdfc284c12fbc3103dce</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_fraction</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>adef8f72085cb2f3ffc051f72fe9cb12a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fraction</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a2b0f1e2619bb296d0290cba2ce3de1b3</anchor>
      <arglist>(double fraction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_pulse_step</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a1e7de5c2db104b79c5446a60c5554c60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pulse_step</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a44e339d07c2bbfdbc1d8722dd7ca265c</anchor>
      <arglist>(double fraction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inverted</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a4735a220f8bde7b5e55a6a5b6c76a78f</anchor>
      <arglist>(bool inverted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inverted</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a6f60ce8a5fba0fba1c71daac7e8d1041</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ellipsize</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a757a76b3e5850a27e3a072d55657279b</anchor>
      <arglist>(Pango::EllipsizeMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Pango::EllipsizeMode</type>
      <name>get_ellipsize</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>ad56bb00706c9b41c7a952d83f6ec7394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a0bfa6042f5d4b3509967abc2d8af57fe</anchor>
      <arglist>(bool show_text=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a66a892bb5c4522683b0d5f64eb5485e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_fraction</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>af799c82783200ab27ec40ab8aac9ec61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_fraction</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>aa83e0f0bc9bacc331118a12727a8a2e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_pulse_step</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a8d016e22a6d2a8d6ab1e1900da311a91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_pulse_step</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>aabdb9216b0cd1e62cf14820ac78107f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a36db9b8ff8a9971ec180d69de7ed2db9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a3874fb5c5cbcc3ce0dcff6cdfb64c59b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a67379680ea917cef905744dd40044ed9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>aefff419fc1b2b02870352b1538d10b97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a29ec2f390716fc8a3b585cb51b529c1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a22e0eb8267ba98c7bb3e1a459ef77a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>aa4232b8e100c8f09c7e13e3da1228963</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>afab4d9f0563d424a9e7f86d19c900419</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>ada73ffc9f5e3d7a1eddde162b10d2198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ProgressBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a4cfc731f614759c2cb4097396601a3a1</anchor>
      <arglist>(GtkProgressBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PropertyExpression</name>
    <filename>classGtk_1_1PropertyExpression.html</filename>
    <templarg></templarg>
    <base>Gtk::Expression</base>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PropertyExpression.html</anchorfile>
      <anchor>a98ccf7e2aca415f4d41d98e0892e494c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PropertyExpression &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PropertyExpression.html</anchorfile>
      <anchor>a25e390a17be208622859c3319fbc7c71</anchor>
      <arglist>(GType this_type, const Glib::ustring &amp;property_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PropertyExpression &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PropertyExpression.html</anchorfile>
      <anchor>a4a91efed23fa43ca9782d078a4f97e92</anchor>
      <arglist>(const Glib::RefPtr&lt; OT &gt; &amp;expression, const Glib::ustring &amp;property_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PropertyExpression &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PropertyExpression.html</anchorfile>
      <anchor>a7791fee2d638e2801e47b30c0fd72e5d</anchor>
      <arglist>(GType this_type, const Glib::RefPtr&lt; OT &gt; &amp;expression, const Glib::ustring &amp;property_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Range</name>
    <filename>classGtk_1_1Range.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a763538b2aa6335c8184fb8fa34d65007</anchor>
      <arglist>(Range &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Range &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a5e00e2d9e4a445f71e5436ec259a2d3b</anchor>
      <arglist>(Range &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a1cc3b27bcb64a3fcb7702d0036e6d793</anchor>
      <arglist>(const Range &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Range &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ac9cbb23a981d4e95dcf267a7fe7f8a39</anchor>
      <arglist>(const Range &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a3874510f0bb923dc25452113b460a73d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRange *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ad1794114e1e316ce6640cef1dc70720b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRange *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a0c17dc31be91411620518d7250f6bd3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a8dca757da44545d6ddb3055e9aad5883</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a96a9ad1303f6f8a6d26b28a385538cb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af3206545f3c40bc6b576a288f1de423e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a6593690405d2883f3665d824bbf51004</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inverted</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>acdac2c0e3eee4095af408058620b22c3</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inverted</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>abb3b8ee35a4e7f4a99ffbb0d32171e40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flippable</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>adc125774f800480ca6512ed54b1078ce</anchor>
      <arglist>(bool flippable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_flippable</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a26f95facc3549c384fe36bafe94dedf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slider_size_fixed</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af8985dd99d064e1328816335a43faaf2</anchor>
      <arglist>(bool size_fixed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_slider_size_fixed</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a0212984c6eb976f63b75b1d795060303</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Rectangle</type>
      <name>get_range_rect</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a91c39da87793bea26b737093eecf7c68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_slider_range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a1157f88e28ef982f36d09797d196eae4</anchor>
      <arglist>(int &amp;slider_start, int &amp;slider_end) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_increments</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ad2ee02706b07e1f9feea798b3fae3294</anchor>
      <arglist>(double step, double page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a499580725b0638ec0f057bd36e3d9ff8</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a0dcdcc6742cb03a080ff24e376e3645a</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a091670fbe8ad6ab07aee6c6535aade67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>adbc3b0bc676bde91c270a5123cefd00c</anchor>
      <arglist>(bool show_fill_level=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a709447101352811cc3e2bb7d6e6f6f3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_restrict_to_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af893a1164ec656c9e818c34fae7359e9</anchor>
      <arglist>(bool restrict_to_fill_level=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_restrict_to_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>abab67eb29c2a4799794b50816a1b7e64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ab8e26d5fdb1b481856efa2ac3f96f39a</anchor>
      <arglist>(double fill_level)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a7b9a11ba7b4de23c765e809008fca72f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_round_digits</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a137f0ba065f62a4b9d8114b751d04dfc</anchor>
      <arglist>(int round_digits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_round_digits</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a2012efb7b26234ff944534bde31fb224</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a581ed37516cf4b9eeb71f9a14e21246f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double)&gt;</type>
      <name>signal_adjust_bounds</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ac57dc302efef5fa4cfec0289fc967e1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(ScrollType)&gt;</type>
      <name>signal_move_slider</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a8a9fc2f1f0344c724a0d8064bb373a56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(ScrollType, double)&gt;</type>
      <name>signal_change_value</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a67cf10d9f3845a9b9552a5552c1e520e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a4dd136e0ed7b6514e52b07f416a8f137</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a0ee5ec921a05a67678b7a8ac7f9f517b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a38769ceab47a8a6644d34778ba8e0b2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>adb34b2897c8331594bac1986a2c0c3d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a443a83cca1904ee00600992ea8b03044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a5779f1e68add5d69eb55645a966639fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_restrict_to_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a1bba1a3d0ad37b545fd379b2f5f09a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_restrict_to_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a75b29d9c135e801f317114f3b6b98e79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ab983fa77445f9b576d404beef8aa5d70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a612242f3d6771ad6587f7f81a580c168</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_round_digits</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af29ec0552b3e2ed3c3437d85ec09c772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_round_digits</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a4ca54b7f28b5318ebcba604ea211a830</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ac3f078543c63a3b86f15326f5a817e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>aecb34981203272244e0169ebfcb7c7f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_range_border_vfunc</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a2dc55210bc5d43802b9c75d1542a6772</anchor>
      <arglist>(Gtk::Border &amp;border) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a1d3e4c4da265a723d6ed0707f10d0fb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_adjust_bounds</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a17472a7ad11c2f4023a2f36ffe8de61a</anchor>
      <arglist>(double new_value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_move_slider</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ab1357af5a89c8d0d136e259fdc11abfc</anchor>
      <arglist>(ScrollType scroll)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_change_value</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af7f33a3dba3bd0728630921ba6c6b7a5</anchor>
      <arglist>(ScrollType scroll, double new_value)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Range *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a7cdf860d055a8c82f352f0941a0d2613</anchor>
      <arglist>(GtkRange *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentInfo</name>
    <filename>classGtk_1_1RecentInfo.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ad71c6b458633f6fadfb6d0d03ce23b91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a96e57e26536541736dda457c509526fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentInfo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ad851411db952b2041bcc1dec5c09037a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentInfo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a539a679876e81f9b3b262f97c2713088</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a55953673fea6c3c8396465d7e631b5ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentInfo</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a2b36a73c78c6ddd4e53a67e71144fe80</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentInfo</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a0ac6f78d14134269dbbb7129e7786a4f</anchor>
      <arglist>(const RecentInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RecentInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>add0d37ee509811f87d21ff735196bd70</anchor>
      <arglist>(const RecentInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>aef54fbb4035c80f10fc76cdcb3fd5f12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_display_name</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>aafba4813c0d7b254538c70fffaa05894</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ac705cbecd22cb65b52e72952b6139251</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_mime_type</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a49baced746d07ce9422b6df235cfc8cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::DateTime</type>
      <name>get_added</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>aa7b2e390cb3205e2a86723390dcd7825</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::DateTime</type>
      <name>get_modified</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>afd8725c33ae64ce9a2975c60f9c92263</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::DateTime</type>
      <name>get_visited</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a83e620d72a2fd2e629f920eecd899643</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_private_hint</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ae1fdd5771db5579f8cbdec934e457433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::AppInfo &gt;</type>
      <name>create_app_info</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a8d28e829646ff9a12ab66047c6a2b8f4</anchor>
      <arglist>(const Glib::ustring &amp;app_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_application_info</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ad94396638a0d53c053f88ec22bac9b46</anchor>
      <arglist>(const Glib::ustring &amp;app_name, std::string &amp;app_exec, guint &amp;count, Glib::DateTime &amp;stamp) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_applications</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a2ac3e6549d5bdf5f934928cbf3576e71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>last_application</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ad31a07db6dbf99d34e6be4d87259b32a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_application</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a47aa51cf4f96bbc9e2ce4a181772e303</anchor>
      <arglist>(const Glib::ustring &amp;app_name) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_groups</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>adefca7c27780109a5d02ff10aba9b165</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_group</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ad61dee302c8c1aaf64357421ee22430b</anchor>
      <arglist>(const Glib::ustring &amp;group_name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a9ec0523e28deb4e85247067e6316bf7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>af51baa9748791399905581814287a3ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_short_name</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a5a41451788a58262e12c5359439dda02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri_display</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a838e6a62c6d58c1aa22537e080672a55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_age</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a141054d42040650516baca70e46d5073</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>abff455716ce69ddbce427d498db24d88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a440764e2dd5a0188f3a61842b7f78c0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a08a7113c4bf7e2349f21146e0dd12e9b</anchor>
      <arglist>(const Glib::RefPtr&lt; const RecentInfo &gt; &amp;info_b) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a7bcc85b22525ec08f13d63aaf00ceeb7</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ab5aa447af966fcd8acf8d9c6ba38775c</anchor>
      <arglist>(const Glib::RefPtr&lt; const RecentInfo &gt; &amp;lhs, const Glib::RefPtr&lt; const RecentInfo &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a34163c048a7162d7f8519dc83c32dbd0</anchor>
      <arglist>(const Glib::RefPtr&lt; const RecentInfo &gt; &amp;lhs, const Glib::RefPtr&lt; const RecentInfo &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::RecentInfo &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ad1f3fa78ef465f24e2f1febd2b19cae6</anchor>
      <arglist>(GtkRecentInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentManager</name>
    <filename>classGtk_1_1RecentManager.html</filename>
    <base>Glib::Object</base>
    <class kind="class">Gtk::RecentManager::Data</class>
    <member kind="function">
      <type></type>
      <name>RecentManager</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a0d6ac2fbf197e24611500a4a450df83d</anchor>
      <arglist>(RecentManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RecentManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a6d360efbf13be78dd318d465009d42a1</anchor>
      <arglist>(RecentManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecentManager</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a1697008ce88423e79c00b1abcdc0bbbc</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aeb3fee7edcf9f2a35f9bba6a5c05bc29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>ab8efc5964e97add256c6545f39c85936</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentManager *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a590150f439560f351bdbbe7e4e085327</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a40399f4843c5ab7ab83736a7be08eb36</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a6ed8039a13e90ad09a36d7214798b87d</anchor>
      <arglist>(const Glib::ustring &amp;uri, const Data &amp;recent_data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a706bd39925f209dc38fcb5465348ca1c</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; RecentInfo &gt;</type>
      <name>lookup_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a06657f84ccee0963bcff22db6be29d73</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const RecentInfo &gt;</type>
      <name>lookup_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aa3bbb2224f474bf539c23fa59ed03525</anchor>
      <arglist>(const Glib::ustring &amp;uri) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a761d1edfc1cc0babc2d791f751a92577</anchor>
      <arglist>(const Glib::ustring &amp;uri) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a37908dbe8d829d473e3399691c29ca1a</anchor>
      <arglist>(const Glib::ustring &amp;uri, const Glib::ustring &amp;new_uri)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; RecentInfo &gt; &gt;</type>
      <name>get_items</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>af069801b44400a6fd3b297feb69d9423</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>purge_items</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aa393d1be0690fa74313a7e4f51fc3860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a765dcc1adfb86a508660ed8a36ce6d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_filename</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>af6668e97a45d9638ca07f143a7fb0245</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>ad0abaacb083b79723c586d7eb6b61e28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aad861cbd76788c7dde947d7df4f5ed4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentManager &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a5fa470d8dc5f71d5a51faeba82ea8980</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentManager &gt;</type>
      <name>get_default</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a6147eea0bc983c8f84cf9b0657280412</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecentManager</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>ab43690a69bb1ba69c8ea9744a93d9065</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aba88dad9d1c648b47c01954a23b887e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::RecentManager &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a5f2ae744f762ca72e98c45e981ae8584</anchor>
      <arglist>(GtkRecentManager *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentManager::Data</name>
    <filename>classGtk_1_1RecentManager_1_1Data.html</filename>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>display_name</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a880c435648a5ed3b81875664263b4a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>description</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a8febd5211477594cd2597b7d318dbdff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>mime_type</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a235083b0b3120fa624a5e474a02a0a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>app_name</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a275a497e18afc763f37e7638b6b75812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>app_exec</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a442c240764b959e6222d54a3c780311d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>groups</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>ae44b4cd2939000089441a5d7b88da6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_private</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>abca93736e97986d77420d6d5cc7c91ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentManagerError</name>
    <filename>classGtk_1_1RecentManagerError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_FOUND</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63ad05e6e4baf003ca786c11ca1aebf777b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_URI</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63aa5b04a74781fc95aca064dbe1cd3317d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ENCODING</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a63e8c60b01e28bf5803808146d6afcce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_REGISTERED</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a8bebf2847f8da54ed8321b787a93b045</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READ</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a68c7a3814a4ae88364ac90e006c81e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a891dda7a443ee13000b71846c33ed1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a0d3c356c1bdae22569559315aca08d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_FOUND</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63ad05e6e4baf003ca786c11ca1aebf777b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_URI</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63aa5b04a74781fc95aca064dbe1cd3317d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ENCODING</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a63e8c60b01e28bf5803808146d6afcce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_REGISTERED</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a8bebf2847f8da54ed8321b787a93b045</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READ</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a68c7a3814a4ae88364ac90e006c81e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a891dda7a443ee13000b71846c33ed1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a0d3c356c1bdae22569559315aca08d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentManagerError</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a5ebc2cf31a1a9b3f041ff66749ce6bc0</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentManagerError</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a573cfe02f473a501cc8126aefdd3056e</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>aa4aac87e5975d9205e08975ada9a3558</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Requisition</name>
    <filename>classGtk_1_1Requisition.html</filename>
    <member kind="function">
      <type></type>
      <name>Requisition</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a1a4bdbed213fe6a8aee12180d2895353</anchor>
      <arglist>(const Requisition &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Requisition &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a45e7bdec709346db52058c36154c7fa5</anchor>
      <arglist>(const Requisition &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Requisition</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a10814169c50c209a37a7a9c630fd9492</anchor>
      <arglist>(Requisition &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Requisition &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a1d1a116b7c6a6fcf8ac61e95e0ed3d89</anchor>
      <arglist>(Requisition &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Requisition</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a0319eeced7f1520d8c26d06430bb177c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Requisition</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a144219079d417906dac831010462d7d2</anchor>
      <arglist>(const GtkRequisition *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GtkRequisition *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>affb37961c5276af151340d468d586616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRequisition *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a123a6c604c3b8e45f14761b242e4e930</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Requisition</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a192c41d8686c1153f5bae31bbeb5ba4a</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a415a7916d73291525ac7d67c0bd9068c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a057da74adb413f390a0c716c183550af</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>ac13b539d1d4f889c256e0d9744730806</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_height</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>afc44a0b659f688a8984ace33df413423</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a0ddc85825c937d22eaa4592551751e82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkRequisition</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a92cd906d6b9c827e0abe3a7be48f1b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Gtk::Requisition &amp;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>af60941fcf4fb76d97fc4ec3ea8d9d116</anchor>
      <arglist>(GtkRequisition *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::Requisition &amp;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Requisition.html</anchorfile>
      <anchor>a841e5fa3fc9fc904d95e908497645ade</anchor>
      <arglist>(const GtkRequisition *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ResponseType_Wrapper</name>
    <filename>classGtk_1_1ResponseType__Wrapper.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ResponseType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daad4ea59f594fd59ad3a852144de261c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REJECT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daae92318c46b56a1d8bbdee574f38cc3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEPT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa93ed784b706347dd88f06512da618b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_EVENT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa2cb8c76b50fe11a470b68549ad7b7f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OK</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa38593f4d783caf058bacf101ae220a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CANCEL</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa4a4446885b7e1b32c1001b360d389e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOSE</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa4b5bc77caad2c2ae4c341481a6da4218</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YES</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa37aa515bdfeaec788e619e4d6ebdd5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daad4faff5622f4a9e467b9ad4cc1fa4813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLY</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daadfeb8099e3f7caf3129dfc356f49dd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HELP</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daadd2feb12ab27a8b5a83bd9ea95c54baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daad4ea59f594fd59ad3a852144de261c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REJECT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daae92318c46b56a1d8bbdee574f38cc3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEPT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa93ed784b706347dd88f06512da618b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_EVENT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa2cb8c76b50fe11a470b68549ad7b7f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OK</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa38593f4d783caf058bacf101ae220a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CANCEL</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa4a4446885b7e1b32c1001b360d389e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOSE</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa4b5bc77caad2c2ae4c341481a6da4218</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YES</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa37aa515bdfeaec788e619e4d6ebdd5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daad4faff5622f4a9e467b9ad4cc1fa4813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLY</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daadfeb8099e3f7caf3129dfc356f49dd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HELP</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daadd2feb12ab27a8b5a83bd9ea95c54baa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Revealer</name>
    <filename>classGtk_1_1Revealer.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Revealer</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a7b5c216aaa7cdc10f74eabcf4a117027</anchor>
      <arglist>(Revealer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Revealer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a429960087cd7e815e5811a625634e69a</anchor>
      <arglist>(Revealer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Revealer</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>ae9fbe27308177117642825b34c91186b</anchor>
      <arglist>(const Revealer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Revealer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a32263b020cd60bc3cc83e80faae98666</anchor>
      <arglist>(const Revealer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Revealer</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a6d7d5551cf836dd3413cd48ca02e8c49</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRevealer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a28cbfc239d4488bf41a523510a728cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRevealer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>aa406b31e3cd8ce1cf8a122827ccf763c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Revealer</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a83fd7b4d3088bd496f3001904baffd99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reveal_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a89ab432ed2655dc0b00b2a23498814d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reveal_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a5ef2dd33cd6ad0af9a459222c03929bc</anchor>
      <arglist>(bool reveal_child=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_child_revealed</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>af78dd9cf877e5cb22a9c38b399e8aadc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_transition_duration</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a93add166c215787797b37c518cd2a56b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transition_duration</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a5ed3eddecd4ec18be1671dd6d8d18fb8</anchor>
      <arglist>(guint duration)</arglist>
    </member>
    <member kind="function">
      <type>RevealerTransitionType</type>
      <name>get_transition_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a5bc313878dfce5da0826b42864cc8761</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transition_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a4f4012134991c6f72f6fe1cf9e0e2f70</anchor>
      <arglist>(RevealerTransitionType transition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a754e9989f2217df7aa886d9f8493ee45</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>ab30736ec275e28e40296a379517815af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>afb16a19b46692a7f381c75c31da2bba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a767cd00ea23f0f8d540ce3a4c7dae0c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; RevealerTransitionType &gt;</type>
      <name>property_transition_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a0775db838cf45facb5e75eed1a8ae6d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; RevealerTransitionType &gt;</type>
      <name>property_transition_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>ab55cbac4f94b317c162c620ebd92c8d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_transition_duration</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a50e7b0161537d2c87b3be73d2a435398</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_transition_duration</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a276562ed4ba73d51e371daec996b7851</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reveal_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a4bd433db3af64ea130bb5b35eb0bb3bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reveal_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>ad61751b18d4549d4a28ffb44d9467b20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_child_revealed</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>abe757bf844accf42240defc1d969a5ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>aa0c629d66cbcd9c17bc26273a59b8867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a0bb4fd3c0ba29b591adf67d3844e0956</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a9275ba3c8fbd099f4805adee4ba90e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Revealer *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a286e693cf758d7f5d2c500e855b67f88</anchor>
      <arglist>(GtkRevealer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Root</name>
    <filename>classGtk_1_1Root.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Root</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>af23ae43488069421a20e879d443b1681</anchor>
      <arglist>(Root &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Root &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a0f1641d89fb031e5cec10e73bc38f293</anchor>
      <arglist>(Root &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Root</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a63170b3d8220b35205863059f2ef6ca8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRoot *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a5efc7d82a84d50ba2d56814bd4372e87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRoot *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>acc2b3666deffa80f0ddf9e354c21b627</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>acae850e2c83a88cd810993355cd35f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>ac6b22b756e826d0a306aff9e4677cafd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a0b5a3c153ae106512c5ed290c632c018</anchor>
      <arglist>(Widget &amp;focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_focus</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>aeba2476769a4206d6d9d079106c8f07a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_focus</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a82566658eaa024abd537735b1d72b2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_focus</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a95958bfdfbfd93b201e9ceea5af2046e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a359a657fdb0bd23c9ce638a1072992fb</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a5c55cf72036a94e8f31bb648ab1a3c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Root</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>abf6e1293c08385f3afa8017796729c66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Root &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Root.html</anchorfile>
      <anchor>a4515cc2a1e12e5318573bebefea6e721</anchor>
      <arglist>(GtkRoot *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Scale</name>
    <filename>classGtk_1_1Scale.html</filename>
    <base>Gtk::Range</base>
    <member kind="typedef">
      <type>sigc::slot&lt; Glib::ustring(double)&gt;</type>
      <name>SlotFormatValue</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>adcd24c0501f575f414cd1ec020e37291</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a3d6c0c2ae8a31a51c18ef4e80b4290a2</anchor>
      <arglist>(Scale &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Scale &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a70d1199ca62aaaa7a5e26e59295514ac</anchor>
      <arglist>(Scale &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a658d7f540eca81fc8db26dc59af75800</anchor>
      <arglist>(const Scale &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Scale &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a4e73428504fcc27b555bf1f93e7c27cf</anchor>
      <arglist>(const Scale &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>ac3888b352a72950d39bc965fd7e1acb4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScale *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>afc7d5fb5223af20c105c473dff2cb5bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScale *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a208cb6a4cc5978c1ef3125156fa16e00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a3b4c0f4d069a0309e21a60f497bf546e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a6c25b5312366a0aa94d284a0f1596875</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>aa5985c496f8b0ce48f99d6d640f32a72</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment, Orientation orientation=Orientation::HORIZONTAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_digits</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a7cd895f5c2f298f12a67db035f99bb47</anchor>
      <arglist>(int digits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_digits</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a17e90b8cd2a046a06abc108dac13a548</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_draw_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a28473a3dead4c2a29bfe1399234266e2</anchor>
      <arglist>(bool draw_value=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_draw_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a9190c5890aee8c6589aea790711c9591</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value_pos</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>aaefd87ceaf890e6d0d8f01df27a51dd9</anchor>
      <arglist>(PositionType pos)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_value_pos</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>aa8dd137abc2f76d685888a7ccdc26662</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_origin</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a7ddf5dab0a5896faf56a470d4a140179</anchor>
      <arglist>(bool has_origin=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_origin</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a8f8b2aa462ad1e051e801508d150c60d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>adcba211aa3877294cb9fef98cb35d8b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a0d2c34bdc902171422f9afa7848fa0d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_layout_offsets</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a4d5b0dfaf0202a80bb5eee86767b7be0</anchor>
      <arglist>(int &amp;x, int &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mark</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a283af7d7d0ddb8fb3077b8082786d8d0</anchor>
      <arglist>(double value, PositionType position, const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_marks</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a9e3e8d0d052a6b9851a89de31cc13003</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_format_value_func</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a719e846735bbbdb062b4963c37e63e94</anchor>
      <arglist>(const SlotFormatValue &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_format_value_func</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a92949dc00b1e6f67b9b83f2621479152</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a7b52dddc7ec049bc7e5c231bcf0b48f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a81590ea52904d03d4033e224def3f5f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_draw_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a4a72080b7356e7d6e764f038a78edcc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_draw_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>ac98f8679f76eff5678c1f028431845ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_value_pos</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>af3d7a69169b1c1f932211d3a1e183eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_value_pos</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a43f0d668f8afe2eb210aaf556054f060</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_origin</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a88638cc438b2dba449985fee03dff573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_origin</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a4fa66984ed1f3d80dc1d2c29b24ec1f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>af8dd4b82352ee5af8575953992b32ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Scale *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>af4cd737ce65264070c74e7002858d9a5</anchor>
      <arglist>(GtkScale *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ScaleButton</name>
    <filename>classGtk_1_1ScaleButton.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>aec9b9891dd71bf4e3965560275cc4604</anchor>
      <arglist>(ScaleButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ScaleButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a163571ad1c88ac7908092fa9985eeb12</anchor>
      <arglist>(ScaleButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>ae3fe8cba17ea10e0851c417ad3a47e00</anchor>
      <arglist>(const ScaleButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ScaleButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>abaed459a95c940fbda327d89a7b7ef6d</anchor>
      <arglist>(const ScaleButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a56834de4214c3389b3a2713b9cb4ccc2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScaleButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>abd9b41acbedadf2ae1e4bf96250bf99f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScaleButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a680f1f76941134b9a62f910847062ade</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a26b83287c5c64b44bfb71a9789aae6b5</anchor>
      <arglist>(double min, double max, double step, const std::vector&lt; Glib::ustring &gt; &amp;icons)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a7aa83d6e04d558f9196a77910df6c28e</anchor>
      <arglist>(double min, double max, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icons</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a3f8f0fed2d84fdaf0e491425f9a7271d</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;icons)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a5c6f65b2e4de80e6acf41ad19682cdff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a3d817b49350e45667e675c193fa6e945</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>aabf2cc34a8267e9196a97aa2a6d2a82f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a7f4e83de95080ae30d7f5975f84981f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a3e6cb93006047f2292167e39f26decb1</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>get_plus_button</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a6aab4ed57bace3ad563ae44bc7a652f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Button *</type>
      <name>get_plus_button</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a921ec87270e169f89fea730d4f40f18c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>get_minus_button</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a163a8b9b7b711b9571b2248e01e17871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Button *</type>
      <name>get_minus_button</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a8d3286b124957f01a9b5b8bd04d6a29b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Widget *</type>
      <name>get_popup</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a2a6f814648fa561ad88b31066efe7c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::Widget *</type>
      <name>get_popup</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a38bd8a553a1789b3babc08a137469e6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(double)&gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a0cac9960f75ce0c4b684db584976d57e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a696dc4abe82c53a78505aee5a635f6e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>ac30d2bd1ccc9c08c468507a81266189b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a8a2883193fcd7623417723c9c936f149</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a5d97eb17ab51cc3d693872e47e24ed86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_icons</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>ac551b3d95c791b7489b7901f4f59b838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_icons</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a1ec8e48c9905a0f4cdb55d4422c8678d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a9c16e280a60ed4c755d88b5dcb535d3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a9ca46954af0fd6f42764b0da943981f3</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ScaleButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a38b00f5c1cb1925042801f10d653ab7b</anchor>
      <arglist>(GtkScaleButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Scrollable</name>
    <filename>classGtk_1_1Scrollable.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumeration">
      <type></type>
      <name>Policy</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga57b4de8e5ec822b289c97425e166b515</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57b4de8e5ec822b289c97425e166b515acf0ee111afe9889278a772d631dfa150">MINIMUM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57b4de8e5ec822b289c97425e166b515a5309059cbdbae2a0551437827203ad0f">NATURAL</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Scrollable</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a6666b48efaafdeede4540cd67c6135e2</anchor>
      <arglist>(Scrollable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Scrollable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a0ace19dd8b3aa40d99170942a6147865</anchor>
      <arglist>(Scrollable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scrollable</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a80d9818530aa7a042495c72145bf1dd3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScrollable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a570bc9462785d8b587e972bf2dc32bf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScrollable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a1841c5057f296bec2d949131c1f47297</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>af3878da4887660abbae5957b24bbbc14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a5b7940599af11b94f632a454157f6a8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ad17532865862c76e1be9a35172acd975</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;hadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ac6f56218d168ce3088f5cf7634b6bf81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a692d45b9aa8fae3d24f60a926a84b19f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a4842e003587a55b63740801ae184a3bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a4916a14d49ef7023ebcac30c6406d376</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;vadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a61ce61f0d1853d9a073afa7aa1e5c48e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Policy</type>
      <name>get_hscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>acbc88768cd33ab373e75ab2bc522de85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ab11714d209d74ae1a3bb7f6408819119</anchor>
      <arglist>(Policy policy)</arglist>
    </member>
    <member kind="function">
      <type>Policy</type>
      <name>get_vscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a911f6c1679181c3f124d73ea9c062d32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>acb547198f829c8a206c64f27dae1b10b</anchor>
      <arglist>(Policy policy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_border</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ae9d614718f6d9da11e51088918e78c80</anchor>
      <arglist>(Border &amp;border) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ab3575935018c8385235cd4d00a2ac7da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a28e90ede276ad2208854c27e5051da8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a86018ac8089ef01d30663e90d8bdbcca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a5172abe87749d79d49228b1f178832f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Policy &gt;</type>
      <name>property_hscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a2ffce37fffc3a29643b4b9b4481c4d04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Policy &gt;</type>
      <name>property_hscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a8340e2c37e7c6865439d3563741fe15d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Policy &gt;</type>
      <name>property_vscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a04e180117e36d9e34b5d0a65d6cf785c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Policy &gt;</type>
      <name>property_vscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a53dc3e762a5e57ce36c0063e25448451</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a55b0e4b474fa585a669898a9c60056de</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a4af4c9ea49af9d2148e3f06ff86cadc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Scrollable</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ac5a66c426bb0eccfcf845e036ecf55f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_border_vfunc</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a3ad8afdaafc909b61bf4862547e77c6e</anchor>
      <arglist>(Border &amp;border) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Scrollable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>add7b87bdfa7cba3bf768b8d5f8f0ea76</anchor>
      <arglist>(GtkScrollable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Scrollbar</name>
    <filename>classGtk_1_1Scrollbar.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>ae21bd79bcbb284984e17d0829dc12478</anchor>
      <arglist>(Scrollbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Scrollbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>aea493485fd5048ec61df829bd3c6bc2b</anchor>
      <arglist>(Scrollbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a7e495a541997919e7e83610e3cd95fea</anchor>
      <arglist>(const Scrollbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Scrollbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a916c454d41670a02a27b456c30bc09e6</anchor>
      <arglist>(const Scrollbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a6b2c2f2cf4d350343b571f50c8984cb3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScrollbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a37b9bc182ebc88880d99d6dd8155a247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScrollbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a8f32e1cc5efad05cedb0e02af5051edd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>aeacc50cf8f8022213c7a4c359422fb96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a4cfd4472cdfd829a329d5226d348b3a0</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment, Orientation orientation=Orientation::HORIZONTAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a73d7e9b6bcab2c9f53d52ca306872d24</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_adjustment</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a3cd459052c311de53d96ca75a8c7e10c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a82c3a74f4bccfeb2e186030ea4b7a4ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a86e01fc799dd58feff632087fda28055</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a2e8d80309095e1b3fdc28b1a7ad1a2d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>afd6f391759cd2e664f1e0bd48433356d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a7aaf5a72bbd1083abc4e45c404c97f4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Scrollbar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a0faf964f67656f6af288145c1bb25e3d</anchor>
      <arglist>(GtkScrollbar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ScrolledWindow</name>
    <filename>classGtk_1_1ScrolledWindow.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a9881d8d03e1b7cab53ea127135a0c7e7</anchor>
      <arglist>(ScrolledWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ScrolledWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a527ff3c09e1a11f522e7adad18f0ba11</anchor>
      <arglist>(ScrolledWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ab9f230af713ed5c208f69b8244b9e809</anchor>
      <arglist>(const ScrolledWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ScrolledWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a573a0b41978bd40c81e7c46fff16bb68</anchor>
      <arglist>(const ScrolledWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>adf7e94425ab43bf1069e7fc15fe1be6b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScrolledWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abacc27fa2d7d97d377974c8cd698ec2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScrolledWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a89c1f17ab466f1d299647fd822c3dabd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>acfea794428221cb9d56517ea6d349579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ac70ff030af23aac126db811280c41013</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;hadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ad378f122096a72ae84b76cc1c3a703bf</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;vadjustment)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>adec2b734a2b89ba46fceb1b26a2054e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a421737dff6ef7548154d8e52bf080acc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a95693ae8d127c5e84199a3ca84fcf656</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>af8417df488c8915bdabf36cb6006ef62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a17352bdfd39d8a895e5c885f0bd1a246</anchor>
      <arglist>(PolicyType hscrollbar_policy, PolicyType vscrollbar_policy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ab4505dea41aa8831fc5b13de391ce7b7</anchor>
      <arglist>(PolicyType &amp;hscrollbar_policy, PolicyType &amp;vscrollbar_policy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a0f18402db19c53c106bd7a820682ba78</anchor>
      <arglist>(CornerType window_placement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abd0e5020be7a77509201a3a15f0da8bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CornerType</type>
      <name>get_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ab4cf21972ecfb9303b10b88fe00ede52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_frame</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a980f5aa4759f68a6b63a200e3687f041</anchor>
      <arglist>(bool has_frame=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_frame</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a5e7f5f67d20d9855874532bf38c4ab48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Scrollbar *</type>
      <name>get_vscrollbar</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a82225324d8d08f136872c5b434a26e81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Scrollbar *</type>
      <name>get_vscrollbar</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a24a642a96827057b793a17332f778b59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Scrollbar *</type>
      <name>get_hscrollbar</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a4ec08225cc1c4cb1fcae8e488cc8cf72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Scrollbar *</type>
      <name>get_hscrollbar</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a617c1125f92458d9bdf68d3164a54e84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_min_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a209d64120ce9f8a2ffe825f493338f7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aa9602bd46046edcfe7f7781b3a738407</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_min_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ad7b9f7a6d6e2ac3390a5b22e13af6cbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2c07b526bc043cdd2b92d4bc93714fe7</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_kinetic_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a88132d21cc8378c793889b9fa20ac1ca</anchor>
      <arglist>(bool kinetic_scrolling=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_kinetic_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a12dfb871e5e0280837b9e5925a8ffb56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overlay_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae0110ffe76610bd9e50e71e1e7b4729d</anchor>
      <arglist>(bool overlay_scrolling=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_overlay_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>adb6297321490bd4ceefb530ac5e0736f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2a61ad6af5c3b62a21438909f2080e42</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a32f3616a2d5e5a05ebc35b5c9ebea9bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a8de97279e618a60049c27f706309c163</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a97757c9b3c26d4b218297961c6c5253a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_propagate_natural_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2d4cb945688ecb8739efd70b18742779</anchor>
      <arglist>(bool propagate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_propagate_natural_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a3a454c6104f5b91256cf03b6ea26df37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_propagate_natural_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ad0cfabe5dcd72812b3260091a726bf38</anchor>
      <arglist>(bool propagate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_propagate_natural_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a8f159987fda9a3305ae25ca54ec6561c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aaa6ef0f263cb81fa00fb781a870c98a5</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a5eb19aeec3c48d9ffab1169066fa2fd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a3d8ebb515a935877beaa185d474afa08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a73a4f12446545217b6083be6fd54b4ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gtk::PositionType)&gt;</type>
      <name>signal_edge_overshot</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>afdfcb2ab567b970909c9f4bd9907c621</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gtk::PositionType)&gt;</type>
      <name>signal_edge_reached</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a410f5b8e132019df5844afea8492ec37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae0e22ed47a78abcad7349ba57c97412a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a9b36ff6a5b044a661b7bbf5d844fb857</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a168e148cfe9446ff1f7b17be63c676d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ab06c017d4bcb9d6f17c1bae4d8931c4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PolicyType &gt;</type>
      <name>property_hscrollbar_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a34565d4e25f8ab217742dbdc9997610b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PolicyType &gt;</type>
      <name>property_hscrollbar_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a06a9bba31fcc78a3e754bcac1fd9f688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PolicyType &gt;</type>
      <name>property_vscrollbar_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abaf9e0527d21281231f8dfb387171dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PolicyType &gt;</type>
      <name>property_vscrollbar_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a166f71ab91d4435604c2067fcfe1d358</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; CornerType &gt;</type>
      <name>property_window_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a6da6ea2b52099d0ea0fd0845e8a9f662</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; CornerType &gt;</type>
      <name>property_window_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a96732e31df8c0480bc4098e32a8f9baa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a4e9450818e4b71913be5505dd2f8faf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a437bd17988847e41023d2495dbc05c61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_min_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>afa843207b04c1e2d71cc83e89f381033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ad4f441c9ddf006b933cad97dc22be2ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_min_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aedc8784514cd4e0e8bf8c93b56ef0da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ac4584e50c3af9034aecbad52f1e9b57e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_kinetic_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a9ed2c226611949f9960f851601d20004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_kinetic_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a5b9250aec56a622fcb85a1a71d8c1ec7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overlay_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a490d5b396e82257ab505f4d9e6167ee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overlay_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a0c74e308ce982f148963c96f9e46c76f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae988155bdc45922be1c2ce898ff7c15e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a08c653a894c472baae0d66804736667e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a514cf4dd77b552c4b60c782fd291d4ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ab28dd25fd18632197574423babf3516f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_propagate_natural_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a6e100440459c919e47c1a83c97b9d0a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_propagate_natural_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abf975463120071eb02873b7b266cdeb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_propagate_natural_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a16453960aa7f7dab6e376b9c5a6a8a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_propagate_natural_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a339953f7c810c6e3e8623dd14bd66914</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aee21883fd03af912babd5af59fb331ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a71cc0027919bceda1d1c3a315f90687f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a13190cd304b5b4d03fed1fa5aacce99f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ScrolledWindow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a08e8c15db9b3d1d025b5d7d6ec46ae5f</anchor>
      <arglist>(GtkScrolledWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SearchBar</name>
    <filename>classGtk_1_1SearchBar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>SearchBar</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aeaf2f496d3ade230802e2369bc558e19</anchor>
      <arglist>(SearchBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SearchBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>ab3d490f0e64bfe891dbd7f9dcdbac83f</anchor>
      <arglist>(SearchBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchBar</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aa1fa5ac662be5dfadb4414280e537995</anchor>
      <arglist>(const SearchBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SearchBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a4b569ee4cbcbad3bcdf6a45b81b19a84</anchor>
      <arglist>(const SearchBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SearchBar</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a6af9c5e792634d6be0730d10277cba5c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSearchBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aaecd0621d8144332b047b8abd10bf6ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSearchBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aeb5d57a8875f167a1e9b69bfd7fba550</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchBar</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a493cdb8c613b90c5c939c415b8a2b10c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect_entry</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a4341176bdfe85fd3788a0197afb52fe2</anchor>
      <arglist>(Editable &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_search_mode</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a0268d72920407b49379ae8a092e5de17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_mode</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a307dde44bc0c7454f38a438b70a22b9e</anchor>
      <arglist>(bool search_mode=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_close_button</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>afcf9c68965912b02acc75edd5b9e2043</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_close_button</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a6d50810bf5e43b7403fd58c2f3bd73b5</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a6ed7521929402c280741590bc2850261</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aa930376ecbcd19df7d58999c6025f7c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a3819c5dd86e00b60714775316628a5e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a6a50b8f3c08ab1d462dbc234ef9cbcff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aaf0b38c27d1b102ab7031f9f3f7f3b79</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a39524252285163683cd023c04466bb5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a7093c26a35b134cc14d08a952210898c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aeb2a89ce9ba27c33b73ed8c814d3af64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_search_mode_enabled</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>ae65d50f2d1362a68e2ec08e04735ec14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_search_mode_enabled</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a976659ff16bfe3834b4d2e1c1dd288dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a7e4f2e6fdcce3892b21eddaf74fe108b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a8cd8a0f11a9347b8434eb5013f5e9b23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a9a54754e3ebd997216138e7573f980f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a3e48cc6633da470d2ea8c5eb70f19b8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>ac5e4df7bc0910e2a14198c147afd3621</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a22d06487f9850f1f3f0ecc3bbc8953cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a3e783bb503ad3d6e552a180b29154b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SearchBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a0644cfc37a9e39e7e8198ed04ce170b1</anchor>
      <arglist>(GtkSearchBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SearchEntry</name>
    <filename>classGtk_1_1SearchEntry.html</filename>
    <base>Gtk::Entry</base>
    <member kind="function">
      <type></type>
      <name>SearchEntry</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>abce4df4a814d44acc3570850fb0ad948</anchor>
      <arglist>(SearchEntry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SearchEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ad1e4560cf7de1bac3c18f4ceb1369e1a</anchor>
      <arglist>(SearchEntry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchEntry</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ac7a534798916b3cd1e6b617a86b89bbd</anchor>
      <arglist>(const SearchEntry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SearchEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a8d694e0ea48d0ee5ea517b366d72ad6e</anchor>
      <arglist>(const SearchEntry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SearchEntry</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ab0eabdace2c6d8343562234bf63f27ab</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSearchEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a950155950b0b2aa7d3c30c19d3f77abf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSearchEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>af2d0de59a1187005a9b6aa74c17c5a2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchEntry</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a19f16898b8301f28364d9a2b088e279c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a55a5d04cbe04ce722b4557d3c3dadd49</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a216e32b596b0e24926fa2aa5615d267e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a68bef9a30faec7682c1d8b95e61928dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_key_capture_widget</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a83444ada6fb47afc3796510a8f1e8e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_delay</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a58925fd787b82d2af8dd23992187b147</anchor>
      <arglist>(unsigned int delay)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_search_delay</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a0cff831265ae40975a7f6c71c2470523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_search_changed</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>abbe0edaacae467c09fa151bfdbf2f22f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_next_match</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ac47779c9dea6201e381ff2d88c7cf045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_previous_match</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a74f6a3e6601e6a8171d3fab72548598d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_stop_search</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ad1e207486be79bb188654e168e3b1c9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_search_started</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a863e02f9d14685b1c28d3fe2cc96c5ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a700481b17000ea05eac3ff321bed6eb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a2ba95434451d69872e1443e6cc303c1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a906c549173dcd26b2d559072e258c747</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a77387374afbbd3c0167a526dea920cb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_search_delay</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ac7f22acddf1e63dc0aef3b4035d3a4c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_search_delay</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a381d92e37be9f3946be2288fef1e5a91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a995b994819e8e18fed70d70e82f3a820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SearchEntry *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a648ed40d8b02fcafe04d7a3fe1576502</anchor>
      <arglist>(GtkSearchEntry *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SelectionFilterModel</name>
    <filename>classGtk_1_1SelectionFilterModel.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <member kind="function">
      <type></type>
      <name>SelectionFilterModel</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>a266a922adae6c6e7ff4813b18244d842</anchor>
      <arglist>(SelectionFilterModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SelectionFilterModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>a7ac1de524d7742dbcb21effcdca996dd</anchor>
      <arglist>(SelectionFilterModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectionFilterModel</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>afe377a73b4481ac89100bb295ebcc293</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSelectionFilterModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>aa6081b3dcc51a5f6db4a0091624980f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSelectionFilterModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>a6009a4575d6117e784416f5890c11304</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSelectionFilterModel *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>ac3c1bf4c9b0bc997c727207818bd5220</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>ad8a2c74d284f88187e5d39f25be7253c</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; SelectionModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>a9f7cd5fd53db6f1615605016f9651eb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const SelectionModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>abe5f7bd90660313af1a6a111a15c1f19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>ac0c09c9abf7165a95784dc3f238dcb17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>a65d0389dead0e17c5a83e44525c9d5df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>a83844f45692e7f684b464afcb0174f98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>aa1c0080252960c3d1f80332f85bc2937</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>af3483bb3bcf3e8a558c634c44f79dc4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SelectionFilterModel &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>a51adec032c54b4c876e3b020c7b29344</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SelectionFilterModel</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>a906e0a865bc9e2415daa28143158e824</anchor>
      <arglist>(const Glib::RefPtr&lt; SelectionModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SelectionFilterModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SelectionFilterModel.html</anchorfile>
      <anchor>afedcb9b1c8a38a9f0a7a87951d08bfe3</anchor>
      <arglist>(GtkSelectionFilterModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SelectionListModelImpl</name>
    <filename>classGtk_1_1SelectionListModelImpl.html</filename>
    <base>Gio::ListModel</base>
    <base>Gtk::SelectionModel</base>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>SelectionListModelImpl</name>
      <anchorfile>classGtk_1_1SelectionListModelImpl.html</anchorfile>
      <anchor>a5dfcf21ec2510ac5771b7e808cdd28a6</anchor>
      <arglist>(SelectionListModelImpl &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SelectionListModelImpl &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SelectionListModelImpl.html</anchorfile>
      <anchor>a0f3a661e6e45134249a77bb46a09a341</anchor>
      <arglist>(SelectionListModelImpl &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectionListModelImpl</name>
      <anchorfile>classGtk_1_1SelectionListModelImpl.html</anchorfile>
      <anchor>acf99e1cfe85d88bcf8835aad02192bcb</anchor>
      <arglist>() noexcept override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SelectionModel</name>
    <filename>classGtk_1_1SelectionModel.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>SelectionModel</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a88679868e630e2964a0980e03bd1f6e1</anchor>
      <arglist>(SelectionModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SelectionModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a0110dfda171ab525bc21091cea14311b</anchor>
      <arglist>(SelectionModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectionModel</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a2afcab6763602710265749f58c2dc9a0</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSelectionModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a96fe68fbdec7531df3e494bc207274a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSelectionModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a24025275c3a66ec4248d6c797b9185aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a8736043236afe1f07eb757e29a44f6a2</anchor>
      <arglist>(guint position) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Bitset &gt;</type>
      <name>get_selection</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>ab855dc6d3cba0a92dd531505ac2321d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Bitset &gt;</type>
      <name>get_selection</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a74770acb50821f5f744792b268199ca3</anchor>
      <arglist>(guint position, guint n_items) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>select_item</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a9ac3d5c05e9480aca78fcc4c5c18f5a5</anchor>
      <arglist>(guint position, bool unselect_rest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unselect_item</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a41a36377b56106a2ff093b666821a5ff</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>select_range</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a41ed349c866aac0e7cf3ab72ea437ac3</anchor>
      <arglist>(guint position, guint n_items, bool unselect_rest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unselect_range</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a30dc11e527aeffc31ffc325247127a4b</anchor>
      <arglist>(guint position, guint n_items)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>acc29514c976e48c14a81911ea5cd27e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a90a1aeafdff00d7eee7d8c5a8db7f5e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_selection</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a50436a2b7373ee7bfe4d511034262b52</anchor>
      <arglist>(const Glib::RefPtr&lt; const Bitset &gt; &amp;selected, const Glib::RefPtr&lt; const Bitset &gt; &amp;mask)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint, guint)&gt;</type>
      <name>signal_selection_changed</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a166e315ba000dd06a83b8e63a9019772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>ad73c1de1c20ad4bcc24f31f6218d9c4f</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a2394b79e9b65a2fc2495ba6619dab5df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SelectionModel</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>aa18827f473a8f367071b9ff42eed5c92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>selection_changed</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a88eb8f1114bab5a186777fa7ec4fe9ef</anchor>
      <arglist>(guint position, guint n_items)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_selected_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>ae7db365b7b98a3ca3ae997609a41ecb4</anchor>
      <arglist>(guint position) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; const Bitset &gt;</type>
      <name>get_selection_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a7c99e154f153421fe98ecce673539d38</anchor>
      <arglist>(guint position, guint n_items)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>select_item_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>ab6730a019d601d4e873c3168e602e1f1</anchor>
      <arglist>(guint position, bool unselect_rest)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>unselect_item_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>af17b1645b63b3cc243706250f1ff47f6</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>select_range_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a83904c03189c3070bdf148f6d8e0677b</anchor>
      <arglist>(guint position, guint n_items, bool unselect_rest)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>unselect_range_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>acb63ed28ba049e2831ad6f7394b4509c</anchor>
      <arglist>(guint position, guint n_items)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>select_all_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a95539a6e9375eba6bb43e7b2d0f36bd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>unselect_all_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>ac0e2d72d57de1995d9a30fdf7a3303a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_selection_vfunc</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>a606a9b8d5bc82507ef99b9520e3a996a</anchor>
      <arglist>(const Glib::RefPtr&lt; const Bitset &gt; &amp;selected, const Glib::RefPtr&lt; const Bitset &gt; &amp;mask)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SelectionModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SelectionModel.html</anchorfile>
      <anchor>adb71c954a8bae3233a963c79c68955e0</anchor>
      <arglist>(GtkSelectionModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Separator</name>
    <filename>classGtk_1_1Separator.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Separator</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a5e2a8938d95222db291117e50cca214e</anchor>
      <arglist>(Separator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Separator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>ac0e799865c4d6b96443b9002544ba06a</anchor>
      <arglist>(Separator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Separator</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a6ff64093053d9f0d5ad075a70f938d30</anchor>
      <arglist>(const Separator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Separator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a4d36eb70392d0919f27c9285c52a1a28</anchor>
      <arglist>(const Separator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Separator</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>ab99a843df190027c95b76107dbdef58c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSeparator *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a099f2665c0820474c66cf42ab4de65e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSeparator *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>ad40df2547b7f11d3bd92a14125ca16e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Separator</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>af14cb4d7a05cc2c70b759afcf7a0f559</anchor>
      <arglist>(Orientation orientation=Orientation::HORIZONTAL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>ae69b0a87c2b297c28ee6e9bf2908ec37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Separator *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a110f1e622f4e3eaaffbe3184529a8603</anchor>
      <arglist>(GtkSeparator *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Settings</name>
    <filename>classGtk_1_1Settings.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::StyleProvider</base>
    <member kind="function">
      <type></type>
      <name>Settings</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a845c5ecbeeb584a2e36efc9d0543f52a</anchor>
      <arglist>(Settings &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Settings &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac8cc3b91333217a936f3c92e01fd1d5b</anchor>
      <arglist>(Settings &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Settings</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a57a9e5c0a1d638586a57edcd2e982b02</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSettings *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af2e86369e2f479c2058860582aaa9ae5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSettings *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa4a066b2c4cb2115ea36d737501ab054</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSettings *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af0edba32dc50c05016344b7e3c88545a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_property</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4e6b657ac0fded3a807ead8cf24ed66d</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_double_click_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9bfa2b745a223d0e0502ced07ed4889b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_double_click_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aec8d4cd7a8488be5dc53332d5cfc5239</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_double_click_distance</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a930db2309a66aceb349bae2e634f11e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_double_click_distance</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>afe2b1492a9f3171b9b8bbe60f4fdfea6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_cursor_blink</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aeced7447c079b52e1247caf9ba0fa039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_cursor_blink</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9e61d4f87b833f147937eb677c7e2420</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_cursor_blink_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6139291a00bc2a19f351ee8f6f46a655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_cursor_blink_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af5171c563d1546ac27986a18637d449b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_cursor_blink_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae4dd73a12aa05fd10d57af9ff9aa829d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_cursor_blink_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae9402fcbec8c012873236830170a262f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_split_cursor</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab9f6bec9fee6ee95f72b56e8afd0a8b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_split_cursor</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a0775f12892ffd8404fe9639357af10df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_gtk_cursor_aspect_ratio</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a79faf44f44635ea02e5e17f87f6f6318</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_gtk_cursor_aspect_ratio</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aadff1810642e80349c2cfce26570a716</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab996d60f7c452606cd874d1afc275cde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a5eabf29eb196156b500415643481b861</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_dnd_drag_threshold</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a3cd67d26e0133917f21e8e69769a7bad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_dnd_drag_threshold</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa19e4e4adde6fa5fe05dca80006ab0ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_font_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6b2d701398186e690d5188a682bef694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_font_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a525afdfe6838c4b39be3f3f86e073fed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_xft_antialias</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a40906216244d171134659a8162db64a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_xft_antialias</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac53ef65c4dba90cc68a84bb0c737c842</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_xft_hinting</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a7de0aefe7a4b35d0c8d24b4081ba4831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_xft_hinting</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a809087fa518fb0dcd9c1a0aca3346a9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_xft_hintstyle</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab70bfb3a4909fd0ff035a223c57131aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_xft_hintstyle</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a8c9adff6658cd57ef8f2de6472818b58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_xft_rgba</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae0806cf7a045b3533c75993497c41d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_xft_rgba</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae52f294642239606070fe9fd3f77f8a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_xft_dpi</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a72482e82b467a451a395cbef87494073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_xft_dpi</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a5e157a5d51b74aa6f2cc4aaf8024428e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_hint_font_metrics</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aaf1a84b419f943ebe74bbcab2beae724</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_hint_font_metrics</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a476967b359a027e7d38934f7e060be78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_cursor_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a53c9a8bc8c1d6e6cb7287f47b75c9cde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_cursor_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a7ee6e6f137070a6b74c369e9d783769c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_cursor_theme_size</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a42f83d0d8409c8568d5a98b9e53f2934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_cursor_theme_size</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6ec1b03d61f56a844db547cb542ff390</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_alternative_button_order</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>abe3c942e8f579391e4491effdcbea7f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_alternative_button_order</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa66a14c81a32f11711305b31078c03b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_alternative_sort_arrows</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af6781dc7cc2e8de9dd5653811635824c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_alternative_sort_arrows</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a51b5de88bb0da8d6f7bafba591e8e7db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_animations</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4dca3b2d399f7e50144dfe5608a73a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_animations</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af9556ea6dac2898df0884a6bd5872bf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_error_bell</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a1b681b6df57734d3558ea9e78b37c4c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_error_bell</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac74ae2fe0742bae655d4774cdcf804e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_print_backends</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa20003edc12cb661616c396122ced517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_print_backends</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab4aa5a387b1d2b13b13b768243a4e1c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_print_preview_command</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a7192c330446b0ad3387a142788b423ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_print_preview_command</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a01f245fb4e9a5b079283e57ba64d816b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_accels</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aec5fb2cdc07d553a1300daeff077cee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_accels</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a53b4db3e2d482ce8e1ea9319062a6127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_im_module</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a206083fa7b0c7505238beae28378c333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_im_module</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a268371f396d5cd0100a1f00dc6264e7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_recent_files_max_age</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a79cd3c77fd21e4547dbe5711fb9eccd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_recent_files_max_age</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa989e5645e5f3a3c1885bd8774722eb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_fontconfig_timestamp</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aad58b83b15523b68bee5f3083f905975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_fontconfig_timestamp</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6cc142693853722aa3d03b2bc57d9eaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_sound_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>adc428a346ba795b9175e0c788a8859b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_sound_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a393f943835ca3c78962ccddc9eda92be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_input_feedback_sounds</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>abbd363537dce30150c2c4606a5ea1300</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_input_feedback_sounds</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af5f3975d5964c319e2ba4c54b67a145b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_event_sounds</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aeb7f94853b538d192b640e76fd7e3ab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_event_sounds</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a443c5b4b86428d16c0c3823f3a3182d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_application_prefer_dark_theme</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a40ac901fea4b95dedf972ed5aa971c51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_application_prefer_dark_theme</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a909dbfea73c06ae41238b0c73a9c6499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_app_menu</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a316d4cc839eb2ae4bba755e3a8d360c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_app_menu</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6a5983d7855b52408a6b6b7b24e211ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_menubar</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab26ce26aec3126fce33e1f9703665bcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_menubar</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae62966d21401aac6161262c23eb4a76e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_desktop</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a149111e304ec39b46e95dc27da6991dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_desktop</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>add6ba0e7981cc9d9e8e018cb56689dbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_primary_paste</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9708c91bd84caab9acc30b6822b2ad55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_primary_paste</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ad676b8d657cb4d59ca4b0476e85e8d19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_label_select_on_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a2e104e946d531dd41f6458750ecfc8e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_label_select_on_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aed6b435d0709a95684cb179decc4078b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_gtk_entry_password_hint_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9f302bc8638a5e995a6443a306c4f682</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_gtk_entry_password_hint_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a46ecaa2e96f1b0208759da4cc47eb0d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_entry_select_on_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a70db9ff7288fbb970435e0e7d4665a54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_entry_select_on_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac7667f6fcc0bb0cd950456331448e54a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_icon_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab28ff5868c4caa35c5ac64f2ab096d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_icon_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a5eb23516786b90bb55ea77369e2ef7ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_recent_files_enabled</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a138e4fd3e90b3398e2a2e42ab3ada764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_recent_files_enabled</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a45319ffcdc35608db09fd68bcd5090ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_primary_button_warps_slider</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>acf95ccbd0f307cc88ce7aead78572afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_primary_button_warps_slider</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>abe5b0da033e9ff91d8d481dd6752b787</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_decoration_layout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a64151266bf982437c1eefeabf163f105</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_decoration_layout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a0153a4b6b9717bff16b8ed75e9f1ad46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_double_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a42cd18e8951efa3753fe1d2f404c9c02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_double_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aceb80df78373b8a79b367b669a09dda6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_middle_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a91e6e816f29bce9ba38b3a0243c1ba5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_middle_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a23d5cbe6b0e28dad89978f77191ee963</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_right_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>afb8fca7271829b1ab751b839f5665da4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_right_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>acee418d3dde60e4fb2d2bdf05f74e45b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_dialogs_use_header</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a41ebb4fdfe1216712dfaeac43cad4543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_dialogs_use_header</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a88bebd272002b45f80bccc1183f7f4c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_gtk_long_press_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a21221af67f0334e12ec976b7e370aeec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_gtk_long_press_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a3b4958b71a44996b8e438a74185eebbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_keynav_use_caret</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac90c3f3edb775c28ff7e69d450453804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_keynav_use_caret</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a73620a7d5dff3a4b222a34c69b42bfeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_overlay_scrolling</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab395972ed52837a9a7f28b6bf2e98b1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_overlay_scrolling</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac146e7d2a68478e64d76051eeb0757be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a11d0b8caed8064bd341b4f18fec54d5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Settings &gt;</type>
      <name>get_default</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a935700b34ba84e1fc10a626d0b70ad61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Settings &gt;</type>
      <name>get_for_display</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4e83c77dae3ef311dbde128f8bcc0f67</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Settings &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a848b43a1ce44bfbb4f1286d8f36e0eee</anchor>
      <arglist>(GtkSettings *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Shortcut</name>
    <filename>classGtk_1_1Shortcut.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Shortcut</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a4b132704175e437429c62bbd497bad35</anchor>
      <arglist>(Shortcut &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Shortcut &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a43860b7ffecb99a77f48b3c6c549348c</anchor>
      <arglist>(Shortcut &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Shortcut</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a6a15c68ae20d3dd9ad83bf7f54b75113</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcut *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a4c9a60e293b13a1384c5fbf7c4b761bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcut *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>abe71fffae60ddf4e13daf019fba20755</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcut *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a8f2b97197585c37d53e7adf306b3c972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ShortcutTrigger &gt;</type>
      <name>get_trigger</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a524be29e5009f4ab8d6b5a3393f6a14b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_trigger</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>ace5fc82888dbc5177cd2620e48e6226d</anchor>
      <arglist>(const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;trigger)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ShortcutAction &gt;</type>
      <name>get_action</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a715e28151869908bfdc10832442dacd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_trigger</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a8b88873d7d3f765c4370dbae4abd671a</anchor>
      <arglist>(const Glib::RefPtr&lt; const ShortcutAction &gt; &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>Glib::VariantBase</type>
      <name>get_arguments</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a74bb7970873e5b4d5ee5ee2161e0fba9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_arguments</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a9ff0e43bb451db979eb608ba09819910</anchor>
      <arglist>(const Glib::VariantBase &amp;args) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; ShortcutTrigger &gt; &gt;</type>
      <name>property_trigger</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>acf3dbebad2340714e2360b765d67e543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ShortcutTrigger &gt; &gt;</type>
      <name>property_trigger</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>addf194919c341c3994dd52758d0e5998</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; ShortcutAction &gt; &gt;</type>
      <name>property_action</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a349912ccc14ff227794e1d626148f9e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ShortcutAction &gt; &gt;</type>
      <name>property_action</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a07a0728c05736516b87156c733bb59cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::VariantBase &gt;</type>
      <name>property_arguments</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a8090644fcb24357acdf518fd61baffca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::VariantBase &gt;</type>
      <name>property_arguments</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>ab5ce693e0126f6d4e183fed3ce0a0326</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>abadc6c89e64b23246ca18b2b12b5bf3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Shortcut &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>aee65c6b4c0def40d550aa0330d62a250</anchor>
      <arglist>(const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;trigger, const Glib::RefPtr&lt; const ShortcutAction &gt; &amp;action)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Shortcut</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a8fd91d812bf57bc2c2e521c9da8fd704</anchor>
      <arglist>(const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;trigger, const Glib::RefPtr&lt; const ShortcutAction &gt; &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Shortcut &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Shortcut.html</anchorfile>
      <anchor>a692010aeef812d8b963f7e300a1bfb14</anchor>
      <arglist>(GtkShortcut *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutAction</name>
    <filename>classGtk_1_1ShortcutAction.html</filename>
    <base>Glib::Object</base>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4a792efb57139359d7bc4e297ca3cd69</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4a792efb57139359d7bc4e297ca3cd69af45c3a0bb3687ed8e221253b3fd4a2ce">EXCLUSIVE</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutAction</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a101f62d2d4acba57206ec05167e76e6d</anchor>
      <arglist>(ShortcutAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a1aa97a36454f870ab31367764ec350e3</anchor>
      <arglist>(ShortcutAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutAction</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a2ea1fb7e1ff5de85265733536e17463c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a2a8312a80f5c2c10f4dfeccd64e48276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a958c302e890f4952033b1ae5d511c082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a4d0ab5f32e18474a00c69f1768cedd56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>ab7de0bd78f4de4c6448e91675f3636d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>aa96df73b6f56e4b2c73676e8ec2df83b</anchor>
      <arglist>(Widget &amp;widget, Flags flags=static_cast&lt; Flags &gt;(0), const Glib::VariantBase &amp;args={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a985dab597ed156a44468d745118f2854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ShortcutAction &gt;</type>
      <name>parse_string</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a90d675bc729f1e2682073571f744d09f</anchor>
      <arglist>(const Glib::ustring &amp;string)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShortcutAction</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a0647ae635d191bfaaa370fe1b0b18b14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ShortcutAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutAction.html</anchorfile>
      <anchor>a55ddd4f1ecf23d54a681203d0e59222d</anchor>
      <arglist>(GtkShortcutAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutController</name>
    <filename>classGtk_1_1ShortcutController.html</filename>
    <base>Gtk::EventController</base>
    <base>Gio::ListModel</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>ShortcutController</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a8ffddf9fc4eb97dc568c32201b9f2923</anchor>
      <arglist>(ShortcutController &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutController &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a7908737ac3bdbdea4bcb2a907be7df65</anchor>
      <arglist>(ShortcutController &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutController</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>afb657c8925e735b20270045c96e81530</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutController *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>acecc9d9c3b831d9014c31c0eb4781779</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutController *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>ac8c253c0e92719061e37e8caa4845b30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutController *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a61cdef055d91951036767b9444cbf261</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mnemonics_modifiers</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a04efec8b5e43532c68f4a5359846ca87</anchor>
      <arglist>(Gdk::ModifierType modifiers)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_mnemonics_modifiers</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a958b634221cf72f3b7fcc6dbbf3406eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scope</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a4927145b971e8167ea091db68d210fad</anchor>
      <arglist>(ShortcutScope scope)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutScope</type>
      <name>set_scope</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>afb74ec57a539c28a66d740a05d21d704</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ShortcutScope</type>
      <name>get_scope</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>ad7055a68f90adbd718af7b97f93bd334</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_shortcut</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>ac725c541a245ee08b80fb7d2379e69e8</anchor>
      <arglist>(const Glib::RefPtr&lt; Shortcut &gt; &amp;shortcut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_shortcut</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a4f9a469611c9ee05d2e72ef9813ad53c</anchor>
      <arglist>(const Glib::RefPtr&lt; const Shortcut &gt; &amp;shortcut)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a69941e6f85e4d16da604d05fcde5aff6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::ModifierType &gt;</type>
      <name>property_mnemonic_modifiers</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>ac0c0c8347f184e2c468f668a613ee22f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::ModifierType &gt;</type>
      <name>property_mnemonic_modifiers</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>afa5e627336a727eb32e3cbca2396a2e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>aa65d930e1eb0f3b1a78c3a2c0f93c6cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShortcutScope &gt;</type>
      <name>property_scope</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a8b9342b6791a367d1b4288ff8aa5385e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShortcutScope &gt;</type>
      <name>property_scope</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>aea9bad35e5c44a07daf3ece50288fafd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>aa9f97b589bff39e7baa8503ffee39817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ShortcutController &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a3bdbdc047c5a26972b12b02514ce830c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ShortcutController &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a64395a3121b5ec60a2c9299f79f4149b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShortcutController</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>ae327b7171056fe4f8c0bc9d469a37f18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShortcutController</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>ac155850798c297e128676622d5f1de00</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ShortcutController &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutController.html</anchorfile>
      <anchor>a8cac332296d96578ec88b53145705dca</anchor>
      <arglist>(GtkShortcutController *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutLabel</name>
    <filename>classGtk_1_1ShortcutLabel.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>aa6d0fb688ea029abcaf34e79e275e84e</anchor>
      <arglist>(ShortcutLabel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutLabel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a0cda1b439109018d60ac00e262ce7a59</anchor>
      <arglist>(ShortcutLabel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a430c23127435c1c541288a973168b7f9</anchor>
      <arglist>(const ShortcutLabel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutLabel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>adebfd6f3365d94b0aeb8d7bf3e35a507</anchor>
      <arglist>(const ShortcutLabel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>af568239403739c7de734006f9f3e25a3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>ac351c1d87aff1d0423cf4d1e6dd99acd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a8a050846f2fa387655a68da2aca37848</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a3233d4a78dec19e4b1d46cc5ddff4c1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a8d6586bc4fe0eb76d8cd43dd81f65113</anchor>
      <arglist>(const Glib::ustring &amp;accelerator)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a2afed16e381073974a2861b889985529</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>ade06f3fe38c54f2e52b9693be6b60038</anchor>
      <arglist>(const Glib::ustring &amp;accelerator)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_disabled_text</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>ab91f88935a6d9c4c59ee05fd94fc3412</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_disabled_text</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a577e3795265ad63358c60a4a47b30d5e</anchor>
      <arglist>(const Glib::ustring &amp;disabled_text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>af2ab68f4f762caafb8088c84fa6d7dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>ad323e7227b1aa88494b172d4b2e21836</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_disabled_text</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a647974d2989d64b4e83efe8c9fd9a341</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_disabled_text</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a1544f9d428e830503956b397c52ea68e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a94c0551350f582bd74ba083d46fc708d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutLabel *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>af306b6886db3f9129c2f467cd72dad86</anchor>
      <arglist>(GtkShortcutLabel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutManager</name>
    <filename>classGtk_1_1ShortcutManager.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>ShortcutManager</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>ace47cf1224ef2877b67c959f9caf6855</anchor>
      <arglist>(ShortcutManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>a2485a5e2eda3729e498ec857848ed5fd</anchor>
      <arglist>(ShortcutManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutManager</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>aac00de59156042f2f63ca5bc615c8d1f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>affe86eb7659cf4d5bdedb647da59a1e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>aa05be7c1b6d52ce210b98bd968ed65ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>a6f300e21f2d3ab872806dba6347e746f</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>ac456e1a4c9683cdad49bff78cad0f683</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShortcutManager</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>a30cb5000eea04fbbbf584c5c29f89e6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>add_controller_vfunc</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>a7b7c40f69b5626941b69acdbf6fdfe91</anchor>
      <arglist>(const Glib::RefPtr&lt; ShortcutController &gt; &amp;controller)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_controller_vfunc</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>a1cafd8babc13d14b1ce30df5ea41a3f1</anchor>
      <arglist>(const Glib::RefPtr&lt; ShortcutController &gt; &amp;controller)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ShortcutManager &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutManager.html</anchorfile>
      <anchor>af4b74974c33e34dbebdb79408f3f45f3</anchor>
      <arglist>(GtkShortcutManager *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutsGroup</name>
    <filename>classGtk_1_1ShortcutsGroup.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>ShortcutsGroup</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>adb9ed97dda1c2a1fb5b19434c398645f</anchor>
      <arglist>(ShortcutsGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>ad2e345215604850b1446ec617dbea49a</anchor>
      <arglist>(ShortcutsGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsGroup</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>aeed68a6d453cf0518bd63a28f5c0768f</anchor>
      <arglist>(const ShortcutsGroup &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a2f0baa8078aa2026a34e1360dec7c350</anchor>
      <arglist>(const ShortcutsGroup &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutsGroup</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a7d9fafe4d8ff036db2477b1f71c4df22</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutsGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a69ba53c96b0fd2ed1fb247a71393fc38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutsGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a9ca7295b596a6c5dfc603fe50af7823f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsGroup</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a3a0350a98e990f78d31dc156adb4b5da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_view</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a6588886ea25999c05ce60a3c31d81fc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>adcebc992ca4aa70458bb4e5d866752bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>ad1f986b54fb069833b1192dd79de3394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_view</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>ac9105f828036ba99b3d951f03491fdd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_view</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a710c4a79286588fe5e9a683b73d52759</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>ada25f47f914c06012e1d06164ac6a857</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutsGroup *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a5e11ba683104e4a344e7c64fe99b6208</anchor>
      <arglist>(GtkShortcutsGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutsSection</name>
    <filename>classGtk_1_1ShortcutsSection.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>ShortcutsSection</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>ace5749086cef9216c3199eff3c76d3e1</anchor>
      <arglist>(ShortcutsSection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsSection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a5bd938f0cae3da0f6a6dd2dd016e3f42</anchor>
      <arglist>(ShortcutsSection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsSection</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>af099ceb4298341deb8354da574973523</anchor>
      <arglist>(const ShortcutsSection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsSection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a675274713c6c2f880d056fa5f50c4bcc</anchor>
      <arglist>(const ShortcutsSection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutsSection</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a57192bd773b835c93c8ee82b4b32f6c1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutsSection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>ab37049bcf6c94f9326a9ea89cb0e113f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutsSection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a8a46178f839b15e9e853e45f5ad6bce4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsSection</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a3e30f863873999f85a58d0163c3c97dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_section_name</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a8ace0b8b54ad21e0bf91801b5ce033e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_section_name</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a70d43bd52df0d033864ca69d722305c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a6becfcd1ab2d777a7dc55360eec8da18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a0e7fbd51807e59a8ea283305f33f598c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_max_height</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>ad81a2fd425f90b929999e2d5aa3698a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_max_height</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a969ccb601ddb92d0fdf0cae87d656ed6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a7328b74d1d919195867ef50d9d8462ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutsSection *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a04b058d6ceb5584d7f64165f8afe9124</anchor>
      <arglist>(GtkShortcutsSection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutsShortcut</name>
    <filename>classGtk_1_1ShortcutsShortcut.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>ShortcutsShortcut</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a370a6428a0d7f05b678f0ecb0a72e991</anchor>
      <arglist>(ShortcutsShortcut &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsShortcut &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a9ed1880ec899081720c28abbbd562a98</anchor>
      <arglist>(ShortcutsShortcut &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsShortcut</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>aaf6129204bd6f7bb8f55a6e157502611</anchor>
      <arglist>(const ShortcutsShortcut &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsShortcut &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>ab222332d3cd5d4c1d338bfa0c55d36e6</anchor>
      <arglist>(const ShortcutsShortcut &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutsShortcut</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a885af3ce0df7b357d53bb386762ba329</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutsShortcut *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a4c94df0bd261fabae843aa12942103a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutsShortcut *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>abae1caf0686818122b5618010f22195d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsShortcut</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a0c8b6e0af893e41bd02c974c0c3c9806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a1b483692852c9d2c62ee3ad9a2b49026</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a00bf094a04f556e8bfb24f494440ca5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_icon</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a561e8efbab2f38bff4c8d3e925715e12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_icon</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>ab4dd927772eef8998f8170d6a2a4e374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_icon_set</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a16ee6bed1ece6d8e7cae446abed22e2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_icon_set</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>acb8cacdd934544733606c595913d0f98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>af086037e3e1e6498afdb774d1ce27184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>aa403c88fdaecc783f48863f004db94b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_subtitle</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a2ba22717ba230894eee7b4dd9b2cc8e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_subtitle</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a9a13aabfdcb632d4f34613b1999dfcad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_subtitle_set</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a35470404b56927c65b21ddbb4669c933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_subtitle_set</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>abd877b3da84cb516d7d4d9a0f25a792e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>aa251cd626930ec02c0e2f5a37d7c73fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a4be04649f9e484f695606544a78f436e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShortcutType &gt;</type>
      <name>property_shortcut_type</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>aac0d2e2c63f376687375e8af22069867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShortcutType &gt;</type>
      <name>property_shortcut_type</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a69ce8cb93ec7eee0c9bb9a44f32a40ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a7b63ad6d70797a44935df975aa2c89fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a4ed0d0a4ef3fe630ab491d38b7288a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a57832f3dfde3cfe4c165974ea8945a86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutsShortcut *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a06d88608796f3e338b0f679bf4f6ecaa</anchor>
      <arglist>(GtkShortcutsShortcut *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutsWindow</name>
    <filename>classGtk_1_1ShortcutsWindow.html</filename>
    <base>Gtk::Window</base>
    <member kind="function">
      <type></type>
      <name>ShortcutsWindow</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>afeb2917c25eadef66896f908a7d2bf64</anchor>
      <arglist>(ShortcutsWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>afb740e7b8025f9db28cf3c14092e07a9</anchor>
      <arglist>(ShortcutsWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsWindow</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a5fc354e7da0c97905b959481a3aac91d</anchor>
      <arglist>(const ShortcutsWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>aa47ee46b161b5181d9528ef5aad22e44</anchor>
      <arglist>(const ShortcutsWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutsWindow</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a749ac95d38072439af96d133a1b67255</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutsWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ae9535b63b70b5ae9a42e6764b138f383</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutsWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a48931f456048b791476d4333dbbfc615</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsWindow</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ab585a8784148dce01074c61738e3cb6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_view_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a434ee880c55cd0122b6182c2b1ecd4c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_section_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ab01347d877ef066011a2def5416975b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_section_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a78d222305799a96abbd62e3a9e9738e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_view_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a4ba99fbf7d540fab0cf511ee6373991a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_view_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a6c662f0d578618334510946ab11e9d28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ad2010df8eec9926bedd50027a86987a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutsWindow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ae5144c2a448f38f13ecd88c87de96ac8</anchor>
      <arglist>(GtkShortcutsWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutTrigger</name>
    <filename>classGtk_1_1ShortcutTrigger.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>ShortcutTrigger</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a800b0e544bf12eb60192561377263ba8</anchor>
      <arglist>(ShortcutTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutTrigger &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a780307a30091fa86068747f73a0391a0</anchor>
      <arglist>(ShortcutTrigger &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutTrigger</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>adff59243ffb5eed69729786ce2d73565</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>ab6e2cff250d4e4cdeca47376b6c098fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutTrigger *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a16d8bd87146d1e34269cca53d565760b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutTrigger *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a8ac9f79d87df92b5267e969ecf6479c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a2ce03ef035a9fd2609eeb1ec6da53239</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_label</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>ab1142cf061c74c3707f092e51917c585</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Display &gt; &amp;display) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a89e95963782f7036689678ff31de21d8</anchor>
      <arglist>(const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;trigger2) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compare</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a4697c20d6111d940bfc1222c6d6b4863</anchor>
      <arglist>(const Glib::RefPtr&lt; const ShortcutTrigger &gt; &amp;trigger2) const</arglist>
    </member>
    <member kind="function">
      <type>Gdk::KeyMatch</type>
      <name>trigger</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a79d8b8e3019c05e152cd6c1d9c9d7792</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Event &gt; &amp;event, bool enable_mnemonics) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>af5d7c8e9b34b5d07032acd0655cfca60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ShortcutTrigger &gt;</type>
      <name>parse_string</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>addc504abedabab29eee9a56d0a20b6db</anchor>
      <arglist>(const Glib::ustring &amp;string)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ShortcutTrigger</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a4e5279ac883747355ad543594cb0d167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ShortcutTrigger &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutTrigger.html</anchorfile>
      <anchor>a3b3b220be884b770a6b2b6d31eeae013</anchor>
      <arglist>(GtkShortcutTrigger *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SignalAction</name>
    <filename>classGtk_1_1SignalAction.html</filename>
    <base>Gtk::ShortcutAction</base>
    <member kind="function">
      <type></type>
      <name>SignalAction</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>ae25182c8009baec9e879c3581e5fe944</anchor>
      <arglist>(SignalAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SignalAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>a06bc412516f3dfdcec274097fadcfce7</anchor>
      <arglist>(SignalAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SignalAction</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>a57cbbef652d46107ae481cc772f8e4a6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSignalAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>a3f9f2de654b2451eda0ebd385a7f7559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSignalAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>a58892ce6aef4c5d0e30235a53be185f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSignalAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>af9197b7a17aea49875083d0c4b563852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_signal_name</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>a6ea874e98d8eecfcd648a85b24cdf491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_signal_name</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>aaf549e7ee1bff2c6424de55d8fce6384</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>aab53c0217ddc02082ccae72ac709b646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SignalAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>ad1055b62106389a01e6c2d3342261af4</anchor>
      <arglist>(const Glib::ustring &amp;signal_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SignalAction</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>a61c24088ddd1070cf7ebe257b42bf714</anchor>
      <arglist>(const Glib::ustring &amp;signal_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SignalAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SignalAction.html</anchorfile>
      <anchor>ad8559e312ca44b5e958f7821f1f6573c</anchor>
      <arglist>(GtkSignalAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SignalListItemFactory</name>
    <filename>classGtk_1_1SignalListItemFactory.html</filename>
    <base>Gtk::ListItemFactory</base>
    <member kind="function">
      <type></type>
      <name>SignalListItemFactory</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>abed1e1c43d950159693d2db3e0a6edf1</anchor>
      <arglist>(SignalListItemFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SignalListItemFactory &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a76e04ea5e0cde49ab4545250f7808c07</anchor>
      <arglist>(SignalListItemFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SignalListItemFactory</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a70eb0576647133de2f764c71f9216ff1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSignalListItemFactory *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a3c94c00062b739ebd1491e2982c3f38c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSignalListItemFactory *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a687f191f525122d6cf750df68871a97f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSignalListItemFactory *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a67eb9b6c37485ad4f03ff8c103f7e22d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; ListItem &gt; &amp;)&gt;</type>
      <name>signal_setup</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a798439711bdfa9e3ae31c0d2c1e03031</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; ListItem &gt; &amp;)&gt;</type>
      <name>signal_bind</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>ae8fb10037aacad031a339d65444a0996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; ListItem &gt; &amp;)&gt;</type>
      <name>signal_unbind</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>acadb2b72c02d3ac405f55e5f30ecf42d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; ListItem &gt; &amp;)&gt;</type>
      <name>signal_teardown</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a3b7ba9834c469bd60fcbbda6540fc2a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a05e3f5e8f48abc41db7c40485e80d46b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SignalListItemFactory &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a99836ce01f8455c00999471c07cdd2ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SignalListItemFactory</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>aa043ece7eab7de4eb770adca4cf07a6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SignalListItemFactory &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SignalListItemFactory.html</anchorfile>
      <anchor>a17a72b5c793d79a12161b4c659f74868</anchor>
      <arglist>(GtkSignalListItemFactory *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SingleSelection</name>
    <filename>classGtk_1_1SingleSelection.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <base>Gtk::SelectionModel</base>
    <member kind="function">
      <type></type>
      <name>SingleSelection</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>af31111e7aa5b20950e55303ce63d3114</anchor>
      <arglist>(SingleSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SingleSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ad4ab9a24a7690e2d85756ec16cde8107</anchor>
      <arglist>(SingleSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SingleSelection</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>aeb829d0fd81a5963be8c797ff0365b1a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSingleSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ad9aefae462f00b0cde04301469111c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSingleSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>af118635b51e588ec417f99dc6e9d2100</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSingleSelection *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>af3c9ba862d543eb33851587ac038fb17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ab143a8d878e29229acb26fb3c64c7df6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ae0012a878d000e706d6ac475a4f5341c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a919d79b0ddf3d7f5fd49fe31b8a01c1c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a54e413ee16eb61b68749ea764788a0f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selected</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>afd0edbace5286b2f24c2d43049b08573</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::ObjectBase &gt;</type>
      <name>get_selected_item</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a080ef6a8f131202f812eceb824a96979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::ObjectBase &gt;</type>
      <name>get_selected_item</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ae04b868a90d4f6e6abd83690e921a8e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_autoselect</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a3b2ededeb0d05a17b85e474a60206750</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_autoselect</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a20c8769c351690ff42be675c48d08d1f</anchor>
      <arglist>(bool autoselect=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_unselect</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a736097bfef5e4006db2f07b0561bbdd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_unselect</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ae96a3de85771be4ab3ad7cf6fd84ff3e</anchor>
      <arglist>(bool can_unselect=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_autoselect</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ad512c7bac0d1f40f8238d4de58f757dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_autoselect</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ac4ae3b0447cf09790e46828b47037f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_can_unselect</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a08a3e5aa0dec555a4c66b9d9c9058b9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_unselect</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a9ffa1f0e03b926f4cbc417202ab66dc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_selected</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a628b2a23b4dc3c1d83f0e8015e717673</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_selected</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a4d6af2b0e13d98af0f0753e2b9c397fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Glib::ObjectBase &gt; &gt;</type>
      <name>property_selected_item</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a2729ca413e0e7013bb6a0e775dd03777</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a3cd4cedfa1e414187da789fb832daf69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a090459c9b219b6e7a1d407e59fd7eab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a15a3f4b44456254014afff5ee9ca0fc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a081c36237ca7172eb7d1d6c985e7d46c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a598975302eb124e10c949090ffa54e82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SingleSelection &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a4e927faffdfe354703d348ed9dab117b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SingleSelection &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a31d85ea8521a5a93c4531ae34afb3968</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SingleSelection</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a01c498870cf3a9ea4854d2ca0983a426</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SingleSelection</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>a147386557298c59353509985bd7a819c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SingleSelection &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SingleSelection.html</anchorfile>
      <anchor>ac24e2b52f3ab2fda76208db5f9768671</anchor>
      <arglist>(GtkSingleSelection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SizeGroup</name>
    <filename>classGtk_1_1SizeGroup.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::Buildable</base>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga29a4a38f862c3d596fe44d2c55882730</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga29a4a38f862c3d596fe44d2c55882730ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga29a4a38f862c3d596fe44d2c55882730a86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga29a4a38f862c3d596fe44d2c55882730a3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga29a4a38f862c3d596fe44d2c55882730a6328e5e3186c227a021ef2ff77e40197">BOTH</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>SizeGroup</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a8099eee55cd14d1286b96f0474db676b</anchor>
      <arglist>(SizeGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SizeGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a61bfb7a2bbcd3672ec243f20e2dbd62f</anchor>
      <arglist>(SizeGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SizeGroup</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>add99da998a8f229977144091e7876327</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSizeGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>afbd6958d54324554818300bada2ffd24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSizeGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a5235142effb14a54741f2ee2621f839f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSizeGroup *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a1ab82c162c73e5ccb4d957c80da70e7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mode</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>aa37215a5012e5df53779a681eb190ea8</anchor>
      <arglist>(Mode mode)</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>get_mode</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a4496f16aad77f66c9246f73cbcad52e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_widget</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a04a5dfe9cf8aecf92c98bed118c6f469</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_widget</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a453030fa3bed8b0351daacdb720074c4</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>get_widgets</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a4ceac73743de637d12d0176a8eb4baca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>get_widgets</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a84f9b011a3d6b715e7a069dbea2c0501</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Mode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a550066a3effd82d273f21f857922a865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Mode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a1188793d59e83bc6f9674c6b2921e8cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a96064f393c7e390bbb0b279889dbdda2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SizeGroup &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a9877c096c5b552d8fbee752354e2a19f</anchor>
      <arglist>(Mode mode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SizeGroup</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a7967210a167c8c53d1e5fb57740680c6</anchor>
      <arglist>(Mode mode)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SizeGroup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>aab19ca78f44ec8ab815a8a96fcdc4a0a</anchor>
      <arglist>(GtkSizeGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SliceListModel</name>
    <filename>classGtk_1_1SliceListModel.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <member kind="function">
      <type></type>
      <name>SliceListModel</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>acf9a291ef282a96f8ec541a59b13ca62</anchor>
      <arglist>(SliceListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SliceListModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a25dd0e869f494bc1afc9aaed0175cf5a</anchor>
      <arglist>(SliceListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SliceListModel</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>af02fb24d978f048128dfd9ad82ee563d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSliceListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>ad9e0cc84f09ba4ff647ca06c7fb471b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSliceListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a6b048b210d0d57661618c3dbc24854e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSliceListModel *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a3f108bf866e7312ab159a0c09f5f6890</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a721609dc09b4e7df6e246c2ad78e99d9</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a28b22aadf6b87bb6e9f5365e4a1e15ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a48b50987b8acd4048aad61ec26a6729f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_offset</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a5f689bc1946b1c4cf84d538cff89425c</anchor>
      <arglist>(guint offset)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_offset</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>aadb2cadf953a27795545039227556824</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a7ed40b0a4357d2a52350342fe404a2c0</anchor>
      <arglist>(guint size)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a98482961f102d9b68a26ce08ace345e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a580f15720f9d1919b79479f6afa992a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a7160465a346460195fb2ccf924f8931b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a7728e7f717dc74bc554c2792753cbc79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a798aaa9c0c5290aa0963c64fea48fc0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_offset</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a4dc900fb77581ed3bfecdd5d98bef1cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_offset</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>abf0e04ddc60818af0fb7c1c0ae7e5886</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>aaeb7ceae9e73000c95e3d34fc4bb9ef5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a6c8f0fe3867b09dc295f79c96d73ec70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a7d00b58dd67d4cde8159cb669c596a67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SliceListModel &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>aa2e068777604a17ec7c4debda29edbf9</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, guint offset, guint size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SliceListModel</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a2b8d688fac267af3c1a05a6be7999f21</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, guint offset, guint size)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SliceListModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SliceListModel.html</anchorfile>
      <anchor>a08b100a4c1ad1cdd364ba5da5077975b</anchor>
      <arglist>(GtkSliceListModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Snapshot</name>
    <filename>classGtk_1_1Snapshot.html</filename>
    <base>Gdk::Snapshot</base>
    <member kind="function">
      <type></type>
      <name>Snapshot</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a058cc13cf70a7baa5c8ed07b5ab3423b</anchor>
      <arglist>(Snapshot &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Snapshot &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a7698cd3b555ef561ac5f5fd8e0366998</anchor>
      <arglist>(Snapshot &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Snapshot</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a90a75fcbd70d5e7ba78f2ed813ba7dae</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSnapshot *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a0ca010f57f2f03a7e88252a8398a6323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSnapshot *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a1f7d0e644caa25f49618b4f0d8ad00b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSnapshot *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>af08bc7ede2b180fb15a2610bdff80480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_debug</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>ad3878d41986f6a3cc44a05e2f552bd99</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_opacity</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a39e7c75915c44b7dd70ab2767ca00708</anchor>
      <arglist>(double opacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_blur</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a7b89c79aa248e0a52785ff8298fad004</anchor>
      <arglist>(double radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_repeat</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>af3efd6ad18de38b643cd41027ebfb54e</anchor>
      <arglist>(const graphene_rect_t *bounds, const graphene_rect_t *child_bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_repeat</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>abc20f240c4fb71238ab323f806f1eab8</anchor>
      <arglist>(const Gdk::Rectangle &amp;bounds, const Gdk::Rectangle &amp;child_bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_repeat</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>ac228abb7bac5ec80fadca2ec0cafa9e4</anchor>
      <arglist>(const Gdk::Rectangle &amp;bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_clip</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a31439595ef0de9eaf8020f27e78fbba1</anchor>
      <arglist>(const graphene_rect_t *bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_clip</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>adeb176a0d00dd554989470ee4687661d</anchor>
      <arglist>(const Gdk::Rectangle &amp;bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_cross_fade</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>aae6744460f465f6c800b5e2241b7c9d7</anchor>
      <arglist>(double progress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gl_shader_pop_texture</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a0534733b35d53a3a23c58a068daa3419</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a06eba439a401fb5377bad38965047a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>ae9fa59ec0df2763db5ca4a9537416825</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a5612f728c9149da95202da1f853354f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a21722747dce17f0f4ce8ac37d71958d2</anchor>
      <arglist>(float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>acf43a8a10ab544816cef9e45b5c27f65</anchor>
      <arglist>(float factor_x, float factor_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a958eb77908141c5f20c8066406b6bad5</anchor>
      <arglist>(float factor_x, float factor_y, float factor_z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>perspective</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a47c6ee7c7af2dd0c947449772eaf7077</anchor>
      <arglist>(float depth)</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; Cairo::Context &gt;</type>
      <name>append_cairo</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>ae13de4fcf930786c6e48ce7030e7e5f9</anchor>
      <arglist>(const graphene_rect_t *bounds)</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; Cairo::Context &gt;</type>
      <name>append_cairo</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>adb97c4df881d85bb2a5dd4fbdabc3fbf</anchor>
      <arglist>(const Gdk::Rectangle &amp;bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_texture</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>ae9a1dfc727d962eded20fbe73f26a36c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Texture &gt; &amp;texture, const graphene_rect_t *bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_texture</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>ad0634484bd86e463f7e662d1b6c2f66b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Texture &gt; &amp;texture, const Gdk::Rectangle &amp;bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_color</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>aa5b56ea12d0175c3b24dfbfcb78656db</anchor>
      <arglist>(const Gdk::RGBA &amp;color, const graphene_rect_t *bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_color</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>ad610919f2945465472ac91fa719dc9ad</anchor>
      <arglist>(const Gdk::RGBA &amp;color, const Gdk::Rectangle &amp;bounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_layout</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a1cf98b78833c144e09f259f10041f30f</anchor>
      <arglist>(const Glib::RefPtr&lt; Pango::Layout &gt; &amp;layout, const Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_backgrount</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a068e16b842ef77a9cbac218d1ca8d2f5</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;context, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_frame</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a96eaf275191225f49111914662cf6ff1</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;context, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_focus</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a5ec062d7b4c176b33812a403673ea22f</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;context, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_layout</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>aabf5494dd3e147f9ef09939a288fc6e9</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;context, double x, double y, const Glib::RefPtr&lt; Pango::Layout &gt; &amp;layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_insertion_cursor</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a835608fc977b70dfb27d2e227f0c7a29</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;context, double x, double y, const Glib::RefPtr&lt; Pango::Layout &gt; &amp;layout, int index, Pango::Direction direction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a550c1e027e90527cbd34200c224aaf5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Snapshot &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a5c071f5e4d5170c56d6eae808129a3f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Snapshot &gt;</type>
      <name>wrap_gtk_snapshot</name>
      <anchorfile>classGtk_1_1Snapshot.html</anchorfile>
      <anchor>a68ed89428dacab1b088f9363a45c5f16</anchor>
      <arglist>(GtkSnapshot *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Sorter</name>
    <filename>classGtk_1_1Sorter.html</filename>
    <base>Glib::Object</base>
    <member kind="enumeration">
      <type></type>
      <name>Order</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga32d91a07c2942c4bcc0c8811ff6e4ca9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga32d91a07c2942c4bcc0c8811ff6e4ca9afba5cdfa4bcb408f641c743519a0fe19">PARTIAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga32d91a07c2942c4bcc0c8811ff6e4ca9ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga32d91a07c2942c4bcc0c8811ff6e4ca9a3af22b59f4641bc5501998297f9ac70d">TOTAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Change</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5408a7c6f2ea6ac055b2bef81e8d4e5d</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5408a7c6f2ea6ac055b2bef81e8d4e5da0b744563be36b7a48a74c50ca8cb6086">DIFFERENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5408a7c6f2ea6ac055b2bef81e8d4e5da3b1b4a4827c05897abb3915b5c8f8139">INVERTED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5408a7c6f2ea6ac055b2bef81e8d4e5dabcc8a989e619cf65df48a50a91683252">LESS_STRICT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5408a7c6f2ea6ac055b2bef81e8d4e5da5efeef338b2c0e8b36bef3ee2ce65e5a">MORE_STRICT</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Sorter</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>afc9c484e1106a8b064cdf8a83b46d51f</anchor>
      <arglist>(Sorter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Sorter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>aa09bb6f9e09d755b29ea1b04baa28999</anchor>
      <arglist>(Sorter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Sorter</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>a03e896d0fe327a253cd2a4eaef9f98de</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSorter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>ac0ffa232111e21db4ebd5ccb86cd21ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSorter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>ad06778e6317f42485f48ac3ab469f456</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSorter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>ad9949b65572e96e87685b8830862b1f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ordering</type>
      <name>compare</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>a10fff27fd3ef6cb747904ae4d36ce15f</anchor>
      <arglist>(gpointer item1, gpointer item2)</arglist>
    </member>
    <member kind="function">
      <type>Order</type>
      <name>get_order</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>acbaf0bfc46e139529816d1e3990d13df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>a361779c461e1d8b837e0f29164a9fffd</anchor>
      <arglist>(Change change)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Change)&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>ad1c30b87eafac2d1a447a1cb6729f24b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>a9e4ed1705e1f5a06ee03c11677239fd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Sorter</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>abfbe21ec70b5b5491ea8c2dd09604326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Ordering</type>
      <name>compare_vfunc</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>aba17576ca5b6dfa5e95b4de18dd4d80f</anchor>
      <arglist>(gpointer item1, gpointer item2)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Order</type>
      <name>get_order_vfunc</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>a4d6d64b26c48d5b33dd57c5ec0f7f3e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Sorter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Sorter.html</anchorfile>
      <anchor>ac65a0ec3dd814c7ef61b1c016dcb77c6</anchor>
      <arglist>(GtkSorter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SortListModel</name>
    <filename>classGtk_1_1SortListModel.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <member kind="function">
      <type></type>
      <name>SortListModel</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>acb79172f97ee47b5b0c0cb52e64e66fa</anchor>
      <arglist>(SortListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SortListModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>aaa9dc71c0eb20a3cdbadfffe7ba1c1af</anchor>
      <arglist>(SortListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SortListModel</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a359d981a1f412efe20cf6a2150624223</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSortListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>aa67530037e81872f56a98d776c3c9f45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSortListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a15de3c5bf0d7a7144711d1e7d2cf3e15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkSortListModel *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a2f5a9fe7c2f0557fec5960788b989e6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sorter</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a291fa5e5d965493589f043b1c2681261</anchor>
      <arglist>(const Glib::RefPtr&lt; Sorter &gt; &amp;sorter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Sorter &gt;</type>
      <name>get_sorter</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>acafc88b27ea37ddb825cf6cdb589d021</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Sorter &gt;</type>
      <name>get_sorter</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>aa3acaa039c1e5d57c796b2bccc9ca702</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>ad0abefb1cfa3fe9844d2ec8b76dbbdc4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>aa5ca13db80c3d02fcb86bdfb5dd5a456</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>ac3c789f0a5e0ded181ee8c4d9d3b40e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_incremental</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>aa511b37fc932e15dfc7f4f2952c8ec28</anchor>
      <arglist>(bool incremental=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_incremental</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a8c9192dca80ddf30e979163809aab9a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_pending</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>ae3bd340ec104f655b4e5e76187e7c2a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_incremental</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>ad3bef507e0f954303bbc2ffd5591a2ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_incremental</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>acb14b8759a0fa009e67acef4fb7be184</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a18bdb9db025113b3bc0d35a99badb28f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>aadd234b9f7aa227902b52692837b6ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a045c9f5d51c5ea84a14ffba5b934638a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>af12297f4d14b1308b7bf7842d477c460</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_pending</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a4a4df7a2bb9974ae14aed25695febde6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Sorter &gt; &gt;</type>
      <name>property_sorter</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a586d192187fb50e25869c16c357f526e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Sorter &gt; &gt;</type>
      <name>property_sorter</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a2f6d2ef5c9ccb421795dc6183aa55027</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a0388727a372e5d5335c835973dbd8116</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SortListModel &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>ab213192d9b77f86db758375c669e4326</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, const Glib::RefPtr&lt; Sorter &gt; &amp;sorter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SortListModel</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a31107946fd6af0523c956a63df6180cd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, const Glib::RefPtr&lt; Sorter &gt; &amp;sorter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SortListModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SortListModel.html</anchorfile>
      <anchor>a94f5f8477fc8bac4b9356c7d6fad2dba</anchor>
      <arglist>(GtkSortListModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SpinButton</name>
    <filename>classGtk_1_1SpinButton.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <base>Gtk::Editable</base>
    <base>Gtk::CellEditable</base>
    <member kind="enumeration">
      <type></type>
      <name>UpdatePolicy</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaebf700edeb39a06fc0f95f8f877523f2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaebf700edeb39a06fc0f95f8f877523f2af3fc827ade4b968e50406496907ef962">ALWAYS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaebf700edeb39a06fc0f95f8f877523f2a3ccc8225dfb3c701d6fac4be2d4407f6">IF_VALID</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>INPUT_ERROR</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga4faafafaf8812caae585e24c610c18f4ae015061ab5e9d50981f488a3e312d435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_ERROR</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga4faafafaf8812caae585e24c610c18f4ae015061ab5e9d50981f488a3e312d435</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a86459b024b4139d80166948c87ac68da</anchor>
      <arglist>(SpinButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SpinButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a457824331ec6f8ce6e4b1cf5641bbe1c</anchor>
      <arglist>(SpinButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a07ff80acbd6ada5ffb0c91cde256e203</anchor>
      <arglist>(const SpinButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SpinButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aa484ec4e145a220d5a027f3872348c35</anchor>
      <arglist>(const SpinButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a883499ae8bdabb7e1d6cfffb3ad3706d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSpinButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8f8d443a53121273bd7b464a347690da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSpinButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>acb4f5f4433be2d8d8a1994ca3ffbd9b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a42ce311c125de708c3e6515925c13dfc</anchor>
      <arglist>(double climb_rate=0.0, guint digits=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a89431a5f824c3e31d04949c990af8ea8</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment, double climb_rate=0.0, guint digits=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ab5b11a1af5508f19ef361c7f57a4d2f3</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment, double climb_rate, guint digits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a74cc3f16b49ab6eabaa9da2195156ede</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ae1e334e711e195441c5b1533bd05ca2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a89a5150bfa51a84360b5114c9846a20b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8b4a4695b5719716a84ef03ada4cbd7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_digits</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a2d6913e87673bf34b04afd4595ffd797</anchor>
      <arglist>(guint digits)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_digits</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a384353de2082c2986f42ae6e1230445f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_increments</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a879b8eff06f35012b00453aad93f8a72</anchor>
      <arglist>(double step, double page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_increments</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a348cae0882db5db3fcab2b73643e65a1</anchor>
      <arglist>(double &amp;step, double &amp;page) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_range</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a7fdcf657e0776f2ca748e6f653b2d404</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_range</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a55c3e584e36d397d4064ebb9bede1431</anchor>
      <arglist>(double &amp;min, double &amp;max) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a616e12297e645416ac364fd350503e24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_value_as_int</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ac8430532ce3d561647b65375321f4ea3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a6ccada5358fee59092b2cbf89c7bdc89</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_policy</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a959651d8ef5c9c6a50b4affd8789917c</anchor>
      <arglist>(UpdatePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>UpdatePolicy</type>
      <name>get_update_policy</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad9631bd8888b854cc1b20412ae3594ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_numeric</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a02b4b86b909c1c3410cfd8c77dbaa804</anchor>
      <arglist>(bool numeric=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_numeric</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad42e1863b6393082850c239acdbc24aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spin</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a740503c08f262b4386afd7812615652d</anchor>
      <arglist>(SpinType direction, double increment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad0aae779878e48a65b612b2b3ca37c61</anchor>
      <arglist>(bool wrap=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a14f016ab854f359d42740bf3d9076e39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_snap_to_ticks</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a167aa3cc1c5e12f644f30d81860847bc</anchor>
      <arglist>(bool snap_to_ticks=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_snap_to_ticks</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad9431c32982efd0c47837d61dd120805</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_climb_rate</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a1a0e93f5257cea9e944c6b1c9efe1378</anchor>
      <arglist>(double climb_rate)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_climb_rate</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a2c716c4cfe52908cd2ff88e452419275</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8f55a8c35d4de7e59780ba987d1971b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; int(double &amp;)&gt;</type>
      <name>signal_input</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>adfe22b7dbf295e30c3f4dbab8d375bc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool()&gt;</type>
      <name>signal_output</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a173a4b812f9168051fafea59d58935ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_wrapped</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8b23847fd17befc8378a56c5011a6845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8f08512eab27ad7767d3e9f8fe566248</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad70c34ff0c7836855f2d7a5f53725f1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a2391890e5baa9997df7393ba83b4693c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_climb_rate</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aad95b174ccbfc29a4c4835b520eeadd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_climb_rate</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a76222c8b6aa0f3d9e3a0673e381f8aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a09f900e140d326a4c99c16f376500eee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>af22a30d95b3b6d40a74df295d7dbe296</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_snap_to_ticks</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>acea2268800ec84b5064de5b95faa6b92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_snap_to_ticks</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aaf1e093cee1f7eec00097a2979e63d45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_numeric</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>acc4bf0d9bb5e3a90b5ad34c710496948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_numeric</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad0a5bf8c666d3ddf83e86be450061820</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a2bbb8e98b5d23c5892aa22375a8aacb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a0b401712fa678cf1e38a7445ff4fb50e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; UpdatePolicy &gt;</type>
      <name>property_update_policy</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a5f2aa6288efd1a540bf27c38890e9b9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; UpdatePolicy &gt;</type>
      <name>property_update_policy</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a592af876404db3015b861ca1d37d212c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a87cac1e9db5d499d02e9014962ba9c57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a74b332d0fbc29adcce81b280b52b16a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>affb6189a22838ceef14c31bcde13ce0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SpinButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aab144a3980161b5ebe36cf643ee52b16</anchor>
      <arglist>(GtkSpinButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Spinner</name>
    <filename>classGtk_1_1Spinner.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Spinner</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a32aab56e6654f6fbb55bc9e94775fe36</anchor>
      <arglist>(Spinner &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Spinner &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a325d487d1db59f7f6dbf2ddaae28cdb5</anchor>
      <arglist>(Spinner &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Spinner</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a67488aa48b5ac9930fc2ea512d922f62</anchor>
      <arglist>(const Spinner &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Spinner &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a3762817a7c83743bb27cd3faaeb21a83</anchor>
      <arglist>(const Spinner &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Spinner</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a83a14dae97c14c052bf1b7b9838c7c42</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSpinner *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>abe17cffe9c7a572c145f7b1a5b97a0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSpinner *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a31563907a26528b703aa252d791b6879</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Spinner</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>ac95232e18f410eca09926d9e25efb738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a108783a0f07a00756979be458bd42471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a0343bc16394f925e03ba2feead53a136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spinning</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a2dbd51e6eb97527b0aad418ee3aed15c</anchor>
      <arglist>(bool spinning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_spinning</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a282e2cfa57ae705120496a9413acf0dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_spinning</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a47b42d2a4b45b22caccdea872baf207f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_spinning</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a32fc1b081d466be835ea2f2d899acd39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a09ef6aef1b8b4cb276f6aeab82294189</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Spinner *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>af75c8143663d0b0965a873e7bbeae3c2</anchor>
      <arglist>(GtkSpinner *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Stack</name>
    <filename>classGtk_1_1Stack.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Stack</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a6cd69cec6bab672535f1f8723648df1b</anchor>
      <arglist>(Stack &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Stack &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>af603498bfa03217f2f36f081c866def9</anchor>
      <arglist>(Stack &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Stack</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a401efd8e6d35fbcfe2e0a3ce7bf9b903</anchor>
      <arglist>(const Stack &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Stack &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a1ddb71fb19f7e60ea4e107a7520ff77b</anchor>
      <arglist>(const Stack &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Stack</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a7645bb02a04deac1fd127275bad4d77b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStack *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ae1de3fe382ed90b56873a162fbc60cab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStack *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aaa483dc311626d559c2ce26b0a4b8e46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Stack</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a58929496b926e1ff6805405906048664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; StackPage &gt;</type>
      <name>add</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a7ffe24e3075e0b2602096ff64f9351b6</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; StackPage &gt;</type>
      <name>add</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aeab2a0aac0b3cbbcf67908fdd334c242</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; StackPage &gt;</type>
      <name>add</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ab31d1279a7bd5c97d12a19f3ccb1e542</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;name, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a180005d0640bafdf1214c535926cf4b3</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; StackPage &gt;</type>
      <name>get_page</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aeac0f884bddda460f20f2f04a101bbe0</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const StackPage &gt;</type>
      <name>get_page</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a677c7afacaafa7fdbe7fe989d95388de</anchor>
      <arglist>(const Widget &amp;child) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a02499eafcb598f41a3ff0179ec82c510</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aac319eb84ca5eb5447305df1ef19b95b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>abc526b53c236be036ebae7a9d88b1b75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>afa0ddd90931852dbebe4d98251e5f621</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a71f4a889e162e31e27ab26bccd82517c</anchor>
      <arglist>(const Glib::ustring &amp;name, StackTransitionType transition)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_visible_child_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a90709de3550ecc8282bf0c2dbadeb0bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a9c06dee94e0b2f7626b73299d5306dce</anchor>
      <arglist>(bool hhomogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a381f2b67539b09d13a6078f2bec386a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ab3574764f2dfdd03920d381f7355cfc5</anchor>
      <arglist>(bool vhomogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_vhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a5b105eca133beb7a67833526e30e676d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transition_duration</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa197685026ab0aeac989ca7253be6b77</anchor>
      <arglist>(guint duration)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_transition_duration</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa26094deabc838e78fea0733812811c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>adf885a2c50c0b603807cac06f69aabef</anchor>
      <arglist>(StackTransitionType transition)</arglist>
    </member>
    <member kind="function">
      <type>StackTransitionType</type>
      <name>get_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a9e80acce96763ce1dc5a181184ab37bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_transition_running</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a3b965581e5c916d70dcf40e2e22543e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child_by_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a06680f023e8599862a6762be56c2714e</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child_by_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a217786270b0f0e059fe116519ae2264a</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interpolate_size</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa45604fe2f68dc730048ff6045a2a88e</anchor>
      <arglist>(bool interpolate_size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_interpolate_size</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ab1fe96fec9b03141909aea42f7b14332</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; SelectionModel &gt;</type>
      <name>get_pages</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a04b11f79f197eaa91d69bd7112409289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const SelectionModel &gt;</type>
      <name>get_pages</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a13647c2a0048bc77f149f5b656203f20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a60913744ac5d9fc40407a6f3d4e28ee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a260e205e736ce7180e887d8dad7ec0b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_transition_duration</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>adb8a8873834d0b575f0a37d94c6e0df7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_transition_duration</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a704d86fd694912a1510b8e7ebfff410d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_transition_running</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ae86e257fb45964a64131f4fc7c99f395</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; StackTransitionType &gt;</type>
      <name>property_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a11d8f55879a8f5397bdc7123a0d2839b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; StackTransitionType &gt;</type>
      <name>property_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a4c5d5f3bc3447ece76e61fc7962f8dd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_vhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a2e56e8491d5fe9e431e37d3dd554d581</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_vhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a7c800fbf234125fe26d8916cb6380ef1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a63d93247e1eb23bf59d058ff6c5ff089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a0ce88469d1afc226c1b1d069fa124444</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_visible_child_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>afd99113d5c3af22c329a38f80f2e89b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_visible_child_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa2f23d023bcf877058f3964ea9030a1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_interpolate_size</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa4c36d3bdbcc7fed2797cc3117bd9017</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_interpolate_size</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a1a2612e321297a0efc5ad468923a001d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; SelectionModel &gt; &gt;</type>
      <name>property_pages</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a26c9af253702f1bb99d739bb388e58ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a7e3dc52ba1ff63345c00e19fc03a9391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Stack *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa66de162682d1ee4472d149f7da978dd</anchor>
      <arglist>(GtkStack *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StackPage</name>
    <filename>classGtk_1_1StackPage.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::Accessible</base>
    <member kind="function">
      <type></type>
      <name>StackPage</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a818fe4cde5d5a5c6f402eb1a31a251d4</anchor>
      <arglist>(StackPage &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StackPage &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>aaed0fde1534a3bfb235e4c9e6008e58b</anchor>
      <arglist>(StackPage &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StackPage</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a214034395973712e12b580fdf60c3a10</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStackPage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>ab47fd0b9569ad210bd9b448fcc094516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStackPage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a3ba7585aaa80318de20e037c4a9ccb20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkStackPage *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>ad5cc098790329b39bb20117199bb5c24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a430c559ea38e272676b2c97e05f99d50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>ab08e30ea7b88cbc12c4d9d358a2f14b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>afc06b7a46ab17170d0994b918c6b02be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>af63d865772dca9319016bb40e679444f</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_needs_attention</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a863062a73d3fefc7b3ee32d53ce76480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_needs_attention</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a0f61ad903cb2eb542f769a7846ab3624</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>ae14623cd8ecb1044a68c9ec899a8f0f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a00759e2e76bf416688b1dc36b5fc8d40</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a2644455f58467802047790300be4467f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a10251140fa3b10cb4e7a92eeecc3f6d5</anchor>
      <arglist>(const Glib::ustring &amp;setting)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a191950fadea055fa09325f893c3936c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a8f4db8261870bda6189125361c9e7f99</anchor>
      <arglist>(const Glib::ustring &amp;setting)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a3eda26186a432dfe5dc18e44d8501015</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a5bfc083a30eae632f6127d55ccfe66ec</anchor>
      <arglist>(const Glib::ustring &amp;setting)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a79af5d71a4b4a2418ce31123f0464eb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a5aa88c74141f728b21a426a5e732da67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a7831c20e728c6303c53fecf343f28968</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a7e2e8cf720a0073c033fa4d772d67a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a974eee10037b4fcfbb79dfd4e77fed2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a8f729eb9e78ea382a63774946d6c1e05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a318fccc11d4ec028fd2a2f27e7eb5c48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_needs_attention</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a41b868fc40916b26058834f17f1cd0a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_needs_attention</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>aa89c0042a8129cb006b2a3608e71156d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>abf25df1375393352ccd95fba1cfd04a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a897c5313c4330ad004b3c5ffcced0995</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a211a476839a97b417a530fbab123163a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>aa5cfd1edf7fafe91f227264d4756f62f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>a540c62153f5b1bc98252ca7e008d9efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StackPage &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StackPage.html</anchorfile>
      <anchor>aede83c898c82acd36aaccdd15143a777</anchor>
      <arglist>(GtkStackPage *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StackSidebar</name>
    <filename>classGtk_1_1StackSidebar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>StackSidebar</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a69d6f50115286d2ce88543e668a6fe6e</anchor>
      <arglist>(StackSidebar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StackSidebar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>ab7b11eecfc97a07872bffdf62efc1375</anchor>
      <arglist>(StackSidebar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StackSidebar</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a19679f04c00571baf0bb427d818bbb43</anchor>
      <arglist>(const StackSidebar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>StackSidebar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>ada8b5a67e363bb0e804c715d1818c029</anchor>
      <arglist>(const StackSidebar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StackSidebar</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a557503122305aae392147edbb7e254fa</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStackSidebar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a50ed7d54e458eedd2684ca5d9302f446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStackSidebar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>ad48b1f94fa765717bb70b9b03bae849a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StackSidebar</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>aa937eeb8ab26a0280eca4e3570798868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a9a9304d229e3c4b08e3064ce27bf7775</anchor>
      <arglist>(Stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>af3166538165da960ebfc0a3d6b4968f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>get_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>ab6a9d1df18812756589948b1eb285dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Stack *</type>
      <name>get_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>acff10e01af2c86687efa4bc7375c9836</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Stack * &gt;</type>
      <name>property_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a372524358277e7c59690c08083c48e18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Stack * &gt;</type>
      <name>property_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>af4e835babe5e13568f78e82ef06f5d72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a8db35c4d10fdb5f38699766dcd63c191</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::StackSidebar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a587d82a8f8eab20069c305e4be96bcd9</anchor>
      <arglist>(GtkStackSidebar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StackSwitcher</name>
    <filename>classGtk_1_1StackSwitcher.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>StackSwitcher</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>aefa1e93987c13c70a615b6699242471b</anchor>
      <arglist>(StackSwitcher &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StackSwitcher &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a7eed250254db0c60067bdaab489f0b54</anchor>
      <arglist>(StackSwitcher &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StackSwitcher</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a2d6bff803073368784fc3f70906fa22c</anchor>
      <arglist>(const StackSwitcher &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>StackSwitcher &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a133baba408c537df8a6cd05ef988b647</anchor>
      <arglist>(const StackSwitcher &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StackSwitcher</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a010fb1821648bada5ec128d449cc22cf</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStackSwitcher *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>aa4eef8c1663947c83c38549f1948dd99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStackSwitcher *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>aa71275d1d6f51574a39ba40eba17785c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StackSwitcher</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a3f151444f4f63c90f9e5d196bf76f608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a2c80d7ea871ccbf6c6ce985afecfd09e</anchor>
      <arglist>(Stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a430648476a666869a4dbe2f242ce407d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>get_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a53d7e8e83f4d3e1f2b2ed83823594c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Stack *</type>
      <name>get_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a0a9e66069d4120ab11844c7ba9d0990c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Stack * &gt;</type>
      <name>property_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>ad507dd755540f0ad1bed17258beaafd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Stack * &gt;</type>
      <name>property_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a03cd9d8eaac3c325847f2527aeffdd95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>abb388a2143d8bdf875fa3b196190d225</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::StackSwitcher *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a0f30d41d659286af549533a74a58493f</anchor>
      <arglist>(GtkStackSwitcher *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Statusbar</name>
    <filename>classGtk_1_1Statusbar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Statusbar</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a999f84ec017fa3629629be6a9b54620a</anchor>
      <arglist>(Statusbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Statusbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ab2d981166598201093339c0dc537cf73</anchor>
      <arglist>(Statusbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Statusbar</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ad977d0fcd3ba64cf30cc4c60c80ce517</anchor>
      <arglist>(const Statusbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Statusbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a1b8eed452eaa945de5fd3d43e3a878b9</anchor>
      <arglist>(const Statusbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Statusbar</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a43ae53a2f56f0b2e15462c067e8ecf1f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStatusbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ad33396939cbee540766e74ea6003a1db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStatusbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a615f94d7f63f9a014181139849f49dfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Statusbar</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a53fd19badce858dee44bfd17a9a88822</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_context_id</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a3c53ebf11ed09e65898e5a806a49ce35</anchor>
      <arglist>(const Glib::ustring &amp;context_description)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>push</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a74854d6fefa48ff8e07d4ded53b0702f</anchor>
      <arglist>(const Glib::ustring &amp;text, guint context_id=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ad2ee39dcb2e1c146f315b3d8d436b523</anchor>
      <arglist>(guint context_id=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_message</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>aed78ebcebfe28e5dfdda9552940f5b42</anchor>
      <arglist>(guint message_id, guint context_id=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_messages</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>acde367d9775682d7ca24e1387af8d20f</anchor>
      <arglist>(guint context_id=0)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint, const Glib::ustring &amp;)&gt;</type>
      <name>signal_text_pushed</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a002adb8619313f48c3a9ea7eb0d5a128</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(guint, const Glib::ustring &amp;)&gt;</type>
      <name>signal_text_popped</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ac39376c0d5e6449dc56e943133cfc254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>aae8b3d7f4d40588d906a0e65fd996e53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Statusbar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a6a1323ea614dccf0fa4bc20c79485acd</anchor>
      <arglist>(GtkStatusbar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StringFilter</name>
    <filename>classGtk_1_1StringFilter.html</filename>
    <base>Gtk::Filter</base>
    <member kind="enumeration">
      <type></type>
      <name>MatchMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3962827261f1c86a66556b5baa85237a</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3962827261f1c86a66556b5baa85237aac41e056424136b6e8c4e23dd6326efa1">EXACT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3962827261f1c86a66556b5baa85237aaa07774c4ba1e6908ad5aed2b17a03db5">SUBSTRING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3962827261f1c86a66556b5baa85237aa4e076080d87888ac96f19b271a6ee406">PREFIX</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>StringFilter</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a19dea1389f73841af7c18021d47f9458</anchor>
      <arglist>(StringFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StringFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a45a34c6de0fe2039f104119e5d5652eb</anchor>
      <arglist>(StringFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringFilter</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a3f31f804990c0221aeb8df4da46d01f3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStringFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a937a15ebc1c897f642e878ee671a5286</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStringFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>ad72dcc329473f46b234ac75b57c3ba81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkStringFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a62a0539d9c6e1c569026f96c39d6c1a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_search</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a7826207c962d8f297efee9a173d5b506</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a91f333172ba380f41b4c4c758ae991fd</anchor>
      <arglist>(const Glib::ustring &amp;search)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a54dae6f02b47e2c14abc9781c8b97789</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Expression&lt; Glib::ustring &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a4feea49b98189e5e40007cfbac2db198</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expression</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a58af95775d079f34c81ddd9e00effcae</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_ignore_case</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a260c966b1ce3097395ca11dd2b87a420</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ignore_case</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>aeb5334a5d7306a40e458212ed2b3deed</anchor>
      <arglist>(bool ignore_case=true)</arglist>
    </member>
    <member kind="function">
      <type>MatchMode</type>
      <name>get_match_mode</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a51df62f0d659e3caebc6d7c43944b4ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_match_mode</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>aae00188721df68dab68b84ac4ac537f3</anchor>
      <arglist>(MatchMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a992401260b922bf2278d20e3bc2e6d4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a1634d4610c3bb2c0137fc4d5b64a187b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_ignore_case</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>ab1a417f2c2689d26b1009f1945c9f253</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_ignore_case</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a7122d76379365417268f11f526bcae51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; MatchMode &gt;</type>
      <name>property_match_mode</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>acc4f32ee9f777d02af596126fc246011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; MatchMode &gt;</type>
      <name>property_match_mode</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a89d9d32d496ad3215e5dabac924c36b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_search</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a5004e91752a24ca07bdbe43ab327c15b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_search</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>ad656fae301abfc11dab3fe7cf297a8c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a69a720c5d8701f8f685a7ceb88603627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StringFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a976da3d08d93171b08ff186205506b26</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StringFilter</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>af41608dda35490039b8045ff1af562f6</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StringFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StringFilter.html</anchorfile>
      <anchor>a8eead1345990b446c6cbb087e38c7393</anchor>
      <arglist>(GtkStringFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StringList</name>
    <filename>classGtk_1_1StringList.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>StringList</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>a5c6ecfd61d5937ece9ada9cfa8484240</anchor>
      <arglist>(StringList &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StringList &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>a8d0fe85ef4d5012f4b85756aaed5ff09</anchor>
      <arglist>(StringList &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringList</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>adb46c43eea0a645f39b8e6f8b6628f7a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStringList *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>a0f40aff8c30e6e3818728a16db5781ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStringList *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>abb08f3174a255122e685af116d4b50a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkStringList *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>af037c92e6a5d1c01382b144727bfc9eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>ac6e489069b819cb9014f58ce981dc0ea</anchor>
      <arglist>(const Glib::ustring &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>aa98275a74621ab30c8609f5cbb191198</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splice</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>a03e9043d9150867c08f80f9c2c593a9b</anchor>
      <arglist>(guint position, guint n_removals, const std::vector&lt; Glib::ustring &gt; &amp;additions)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_string</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>a2a4e365f74d602e57d37cbe00fff9c8a</anchor>
      <arglist>(guint position) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>a3c26407f9abe9520391f76828a0700bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StringList &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>a38fb3eed71b74f401f5480525b61cda9</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;strings)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StringList</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>add40797f14bb3a04183c077217b255c0</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;strings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StringList &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StringList.html</anchorfile>
      <anchor>a0158326b0312eabd912116e92b20276e</anchor>
      <arglist>(GtkStringList *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StringObject</name>
    <filename>classGtk_1_1StringObject.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>StringObject</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a75e51b2132abbf8f47a9a69d7770d1a2</anchor>
      <arglist>(StringObject &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StringObject &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a8d9cde6b861291db49f43006dd0c42f1</anchor>
      <arglist>(StringObject &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringObject</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a787a7c2cf638ebafe63fef00a38b760e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStringObject *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a1ff524abbfa576d7c8aaf0445b920bc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStringObject *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a35e2e9de05dfc945d0dd3a045a5e9b8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkStringObject *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a15dc227af83d229fb8fa439ad0087db7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_string</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a35ce175d8425d75281b2cc736c621a19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_string</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a7ec8a94634c51db2191d42036d4621de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a8db06224ff0971aea080f583b5267666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StringObject &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>a1514c4aaa6c38912d4f4b62e2fbcee3f</anchor>
      <arglist>(const Glib::ustring &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StringObject &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StringObject.html</anchorfile>
      <anchor>afb25b6358cf4d68387e439e304bc5c50</anchor>
      <arglist>(GtkStringObject *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StringSorter</name>
    <filename>classGtk_1_1StringSorter.html</filename>
    <base>Gtk::Sorter</base>
    <member kind="function">
      <type></type>
      <name>StringSorter</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>abe88c1c40969369b90c1cafec715e7ed</anchor>
      <arglist>(StringSorter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StringSorter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a64250ee8d228bf1fcea9a8490b90d7dc</anchor>
      <arglist>(StringSorter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringSorter</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a5fbabf0477d2b771c284ceed912bbab6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStringSorter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a21545aa231bfd20aa19f8cf446ad2782</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStringSorter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a9d5a059effb517a36314e0da768b26fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkStringSorter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a5e75fb78a24e07a9bd28883f96dbb1c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>af4d7b54cd25062de55f1eb5bedc9a166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Expression&lt; Glib::ustring &gt; &gt;</type>
      <name>get_expression</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a1cc03a94c598291048d128c63ca757f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expression</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>afdb53b314c669df150bb4912984e4040</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_ignore_case</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>ad3a58a29d7f409d06983d7e8fbfabb5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ignore_case</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a58b7f969385418ce1c101bc3f2ab44a9</anchor>
      <arglist>(bool ignore_case=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>abe7ec727e6c8336d46b58e9440b628c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt; &gt; &gt;</type>
      <name>property_expression</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a182587d708881aba6b72c87bee3c94d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_ignore_case</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a51eee2e92205ecb82a5db00b0b0387e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_ignore_case</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>acf5d184de4aae23f140bafb6d6225b3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>adc027ebe47e453c5285a04dd31e56dd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StringSorter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a84b5e098352eb86a292d02016a21da8f</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StringSorter</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a754b28bd5935d600a0b837d7dd7ea6fb</anchor>
      <arglist>(const Glib::RefPtr&lt; Expression&lt; Glib::ustring &gt;&gt; &amp;expression)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StringSorter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StringSorter.html</anchorfile>
      <anchor>a9a930fb47f4f005a6e2f6b11e745b5a9</anchor>
      <arglist>(GtkStringSorter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StyleContext</name>
    <filename>classGtk_1_1StyleContext.html</filename>
    <base>Glib::Object</base>
    <member kind="enumeration">
      <type></type>
      <name>PrintFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3518e1efe174b74435de789628a4547f</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3518e1efe174b74435de789628a4547fab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3518e1efe174b74435de789628a4547fa48151c242bcd15fa2fdecba3fda0c2eb">RECURSE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3518e1efe174b74435de789628a4547fa3639885a4401dfcec50656335f707d50">SHOW_STYLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3518e1efe174b74435de789628a4547fa22370f6606f4c091a1f261d713eac8d2">SHOW_CHANGE</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>StyleContext</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a69595ef7d17ea53329257c227d70cd23</anchor>
      <arglist>(StyleContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StyleContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a7ca51ed24097476eb0aefeb69cfba0b3</anchor>
      <arglist>(StyleContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StyleContext</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a30c53510c9b286b4194afd28362592f4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStyleContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a630019456f1aa3042bde720250609a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStyleContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ab60838a294b0e41b3d3b81ec9641db4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkStyleContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ae4cf3dda485e366e9cfdad0e1117b51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_provider</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aab2fda726358dd2f4b4f4ee516aad62c</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleProvider &gt; &amp;provider, guint priority)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_provider</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a09138480a8231430c4d93cddfd77c790</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleProvider &gt; &amp;provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>context_save</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a137fc9041736661065afda7cc86d679d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>context_restore</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aff7792c300d9f39811c76dddf2d37199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a88da0033bc012c4c91a34c61a49adf53</anchor>
      <arglist>(StateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ae1c5726908fd5becfe5f268a568df71f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scale</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a5a91aabdb587a3c123340c5b1c06966f</anchor>
      <arglist>(int scale)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_scale</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aec97d785cb7f8394de8643e9f870c1ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_class</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a13f8b00a08ef17de1b95be09fb3d8963</anchor>
      <arglist>(const Glib::ustring &amp;class_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_class</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a4f817a6d8f05dff30eef042d9c470df2</anchor>
      <arglist>(const Glib::ustring &amp;class_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_class</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>acfc282115a909fe5e08e6fcc26d61b9d</anchor>
      <arglist>(const Glib::ustring &amp;class_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_display</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a550dd9853861656d2262e7cfc6daa6e8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a45681306962aba065e123c52a0cae5d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a34a086028b96e63541994e96c36a2ddf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lookup_color</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a6c3feeb9b715e7853da65c5a87ea3ee8</anchor>
      <arglist>(const Glib::ustring &amp;color_name, Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_color</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a96703b455678fb29c0825655e8dc0917</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Border</type>
      <name>get_border</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ab82eddaf2d8343f520477e0d69f66640</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Border</type>
      <name>get_padding</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ab10b5409d6192904fc4d0d7184027a98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Border</type>
      <name>get_margin</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>af608fe3a78e0b6129c8f69aa0139b8d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_check</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a84de27a9fbb156e56f17511c5478ff45</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_option</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a1c041912783f7ab2ac3a71c745394cb5</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_arrow</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aa15fc347db63ca17a9b1e08177cb9ca6</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double angle, double x, double y, double size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_background</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a7276cdb609f691d8d3f789166e34df31</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_frame</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a01de47023f1fee7bd75f279bdc0cc14a</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_expander</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aee5decc331898d4eeed0c26340bd8169</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_focus</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a4d4b62cedf3d50867e02773aa7141b00</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_layout</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a5f3915dc9f2b508662f5f4f33ceb0917</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, const Glib::RefPtr&lt; Pango::Layout &gt; &amp;layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_line</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aca1e8216537d6300086c314f4349b276</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x0, double y0, double x1, double y1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_handle</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aefbda5ee08c9ab787cc08c4dcea65658</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_activity</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a37283d41e1b798f57e4a4c0f0596c7b4</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_icon</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a5d8147f916b87edc51e8e47ddfa48158</anchor>
      <arglist>(const Cairo::RefPtr&lt; Cairo::Context &gt; &amp;cr, const Glib::RefPtr&lt; Gdk::Texture &gt; &amp;texture, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>afeed190c55ffdcb5eb708cb9294b23d1</anchor>
      <arglist>(PrintFlags flags) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aca1762fa19e3a84bb3c53f2cf7a86651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aa721cce2ab45f13765d498ddd064440f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a15d1d01c0fc182b1b127dde88c2c11d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_provider_for_display</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a9e487038629327d4268320b76f979d7f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display, const Glib::RefPtr&lt; StyleProvider &gt; &amp;provider, guint priority)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remove_provider_for_display</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ae08272bfe9643510afcdeb0aaf3977d2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display, const Glib::RefPtr&lt; StyleProvider &gt; &amp;provider)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StyleContext</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aa0f3abc906c94b051c09d9e69a8bab2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StyleContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a10aa53fdf2456d8ad0ba38a792798dd8</anchor>
      <arglist>(GtkStyleContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StyleProvider</name>
    <filename>classGtk_1_1StyleProvider.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>StyleProvider</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a7f3704db687d8c8b1e7e7745ed9948ea</anchor>
      <arglist>(StyleProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StyleProvider &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a448178ad92d25ecb1b506c1a700bcb83</anchor>
      <arglist>(StyleProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StyleProvider</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a0a13fbca2bc90d74eb12245f63884322</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStyleProvider *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a1ae2c6236a61cc7bfa2b94cd258891fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStyleProvider *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>ae30c0bfbef4243781744560eac405ae9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>abd9b29ce5ec70fed1a1da6e5466b2dc1</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a73ad44cc455b0a5ed218eae979b81ec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StyleProvider</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>ad98e18910bd29b41b058f89cdc957936</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StyleProvider &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a49a79605ce41b2ac46efc7909a73cc3a</anchor>
      <arglist>(GtkStyleProvider *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Switch</name>
    <filename>classGtk_1_1Switch.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Actionable</base>
    <member kind="function">
      <type></type>
      <name>Switch</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ac81886ae609ccca73086d88f709d1fe8</anchor>
      <arglist>(Switch &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Switch &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>acfe5471ea3b8109504b47c8915db0a79</anchor>
      <arglist>(Switch &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Switch</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ac7b5686bdb25656153a5c7941bdbde2a</anchor>
      <arglist>(const Switch &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Switch &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae8b3c3acffba6535694ccb8c192c46ce</anchor>
      <arglist>(const Switch &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Switch</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a5ddac95991c005b369614f8f9541af03</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSwitch *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae0f72fba97824a110a5dccada0fd8f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSwitch *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a4a752616eda40bbe51d69481fa1bf0c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Switch</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae2deb5645575d81c9bd6b40f216615ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a91c216642f12771f23ae94612951c6b3</anchor>
      <arglist>(bool is_active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>af9c5a1c5ca524778247bcda075c91664</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a37b3521c724a22bee0d6b4f02efdb61b</anchor>
      <arglist>(bool state=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ad61d49713b496989a095fcf59d849915</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae5b3afdbc654ef4861a32165a7e58d25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a4c92564efcccf991c9192fbf7c7204f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_state</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a777d36ebdde96229498951dafd9b6041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_state</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a0932080c83b8fe1c3d0172987f565f53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(bool)&gt;</type>
      <name>signal_state_set</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae213bf084d7ef0a70b345122a66b4c20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>afb9ae13e7a9b5955c7c86b88ac05f7f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Switch *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a1906730663824755dabb2b9d8e28c382</anchor>
      <arglist>(GtkSwitch *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Text</name>
    <filename>classGtk_1_1Text.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Editable</base>
    <member kind="function">
      <type></type>
      <name>Text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a67dfe77db6ff27963de14999e65c8126</anchor>
      <arglist>(Text &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Text &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a517a5653acb3b234fd778f9cf32cfed5</anchor>
      <arglist>(Text &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a62de0762b7a9772fc989664f3cdc4805</anchor>
      <arglist>(const Text &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Text &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a5ac6d8a5289e3c15b66282299357a14f</anchor>
      <arglist>(const Text &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a1230be4be4efba9439f62b1690f6793d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a0e1486a717e0e749b0ed11b1da8bec15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a902316937918ca6ce9fc095c568536e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>afe26e4500ed8bda8b60571a1d99a4269</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>aff20d5d2f80cdbc3969877dce5d16f7a</anchor>
      <arglist>(const Glib::RefPtr&lt; EntryBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; EntryBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ac59e8a3909a36fda2e7fbd2a215ef5ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const EntryBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a5c83c56837833272bd75177ce6769469</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_buffer</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a0773995d4a5112f21ee7209d76a37350</anchor>
      <arglist>(const Glib::RefPtr&lt; EntryBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visibility</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a904cfbcbad2278a9af3bc90eb6f5bf14</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visibility</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a2e8dd174390b6954d7c041bdf6820aaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_invisible_char</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ab08fa7bc19de9da503840955bb30bfdc</anchor>
      <arglist>(gunichar ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_invisible_char</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>aca4a341cb0fcd621ad99e4984b0ccefa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gunichar</type>
      <name>get_invisible_char</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a9d9117d7f7d9cc51b258858ed59d9878</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overwrite_mode</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a31616a28f41f5395a0aa235a64b6d2d9</anchor>
      <arglist>(bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_overwrite_mode</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a2f677cdce8fc2637a87bcf0de6c9496e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_length</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ac430568369cfa05ac89b19949024d326</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_length</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a0fa6b52ba8e78b094cfb793e1e8b5f00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint16</type>
      <name>get_text_length</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ae34e177b9c9d9e4e5420c0a9c2d786c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activates_default</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a97e6a37a1da211806301efbbda080ff9</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activates_default</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a85061d719d80bfb9b52203550aed7b71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_placeholder_text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a2a0f7d7468dd9ebd573d43392726e0a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_placeholder_text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a2d371273172fdf632f0949dd36afb904</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_purpose</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a1bc4339ef8e3ad4bdb87fa3cd2d2996b</anchor>
      <arglist>(InputPurpose purpose)</arglist>
    </member>
    <member kind="function">
      <type>InputPurpose</type>
      <name>get_input_purpose</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a91e3db1fdabd928f13e1cb7e465667d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_hints</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a19eabb0038b854464fcf79c3ff550a73</anchor>
      <arglist>(InputHints hints)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>get_input_hints</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>aa4686f9eb7c07faac2a907949dde0ce1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attributes</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a58d55d1e3a76c43fa6ca681ef0c494d6</anchor>
      <arglist>(Pango::AttrList &amp;attrs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::AttrList</type>
      <name>get_attributes</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a5e3940b73677a4a642997354c0879b87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tabs</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ade20d45b7a1aa9ba29955f2b3fed2ea0</anchor>
      <arglist>(const Pango::TabArray &amp;tabs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::TabArray</type>
      <name>get_tabs</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ad188a5fbb02a74dd42ca962c58004151</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>grab_focus_without_selecting</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a47755942eabafa4da03df874b6b9bbf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_menu</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>acdda14d273c2de0aa9442938f9d20c31</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a869c2b6a70e212a9d1173c0b89ec5e7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a0eb5200ceccdd39701fb16018f66de7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_emoji_completion</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a8e8edeb43d16f4f6efdfaa3e212e19ef</anchor>
      <arglist>(bool enable_emoji_completion=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_emoji_completion</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a82b1366439df6b01aa87329f726574a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_propagate_text_width</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>aaed4637b0c939deb657c6b72e2e7030e</anchor>
      <arglist>(bool propagate_text_width=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_propagate_text_width</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a2a32bcac2d9ca4fce4463ea3e6069f45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_truncate_multiline</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a72e215617056160fe8a27137112a4c77</anchor>
      <arglist>(bool truncate_multiline=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_truncate_multiline</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a890dd22a64c9f4a1dda3fda91b3e5e8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; EntryBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a561a765b8e46424c9de3082c0198899e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; EntryBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ac6dea171d8220ddd44ef4f111a379300</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>adedbfd7eae0aa6f9b775df52e69b3e63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a70520d4326333c92075091e4d85d11ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visibility</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a26fc993bf89cc35ad3ac61b13ab948ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visibility</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a60754feec15c7e2cb72e14e140d4034b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gunichar &gt;</type>
      <name>property_invisible_char</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a8ab02ea8d5b006366424c83938297111</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gunichar &gt;</type>
      <name>property_invisible_char</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a849c9ea0077c621930d9035e3ebc4515</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_invisible_char_set</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ad5dd4f8e20dfbf2b87e4dc0afd991c12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_invisible_char_set</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ab5cd52977dc60c217e08c3cb1c1fe6b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a123c03071f4a1e2293a955488c0f86c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>adcf957ceaf83410f71420caf486c20fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_scroll_offset</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ae044f2f3ecb07b192140368ccfca1fb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_truncate_multiline</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a84d072b6d97c31ebcf7d2be6d52efa57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_truncate_multiline</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a7a60355607a9afc5af6c78be7a25d3cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overwrite_mode</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a52c825e03b1c3f9979888d817b517de2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overwrite_mode</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a7410712b85dd5b42f69c87f80f91af10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a6b2f2ca5a923c681cb1f5c9c4f8c1d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a97bad24344315f57c97f53a21a86928a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ab6cade9973c918270878c2352d8d7318</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a5954997df63f216d4ba40df24300af58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a96ad410c49e03fc85e6ee1599be5fbed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>af14f23924f7c1ae1e87d5fab57f6f163</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a0980850d6240881bfcbc31438984dd87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ad3371c09b75fc6d4a8b6ba855879e34b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ad7d7ae1b718e460d29dd544579ff9538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>af9c00340cf9da304bced94b780912562</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a221cd0daea7d2a59fa8d2b7235de54ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a0fa1aa936de98894caeecde3de7297cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_emoji_completion</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>aab1fad9fad1cdbb390e45174f9785f7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_emoji_completion</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ae7cb72ddd86e5e84865eacd1ea6cbe39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_propagate_text_width</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>af3b17d75232cc2bb7074f02e5fc0afde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_propagate_text_width</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a8215c5f30244a91481fd79d1646ab6e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ab9c84bfdc0fe72cd867b5ff070adf9d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>ab05cc21aec6e961f41730d7d9963bf5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a5885f068e33e39922044d94ce4c67e9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Text *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Text.html</anchorfile>
      <anchor>a9f47116e6d250bb08ce7a38f729d90a8</anchor>
      <arglist>(GtkText *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextBuffer</name>
    <filename>classGtk_1_1TextBuffer.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>TextIter</type>
      <name>iterator</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>abb8a8a5abd18b84218e12a4678dcc3c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextConstIter</type>
      <name>const_iterator</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa51beb6109ad66d0b959dab90ab57e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextTag</type>
      <name>Tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae218bf327872d2a5ed6e3202db2627d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextTagTable</type>
      <name>TagTable</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a0d1ed6d2b21a7cb06d261e117a2c2672</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextMark</type>
      <name>Mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae8dd977bbf98a58d400f880ed30a946e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextChildAnchor</type>
      <name>ChildAnchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>acc9fefd2e8f66b2e27feb1abca37a840</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextBuffer</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac26c56c251695e47c1b9a4b45a8e7e86</anchor>
      <arglist>(TextBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a609965e018e81b2e4e17c88cf7805ad5</anchor>
      <arglist>(TextBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextBuffer</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a738e34dcc49cb7b321807b43e4f9e5d3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9250bc4defcf6599e94a37b0d3caaa1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa9bad76978f25625a38ca5ac4ca558b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTextBuffer *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3e79c9310e23f741898f081689b07672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_line_count</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a37c61cddf44a046af659326e5e27e4b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_char_count</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a45712a86490de12ee24deffc2ea3d65e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a63ee5081a5738faf0f820378ad573085</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::TagTable &gt;</type>
      <name>get_tag_table</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3103df31b1a0fc808997fd9da44e4734</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer::TagTable &gt;</type>
      <name>get_tag_table</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>afcb1f202caa162710e7a02a9c40c27b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9dc48965b1949bb54c7297e6bd1d1248</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a67c274bcdd8500d4eaf1b1d543987b0f</anchor>
      <arglist>(const char *text_begin, const char *text_end)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac6466a773421e4d48994b65f4a1703ce</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a22492c63d1f0da2f04231d9ec4cbecc8</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_at_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a53360179e6441863cec6117c6f396af0</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_at_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9302a066984dd922034bf51c668ae17c</anchor>
      <arglist>(const char *text_begin, const char *text_end)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; iterator, bool &gt;</type>
      <name>insert_interactive</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5ae3a0c42cf66591c116dbb5ab3efd5f</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; iterator, bool &gt;</type>
      <name>insert_interactive</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5dd1053539bc3c7b306b26047f5c2725</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insert_interactive_at_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a07f6c4236a1ede7e4e5ced196b13bc76</anchor>
      <arglist>(const Glib::ustring &amp;text, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insert_interactive_at_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8c775f5341888798b1425cb6e8091060</anchor>
      <arglist>(const char *text_begin, const char *text_end, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad3e12911e2ad2a0a4e5ac5e24371f671</anchor>
      <arglist>(const iterator &amp;pos, const const_iterator &amp;range_begin, const const_iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; iterator, bool &gt;</type>
      <name>insert_interactive</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2fd4f9ff8fb36520e7b0a18f7e3533e9</anchor>
      <arglist>(const iterator &amp;pos, const const_iterator &amp;range_begin, const const_iterator &amp;range_end, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a79771152944a1d16d5119e1314295c39</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, const Glib::RefPtr&lt; Tag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae689b9324620f5b1daa1fac9d13c8130</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, const Glib::RefPtr&lt; Tag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a134f2de521d6a00ebf2da802481cef3d</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, const Glib::ustring &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8b50becdec017a20a88c8279def83249</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, const Glib::ustring &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tags</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a7e381affba914baeb20e6be7810f78a1</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, const std::vector&lt; Glib::RefPtr&lt; Tag &gt; &gt; &amp;tags)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tags</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a53724c8e095585a0b5ea75a46ceabf1f</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, const std::vector&lt; Glib::RefPtr&lt; Tag &gt; &gt; &amp;tags)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tags_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6944809959a9b0a62a5620a2636ae9d7</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, const std::vector&lt; Glib::ustring &gt; &amp;tag_names)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tags_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3393a0e302916188385f44674c09152b</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, const std::vector&lt; Glib::ustring &gt; &amp;tag_names)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_markup</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2d04291c6e818b59d014ae739e0e0140</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_markup</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6a14d91eff2f1b4dd371a8baa414b3e6</anchor>
      <arglist>(const iterator &amp;pos, const char *markup_begin, const char *markup_end)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a93a0c92f1f46b3efaf86fcbcf746db77</anchor>
      <arglist>(const iterator &amp;range_begin, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; iterator, bool &gt;</type>
      <name>erase_interactive</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab9e12682d654a53fc46ab36434047666</anchor>
      <arglist>(const iterator &amp;range_begin, const iterator &amp;range_end, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>backspace</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6ef8d2dcc85129cc399dca45a435ae24</anchor>
      <arglist>(const iterator &amp;iter, bool interactive=true, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1d0350bf5e999bb3133ff5a56cb05c5e</anchor>
      <arglist>(const const_iterator &amp;range_start, const const_iterator &amp;range_end, bool include_hidden_chars=true) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a38eb5088ddebba425b1cd89e766dbd5e</anchor>
      <arglist>(bool include_hidden_chars=true) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_slice</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6ad5ca880139a8be12aac6538ebd6203</anchor>
      <arglist>(const const_iterator &amp;range_start, const const_iterator &amp;range_end, bool include_hidden_chars=true) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_paintable</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a96064805eb82512474ea67ae47c36183</anchor>
      <arglist>(const iterator &amp;pos, const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a80afdb5f6a08477a1977b88982069fdd</anchor>
      <arglist>(const iterator &amp;pos, const Glib::RefPtr&lt; ChildAnchor &gt; &amp;anchor)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ChildAnchor &gt;</type>
      <name>create_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2fee15dc2d1e21f624d1aa85ad75448c</anchor>
      <arglist>(const iterator &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5b40599bc4daf29b2dd923deafc05e7e</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark, const iterator &amp;where)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::Mark &gt;</type>
      <name>create_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa355a0cc0a3c1d7f7f9ded9cc157feb5</anchor>
      <arglist>(const Glib::ustring &amp;mark_name, const iterator &amp;where, bool left_gravity=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Mark &gt;</type>
      <name>create_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8b823989431ff4b3f904efe07e9c374a</anchor>
      <arglist>(const iterator &amp;where, bool left_gravity=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a82c1011da5758549e634729dcbc70839</anchor>
      <arglist>(const Glib::RefPtr&lt; Mark &gt; &amp;mark, const iterator &amp;where)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1582cb666cbe6c857f6f742557e19295</anchor>
      <arglist>(const Glib::RefPtr&lt; Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::Mark &gt;</type>
      <name>get_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2fcefaf023f05dd2e18ffa3de6063fd0</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer::Mark &gt;</type>
      <name>get_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2a50bb7a15cb302109f0fa04cf234e10</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_mark_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ade83a7b96d0b4888de0f96cd3e0b7220</anchor>
      <arglist>(const Glib::ustring &amp;name, const iterator &amp;where)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_mark_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a0ebfbbe158f0b53b14123158f6633661</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::Mark &gt;</type>
      <name>get_insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a4b92f14603f572f99daf0c86abd1b9ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::Mark &gt;</type>
      <name>get_selection_bound</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a59f49dbb4f753a1d523f68de91c4fe9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>place_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1dff95f7dc9ea889a25596a87b2f8c35</anchor>
      <arglist>(const iterator &amp;where)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aebb16fb72cab1929c81e3859eaf09a2f</anchor>
      <arglist>(const Glib::RefPtr&lt; Tag &gt; &amp;tag, const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>afdaa0bbb6db6ffe8ad3f356f7c1a8dec</anchor>
      <arglist>(const Glib::RefPtr&lt; Tag &gt; &amp;tag, const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_tag_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae968e19265f5dae7e47f8dfe56206fd2</anchor>
      <arglist>(const Glib::ustring &amp;name, const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_tag_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa4975c21e4effa68710686304c7aeafc</anchor>
      <arglist>(const Glib::ustring &amp;name, const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_tags</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9ff18822fb736109254b4614201946f6</anchor>
      <arglist>(const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Tag &gt;</type>
      <name>create_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a048bdd55d3f244e584074676ab482a2b</anchor>
      <arglist>(const Glib::ustring &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Tag &gt;</type>
      <name>create_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad42f4e41a4cb2d5a824e2f0ffa78e973</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_line_offset</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab0b39b1914fd24c7f4a4f3c05d751d93</anchor>
      <arglist>(int line_number, int char_offset)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>get_iter_at_line_offset</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa4c3d2c43dc403f163bd643396f770ae</anchor>
      <arglist>(int line_number, int char_offset) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_line_index</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6ad8b4b329a6183834812ebbdc74c8cf</anchor>
      <arglist>(int line_number, int byte_index)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>get_iter_at_line_index</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>afac44a30dc2f186a826d8c6cb624a671</anchor>
      <arglist>(int line_number, int byte_index) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_offset</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae92edc6a06a9a5fae2ee99f762bb59ff</anchor>
      <arglist>(int char_offset)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>get_iter_at_offset</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad0718f631848c3abf26af266ea15eec2</anchor>
      <arglist>(int char_offset) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_line</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a77ebbbdc688b1f2d16fbbd7e048efc4f</anchor>
      <arglist>(int line_number)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>get_iter_at_line</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a92c5cb2ba4134942413b586f41093480</anchor>
      <arglist>(int line_number) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6c6fe08e46f141bffe7c2dfeb459c074</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac8b6ea6c43d97a04f4f04b158f2f4851</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac4ee0ba09f7d8d316e3db8b7402344a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab3c247d3edb6964e686b2a1f974d83ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_bounds</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa57d47ab3cf08829430d90fe446f41ee</anchor>
      <arglist>(iterator &amp;range_begin, iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_bounds</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a853842e7e3a5c910a21cd8109e2e5ed7</anchor>
      <arglist>(const_iterator &amp;range_begin, const_iterator &amp;range_end) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a331fadf0c7c6c470b709802fbc09984a</anchor>
      <arglist>(const Glib::RefPtr&lt; Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>get_iter_at_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a52a78b02acf48aad81b29f56eb9b0aa8</anchor>
      <arglist>(const Glib::RefPtr&lt; Mark &gt; &amp;mark) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aadecf4e2baa4eb964e3952896561322f</anchor>
      <arglist>(const Glib::RefPtr&lt; ChildAnchor &gt; &amp;anchor)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>get_iter_at_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>afbba123030fa9435f48790c3d2c04c87</anchor>
      <arglist>(const Glib::RefPtr&lt; ChildAnchor &gt; &amp;anchor) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modified</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa015d807c3efca7005797d6581171c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modified</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aca1d54bd5b4497881b11f6c313ac3112</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_selection</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a746f77707385ebe1a0192714d4c58d4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_selection_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2116c5bb32e4e509e72d0ba225e09d80</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Clipboard &gt; &amp;clipboard)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_selection_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a788d235e8e4f7eb490476f24ea65b81d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Clipboard &gt; &amp;clipboard)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad4c5a80500656154578b863e673f3bb2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Clipboard &gt; &amp;clipboard, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a10a205f1f5388ab6267eb87d6fb15353</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Clipboard &gt; &amp;clipboard)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a31fa58843d832fc68fba1cf9b46ad72f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Clipboard &gt; &amp;clipboard, const iterator &amp;override_location, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a94087655660b8e2f1d1cd109e85b19f9</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Clipboard &gt; &amp;clipboard, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selection_bounds</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad69351647fd7650fa10de0c5a6d8e923</anchor>
      <arglist>(iterator &amp;range_start, iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selection_bounds</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a728eff4de6b17a6470c4a141cf40971e</anchor>
      <arglist>(const_iterator &amp;range_start, const_iterator &amp;range_end) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>erase_selection</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a371236bd4146f5520bda252d1c50d309</anchor>
      <arglist>(bool interactive=true, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentProvider &gt;</type>
      <name>get_selection_content</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5ce751484e633381c59ca18b49cb4831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_range</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a88b0a4096add7e8ea77098ffa5973a7f</anchor>
      <arglist>(const iterator &amp;ins, const iterator &amp;bound)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a061afdfc7c4f4fb0e7225d00d4586bd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_redo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>adb234e42ee1089eca0be45a4f35b178e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aba0fc68427d48a0d6cfebc01efc2ab5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aac114d77b52bd3ef72b884e7fa0bc972</anchor>
      <arglist>(bool enable_undo=true)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_max_undo_levels</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a38dfdcc778158c67f082f0b996d8f2db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_undo_levels</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a58972d6aa2ec74f1c7ab1a86244aeeca</anchor>
      <arglist>(guint max_undo_levels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a711754145e0bcc7ddc5dad3c2de32d05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad43e27f8f48e1a0aacbc8c3a6d12d650</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_irreversible_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a24bf0beee1a63bfb18eeffb88ce43bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_irreversible_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a69cf935ce83b08aee2add68c2ae6535a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>af86f1ef86eb6a35df054287eab967902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac8a7810f527798781c28de39e5acd952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(TextBuffer::iterator &amp;, const Glib::ustring &amp;, int)&gt;</type>
      <name>signal_insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9a2eaa70623d8055d978e98c45cf7c49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(TextBuffer::iterator &amp;, const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;)&gt;</type>
      <name>signal_insert_paintable</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>adba4cf61894ae121c3d4f4b30f287138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(TextBuffer::iterator &amp;, const Glib::RefPtr&lt; ChildAnchor &gt; &amp;)&gt;</type>
      <name>signal_insert_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae0a198207f122bd9469ca246c0500b85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(TextBuffer::iterator &amp;, TextBuffer::iterator &amp;)&gt;</type>
      <name>signal_erase</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a16280915dc1e9eba93fd141b62fd379e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a67358c8b3c6ee8caeddde1f4b4d3c769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_modified_changed</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>acb27c72c0a59acf0218386c623f24151</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TextBuffer::iterator &amp;, const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;)&gt;</type>
      <name>signal_mark_set</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8e43e59f30e298183ba4c3e5a8f2ed5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;)&gt;</type>
      <name>signal_mark_deleted</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a4054019d83169097d359fb5ac7ff85c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; TextBuffer::Tag &gt; &amp;, const TextBuffer::iterator &amp;, const TextBuffer::iterator &amp;)&gt;</type>
      <name>signal_apply_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2c11a613669310047c2ea7e98deaedf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; TextBuffer::Tag &gt; &amp;, const TextBuffer::iterator &amp;, const TextBuffer::iterator &amp;)&gt;</type>
      <name>signal_remove_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aab6fd5a61408d7a9fdf27be2edf3b883</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_begin_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a90aa615eeed3b222f13d98d2a02fe390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_end_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6d050ab3b2b092955c870aed30b7cc56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; Gdk::Clipboard &gt; &amp;)&gt;</type>
      <name>signal_paste_done</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aeb30b5c5a8f961da47bb17c21d93d6f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_redo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a335692efb4e59d925430994af4cff66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab2ecbe1813a95ac4c83f2b3be690d62c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TextBuffer::TagTable &gt; &gt;</type>
      <name>property_tag_table</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8e7aa14d9361272a4c86d0f1922bbfa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad84476a53d2eb737553899835e9c5e07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a82319fac45fba55983ae1ce735cdac83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5b6e6f7ac2f4878fe07d1a3f24f9050f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_cursor_position</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad1f6f1a817dc8620cbe9d072f82f6107</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>af1987b10c77f3588cc5be7636a0ed0fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_redo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae9bec4e9e8b45160afeb00d532c99f96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1c65c92c356f1fc3d66aa0a273c34299</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a41e34e07e72d764663634261f5d3da46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad0a1be1b3db6e4aa4ded6559d8b8bcab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>af25db2e069fb4c4de97de7c32bc93e8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac9a640942cb84ecbff7d6e166b2639fd</anchor>
      <arglist>(const Glib::RefPtr&lt; TagTable &gt; &amp;tag_table)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextBuffer</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aaff1f509a0cb4e93146bab120a0b4536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextBuffer</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3a3b8930d89219e3164a478a6455a751</anchor>
      <arglist>(const Glib::RefPtr&lt; TagTable &gt; &amp;tag_table)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3f5089822137db2c5ff1aa696a09afef</anchor>
      <arglist>(TextBuffer::iterator &amp;pos, const Glib::ustring &amp;text, int bytes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_paintable</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1b217c643448235f69e2b4140c197204</anchor>
      <arglist>(TextBuffer::iterator &amp;pos, const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a40caef78a25746706239fe2c76cb3064</anchor>
      <arglist>(TextBuffer::iterator &amp;pos, const Glib::RefPtr&lt; ChildAnchor &gt; &amp;anchor)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_erase</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae103cfa12176a44bdd3b29b52e269d2a</anchor>
      <arglist>(TextBuffer::iterator &amp;range_start, TextBuffer::iterator &amp;range_end)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a27f97169acd3b17994c57b4e39ff5bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_modified_changed</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a10a5297bdc97369787e708ef45110a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_mark_set</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac55e8b2bfcea40d99617f3c4490b0ab5</anchor>
      <arglist>(const TextBuffer::iterator &amp;location, const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_mark_deleted</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac7aa57c7e11c6bb786cd91415ac1e3c4</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_apply_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2b171c4fb8875be6620c4d00e3fa7629</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Tag &gt; &amp;tag, const TextBuffer::iterator &amp;range_begin, const TextBuffer::iterator &amp;range_end)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_remove_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1ce4201cc9daea50f2602580c1e46162</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Tag &gt; &amp;tag, const TextBuffer::iterator &amp;range_begin, const TextBuffer::iterator &amp;range_end)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_begin_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6c2958bafaa8304cce894b75b456884e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_end_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aaf826a8af12e91e51b47629bde77e57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_paste_done</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a62bd05084981c593bed760a1166b9f27</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Clipboard &gt; &amp;clipboard)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_redo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa85c0eb99214df76efc7881fdb333441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_undo</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a840820d58d819b3c0313149f1e515fda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextBuffer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a09788574b3f8d6503daf01070b33c853</anchor>
      <arglist>(GtkTextBuffer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextChildAnchor</name>
    <filename>classGtk_1_1TextChildAnchor.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>TextChildAnchor</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a23d72a4c047e34493bb81af3c90d31de</anchor>
      <arglist>(TextChildAnchor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextChildAnchor &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>ab863c7ccbd956cbe1fe803a883807d9c</anchor>
      <arglist>(TextChildAnchor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextChildAnchor</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a6e9a0406e70f3ae78c5817cc968d85a7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextChildAnchor *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>aadc2040d8c54e6653ab23f33fc1b0c53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextChildAnchor *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>ae47c7728617cf5aececbe69531ed239f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTextChildAnchor *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a8dc39677993eb7dc4fb1684b7113b44c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>get_widgets</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>aa0c99adc2e6080fe2cca806b739b46ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>get_widgets</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a5b46f3182aae6c991213aaf15ac9e3c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_deleted</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>af3dd10e6bd0ca38ce438ca8342802927</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a95f6044c75b325578870a774adc996a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextChildAnchor &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a9d2f94bd44465a7737723dfe24663517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextChildAnchor &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>ad0d6c247952e830a3639cc2f16ea1612</anchor>
      <arglist>(const Glib::ustring &amp;replacement_character)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextChildAnchor</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>ad77f3b224b969e2eaa2543598b9d4173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextChildAnchor &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a1b4a6371d4ab8aac10108931c48367c6</anchor>
      <arglist>(GtkTextChildAnchor *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextConstIter</name>
    <filename>classGtk_1_1TextConstIter.html</filename>
    <base>Gtk::TextIterBase</base>
    <member kind="function">
      <type></type>
      <name>TextConstIter</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>ac8dd52bbb642039058d701aac5617368</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextConstIter</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a02c3d6e76a33527c961723ff9b93901e</anchor>
      <arglist>(const TextIter &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextConstIter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a483f5baa9b3191c122a8a97f021d6563</anchor>
      <arglist>(const TextIter &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextConstIter &amp;</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>af6ab5a883e7d6be94be33a97cc1ddc33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextConstIter</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a19d64b53e1f33f91c17d2f04997a61cf</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>TextConstIter &amp;</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a4717042576b095ad7205d231fa5ec5ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextConstIter</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a80589e46c39c7297193f922959221117</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a2b88471ece37025b343f2d557368d9a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Paintable &gt;</type>
      <name>get_paintable</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a150d4be38e73f57a34734c70a075f295</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const TextMark &gt; &gt;</type>
      <name>get_marks</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a34f892619d93313860288d2d1cbec549</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextChildAnchor &gt;</type>
      <name>get_child_anchor</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a466f67bce1136ea61a0be4b8f2953ef1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const TextTag &gt; &gt;</type>
      <name>get_toggled_tags</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a45af8341cd338d364c7faae19a4ad61f</anchor>
      <arglist>(bool toggled_on=true) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const TextTag &gt; &gt;</type>
      <name>get_tags</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a221d88bee433288d5941afb35fc69dd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_search</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>aab1551f4c0c8ed4a3bba8510703bf820</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextConstIter &amp;match_start, TextConstIter &amp;match_end, const TextIterBase &amp;limit) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_search</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a65cc259c6a1a94523d82f9d208db8d61</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextConstIter &amp;match_start, TextConstIter &amp;match_end) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_search</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>ac8d7027d8dcee37bfb7afc7a34f00ec9</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextConstIter &amp;match_start, TextConstIter &amp;match_end, const TextIterBase &amp;limit) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_search</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a1515ac42351fce0d4be59156f4ca7864</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextConstIter &amp;match_start, TextConstIter &amp;match_end) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>order</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>adb4a836f5bddc3a1eceb05c6eb512dae</anchor>
      <arglist>(TextConstIter &amp;second)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TextConstIter &amp;</type>
      <name>wrap_const_iter</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>ae6ab44f50d8b65a6dafcca2f47098797</anchor>
      <arglist>(GtkTextIter *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::TextConstIter &amp;</type>
      <name>wrap_const_iter</name>
      <anchorfile>classGtk_1_1TextConstIter.html</anchorfile>
      <anchor>a8228df43034f3814ebe61693e818b850</anchor>
      <arglist>(const GtkTextIter *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextIter</name>
    <filename>classGtk_1_1TextIter.html</filename>
    <base>Gtk::TextIterBase</base>
    <member kind="function">
      <type>TextIter &amp;</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a11ef1de054169a9ca48cca88d03ad04e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextIter</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a5e2ea6235696472d3716404d39827238</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>TextIter &amp;</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ad1fea62e0f049dac87497aadc4e32ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextIter</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a2ac6ba5604cbf69bc1047c6dcc670153</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a9029c21cc4f32da20ecfc1889e43099e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Paintable &gt;</type>
      <name>get_paintable</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>afdfb12c0b6a9b4fc7b4a29cc3c661fee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; TextMark &gt; &gt;</type>
      <name>get_marks</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a897bbd957699be0347c83f2c7c89ed65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextChildAnchor &gt;</type>
      <name>get_child_anchor</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae93f4cda06975b5cc77516f75b797ab4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; TextTag &gt; &gt;</type>
      <name>get_toggled_tags</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a5a45d692411fdcdbd0591a64fe00688b</anchor>
      <arglist>(bool toggled_on=true) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; TextTag &gt; &gt;</type>
      <name>get_tags</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ab0cf449408641b30d8f89b17f1ef9869</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_search</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>adbacb007935a899e9cb95799ee70ff6d</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextIter &amp;match_start, TextIter &amp;match_end, const TextIterBase &amp;limit) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_search</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aa32b69adde44a214857d8e8a5bb7ed4a</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextIter &amp;match_start, TextIter &amp;match_end) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_search</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ac1c7a99f2d90fbeaed187bda564d327a</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextIter &amp;match_start, TextIter &amp;match_end, const TextIterBase &amp;limit) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_search</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae928b83540d864698b26264d44f7d4a8</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextIter &amp;match_start, TextIter &amp;match_end) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>order</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a4d3c25edf1efe92f5313ac740781238b</anchor>
      <arglist>(TextIter &amp;second)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TextIter &amp;</type>
      <name>wrap_iter</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ab2ccf885dd8b6f517f53a35167558c1b</anchor>
      <arglist>(GtkTextIter *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::TextIter &amp;</type>
      <name>wrap_iter</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>acc785fe9cf8df1a17e34687910dae723</anchor>
      <arglist>(const GtkTextIter *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextIterBase</name>
    <filename>classGtk_1_1TextIterBase.html</filename>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a24cf4782995313610de7fc48a5eccbce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>gunichar</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a7210161f767759c833fcbf713cf598cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a3b14d8cd72db71666ed620f8bf0b4991</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>afee0a5ffbece6c265dd888b8c1550f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>pointer</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a53fd6bd11b7a916b56858a579ce72e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(gunichar)&gt;</type>
      <name>SlotFindChar</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a59ffbed80d87748aaaf6b83d920c33cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextIterBase</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a89fa55a08a7dd17e8e0f62fc68f2c7e8</anchor>
      <arglist>(const TextIterBase &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextIterBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a66d574142957ea8c32f74c6eb7a59653</anchor>
      <arglist>(const TextIterBase &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextIterBase</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a02f0e13c5507c7497e9fc16550bff724</anchor>
      <arglist>(TextIterBase &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextIterBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a5b8b52eb048dc0eb03939ec0831caf8c</anchor>
      <arglist>(TextIterBase &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextIterBase</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>aca42ac8be6f14bb9bd389d3e32a39880</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextIterBase</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>af9999bc88a460c8e74fbd1a99ac313ef</anchor>
      <arglist>(const GtkTextIter *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GtkTextIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>afe3ed2742a24672a4ed263f6ec3a2567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a6fc34d249ad613ebe6ca0fefd461aac8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>operator*</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ada63918d451d27f5da343101ab1acc44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a2c7545ca287496bf148787e038364462</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_offset</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ad926509bbf4f326f3a64e733132e02e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a1187fdf62c299853960f2159fb1dd3b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_line_offset</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a2772c076f84f7b4da1b606f4be585f8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_line_index</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a106322f004ebdf417901c3ea4219baea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_visible_line_offset</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a6a58bb8ecd5a503690fb8b50a1fdbe80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_visible_line_index</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a3eb901758caf9f8bbe7d6295545a2df7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gunichar</type>
      <name>get_char</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>aaa8dfe6abceb51906778144c37063905</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_slice</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ad99011495bc5a4fd2ff019f0531bbb3d</anchor>
      <arglist>(const TextIterBase &amp;end) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a1f91725110704158160a0b0aaf6cd8d6</anchor>
      <arglist>(const TextIterBase &amp;end) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_visible_slice</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a444915828a473bd8b293542fca68362e</anchor>
      <arglist>(const TextIterBase &amp;end) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_visible_text</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a5d25c0ed8bf49a95fa9260b942c8e8a6</anchor>
      <arglist>(const TextIterBase &amp;end) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_tag</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>aa8c3103a433c542bc40c6d3eae5d95e5</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag={}) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_tag</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a04c892da8c585a2cf055fe23d9a8d26a</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag={}) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toggles_tag</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ae128a18de2a8d420ddd64088d6b7d4bd</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag={}) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_tag</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a42ca9b4bf6310aabac1d136b669b575b</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>editable</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>abdbbc87bfa10d5dd45d8aae864c58439</anchor>
      <arglist>(bool default_setting=true) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_insert</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a255df163216f5cbbf982e482d6827633</anchor>
      <arglist>(bool default_editability=true) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_word</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a190666e17da36015db6b817e126f4ae6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_word</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a616e476e75041f1d3cd969567dfaee6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inside_word</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a16626886aa37ba1751a1550e8e45bb5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_sentence</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a652d9ca4ad639b25374679613d853943</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_sentence</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a3ec17253b3bc44c4d248789bb203c4dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inside_sentence</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a311c3c5945e8162b9394e278da7df6ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>afe0d1e8cd6cbc8f03f83a72467c1626f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a478d1e144a2184f0d7748d42328f3a74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_cursor_position</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a52324ae9bec4c62cf6890f342d66396f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_chars_in_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>afe53e7d7feae0d394ee6a9c9fe0e2746</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bytes_in_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a95dd92fbebef70ec63e5b7c5995888ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Pango::Language</type>
      <name>get_language</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a18d3ac862f6c8ac06eda5d7dbdb66786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_end</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a213112b4dfa708dad55efe0eb9890405</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_start</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a832ab253849cb01024617c5f911a7058</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_char</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ab007920db6e0c73a3b8253a0599f30e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_char</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a079225b6f2f24884a28fc0a1acc789a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_chars</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a179b2d7d56dd4bfeeb81add9bd425a15</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_chars</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>aaede9258af84aade77b11f2c206928d9</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a4b2c18fbbf08f24e3c6d5696f4bb3bd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a998e7bf0bcf2efe553dbec4f3339988b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_lines</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a6348f43fb950836bf672fe52091c5c71</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_lines</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>af9ca948bcb9d2a94d9f09c4590ccd7e6</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_word_end</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ad1cd8150472655327bc0b8466d0a8965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_word_start</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ac0413363c0f8d312cb348eb1997ab236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_word_ends</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a2a9396d6eb8157b403206738cbf16059</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_word_starts</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ad16c143d708a80a0b12b5cd13b121a0d</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a9aa78f4b7841b0b89ff699cd763550ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a6b9ab4d23ce5479798be23dc25318d24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_lines</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a9d3ed69725d8dd86653f8d7d3d73abb0</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_lines</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>acc4cb0640cad0724b8987f4c824814c7</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_word_end</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ac6f8245c0e1a645e5ba4a9f99103a891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_word_start</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a31b89dffd6f670d5ee82acc2849a7f24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_word_ends</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ad1cb81f34aace00181ebe92124bcea96</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_word_starts</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a220feba1ddef6584eb4687564cc2d3cb</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_sentence_end</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>abc310bacc8205fb1a7320ddace92b6c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_sentence_start</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a983d679c56c180d3e9e7a81a008d9c85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_sentence_ends</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a1ba37a05e6b756c1922dd4307202c3a5</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_sentence_starts</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a7a5108a85f61250e57577f94cfc1010c</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_cursor_position</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a8fb3cdc8bd73a7767913a4afded83228</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_cursor_position</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a9ddafe916c1a15d00ed230f56913dc4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_cursor_positions</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ae5846d82ed8fbfaed86f76ab32e6f91f</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_cursor_positions</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a3ac8ee9a21dfb85e4c9c61e12fd70678</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_cursor_position</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>af9b87383b3699399bf389da5a1faa2cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_cursor_position</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>aa9b81d4a724e8d1689e39b9df70ea9a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_cursor_positions</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ae696b84202a7cb0ee5545def7f2283bc</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_cursor_positions</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a4eff0e6bfbf8c99cbec217a3ce86733e</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_offset</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ae789c6c326524c99aa9cb49bfefb036f</anchor>
      <arglist>(int char_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>aef262d087a7fbbc76b670b6cc31c97bb</anchor>
      <arglist>(int line_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_offset</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ad9b0c94a3f7519a3c86dae8123d3a4c1</anchor>
      <arglist>(int char_on_line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_index</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>acf4cd3a96205d5dd738fa9c245e49a84</anchor>
      <arglist>(int byte_on_line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forward_to_end</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a1cbc6d4c29cc97a40c6b7e4fe7a8af9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_to_line_end</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a132dc342083ec55747f4da82939ad3dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_line_offset</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ad11a4e5a9214ffa4cdc97ddfdf2dd580</anchor>
      <arglist>(int char_on_line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_line_index</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a12bb9f47b003667ba0cccdf18274739d</anchor>
      <arglist>(int byte_on_line)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_to_tag_toggle</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a6a54c9a7a3cc9326132693ea1998eb91</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_to_tag_toggle</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ac86d88bbe9560d23b65c29aa6f525afb</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_find_char</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a9f15b78f7ea7731f274452c3a04a7ce8</anchor>
      <arglist>(const SlotFindChar &amp;slot, const TextIterBase &amp;limit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_find_char</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a7419357fe161baa9c2d24874d0fb8b28</anchor>
      <arglist>(const SlotFindChar &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_find_char</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>aa9492f9caa441f36226df539839cdb49</anchor>
      <arglist>(const SlotFindChar &amp;slot, const TextIterBase &amp;limit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_find_char</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a582571ab51fe64ad79cd6cec3744bc5b</anchor>
      <arglist>(const SlotFindChar &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compare</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ac35b3a0003799fd46078a80d88fc762a</anchor>
      <arglist>(const TextIterBase &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>in_range</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ac2d7657cb54560a42187a8cb71f76eb5</anchor>
      <arglist>(const TextIterBase &amp;start, const TextIterBase &amp;end) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a6ded33e7a8069725ed7d8551b54eaddf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTextIter</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a40b07b144c8fa7922be1ac1c53d50892</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a74610f4836e1985249cc2cb575d3f41e</anchor>
      <arglist>(const TextIterBase &amp;lhs, const TextIterBase &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a77a1d3193a8d7f162fd0b90a7ec4a299</anchor>
      <arglist>(const TextIterBase &amp;lhs, const TextIterBase &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a059c36f4776bdd1006a721053bbbfdf5</anchor>
      <arglist>(const TextIterBase &amp;lhs, const TextIterBase &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a9cb8ebb1e4aad5eb5fdd5793e9b5c439</anchor>
      <arglist>(const TextIterBase &amp;lhs, const TextIterBase &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a4fe6974bbeba69d994411d6dc35198f8</anchor>
      <arglist>(const TextIterBase &amp;lhs, const TextIterBase &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>aeaa24b659c4f9bfbc5540c41a69e53fc</anchor>
      <arglist>(const TextIterBase &amp;lhs, const TextIterBase &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TextIterBase &amp;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>ac8967ac142df1dec5c8c8c194c3cee61</anchor>
      <arglist>(GtkTextIter *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::TextIterBase &amp;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextIterBase.html</anchorfile>
      <anchor>a12c1154f4b4bab08ea9111cb72b2641f</anchor>
      <arglist>(const GtkTextIter *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextMark</name>
    <filename>classGtk_1_1TextMark.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>TextMark</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a67721c65e263424a8809f70a9bde5a24</anchor>
      <arglist>(TextMark &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextMark &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a3bbec7549c67032e3863056626c29a8b</anchor>
      <arglist>(TextMark &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextMark</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a5844b10acc2ea44c346d595c5d59055a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextMark *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a2375cdcf56f135b5caeb1d335c078801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextMark *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a12901853c4d4799cbe0bc5b1a030d000</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTextMark *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>ad69a5cb3437143cee49ce6dbb6f9d92b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a81500d6abd3ae31baf1494476b304ed9</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a90065777679f3168e338090fdca07ec1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a7a5a11d745325dc42b855801c77aa868</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_deleted</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a0a39a769f116fc55d19caa59c9575bfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a2d355fbee36a734b25086ab7ff724f95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a5d2d96668d7d5b04e6250a0527ed258f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_left_gravity</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a2c60c9f18c3b0f7a2e1c74d7c802e010</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TextIter</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a1ed8d8769cf46a34769fb4ec76c50371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextConstIter</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>abb6490e6a2ff9470431f9ad0f9eefe6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>abdb3d8bc849b570941879af67ee2ad89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_left_gravity</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a42c412d6b4f17bf7c6ad96c839d16662</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a08f949b21eb4d479e10feb2bb8575175</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextMark &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a535324f93ccc7f594ec4fcb29baeb3e3</anchor>
      <arglist>(bool left_gravity=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextMark &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>aca937ffe910b0e20e1421e4a0497dd41</anchor>
      <arglist>(const Glib::ustring &amp;name, bool left_gravity=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextMark</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>ad78023d251297a807414d9f6e675d10b</anchor>
      <arglist>(bool left_gravity=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextMark</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a938c7595b3d39c1a58ac679a9fcebc24</anchor>
      <arglist>(const Glib::ustring &amp;name, bool left_gravity=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextMark &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a527b171c0f845bd9410c2b7e93432519</anchor>
      <arglist>(GtkTextMark *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextTag</name>
    <filename>classGtk_1_1TextTag.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>TextTag</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a78590f8ab954923ee45649fe11e21a82</anchor>
      <arglist>(TextTag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextTag &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a133234d733282817ea4568c2124d33fd</anchor>
      <arglist>(TextTag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextTag</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af79fca80035597ce4439c99e79478bc8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextTag *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8d297c730a7743012a0fc8106ebbd403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextTag *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a25648bb89d6e1ec798e389689ad5d210</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTextTag *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa48ae7626fc01440caca2ddc550af316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_priority</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a42b779a08fe22ccb90b553c779e1d0a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_priority</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a61116353469b08325879880502781525</anchor>
      <arglist>(int priority)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tag_changed</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af280096c2b690aa3823bf6bf1e48e5f6</anchor>
      <arglist>(bool size_changed)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a50bba14452c60986445f396831117d6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_background</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8989dc49399a8367babbd56fd53945b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_foreground</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa54940f99d788e5eddbd6294dd06880e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a880f1466e0562988c47203be8beb076a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aecdae4a6ec2eeb2fce11e1fb9f08ca91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_foreground_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9f5fc15ea22a2cf30129cf9248378b7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_foreground_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afaf011bd4a0f00d6e8c89111969140b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab40636496865f4f7db4a14cee7392fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a62108485861b2ac93db837b81f6f82c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5d21eb9b247d4329c87aa4d474d06e3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1492e5c08c51e4ea53d36fdbb184e471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_family</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae642e59ac123e5dada08f58b9f0aa58b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_family</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af773e9077702596fba6215c513818ba3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Style &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a35f7636b28462a4515e9f91078d2460b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Style &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afec438766f38963769f3e56e65acf50c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Variant &gt;</type>
      <name>property_variant</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3e9c6aea6cc9d10d5f71d22da0effa72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Variant &gt;</type>
      <name>property_variant</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac35e8f50d5c5550b1888c003318ca5cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_weight</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5eab7e55452cf0166a5336fb87c053a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_weight</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a528ee671cc7ceee0b53dc00d059ebced</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Stretch &gt;</type>
      <name>property_stretch</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab3d897035a9532e7c01a8008e5e7e1c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Stretch &gt;</type>
      <name>property_stretch</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aebfc0713ae634ebc9e1de208ae5ee71a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa22d9692df6db4450704ede0a8e0bed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a91bb8bf0144b18c7d41591429cae6cd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_size_points</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af160417c23f0103433a0960eee2ea8a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_size_points</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2e5057e861f3f2e2726f6a9666ffc091</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_scale</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a398452b705cfd2666e9c3d5400615a07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_scale</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5b572aa86b8084dff59888ccdb008465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a81de1a8e2dc215ebf70e45ee727e7404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0324d1d1bb780d5a137aa1165142f661</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2c2016cc6a384146fa137c3b78fb0bb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afaf68d708a8d4f1988e94e905faac405</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa1f3568efe86de56578f8a70d81ce543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a07a81c86b2b101c8ee76fdd70541e136</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9d830c579ae3e5234803752630c297df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a85f818c4ae35269138e08ef111e47b78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a24bab75c688b836b75fc16de00a2fc78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a988d0100317c9c9ef54834ef6bcf7326</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Justification &gt;</type>
      <name>property_justification</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af9de93c9290e48f9387e8d96a5f2e0f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Justification &gt;</type>
      <name>property_justification</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a869527b0d0c86df549b180318a626421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae3e992daf64af6a72de44957b1bf6fa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a57726222417fc7c238d55b1f72a1de8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_left_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3942adecabf5edf4832d3bc90ee8a2e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_left_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1a10b3353ddbfc2eb925785182c26c4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_indent</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>accc19bfa983aee563949231a4cff0a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_indent</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aed6f79ac3b59a0259084e199c64d7e39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_line_height</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af3e7be848958d72c967734c2e7a5d827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_line_height</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab5951953574855ae137bc3461189cef6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afb5758d236822a1bf329c5dd7b1d5de4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6458424906d2f984efafb6ee99fa7c91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_strikethrough_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af9a04fe6a6c9bbb5b90f89450536f4f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_strikethrough_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a82ef4cc4bffc8d52b9f3455c6eba0ec2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_right_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7b03117800890953d6cb1a9811a255df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_right_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa7f30d50dda0540c1d8328ac86f5675d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Underline &gt;</type>
      <name>property_underline</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5bcd656ee974546bf7b1b11e740c8ff2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Underline &gt;</type>
      <name>property_underline</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a35e28a1c7c9923744bee46679927db66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_underline_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1e9ac4a94e20df9771df1d29a085c2fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_underline_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3e582e0d516ad4a0bac8381707962d36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Overline &gt;</type>
      <name>property_overline</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9b5ab41f382d29689298005a0bd38128</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Overline &gt;</type>
      <name>property_overline</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afab2b22469a67414405236421048be59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_overline_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aec183d7c391ee633debc8c3acab45c67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_overline_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3462b715b7c36d0e4d9b73b96094c32d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_rise</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a08f409d98acbb66a65c040954ca6d117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_rise</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a300999f549f58e91f9447a737dff58b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_full_height</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac4b1f1e011c7751f442211bec156c736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_full_height</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1cb1ad12354f3accc0378871aad40ff2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a40ab3643b98d870fe377a0a82d2aa696</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aeb1699b44d3530dccbb1d1cd7c849a0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2e5d1b52af39241a3a45b1016459ade6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a58d6cb046890984eedd0153673f9e107</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_invisible</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a94641bb8c7ea7055d24d9794148b1a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_invisible</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aaf9e103d73a0d05def2495ea3ee4ab92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_paragraph_background</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>abf19e4afd0e0a0f5789c7b2811af8523</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_paragraph_background_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afcddc2428017cc3db711a20d01f56dcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_paragraph_background_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3fd83e7092efa7e4b321426592025667</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font_features</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1e890faa17e85eacec690b954c3728a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font_features</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae5655be127c27ff74b67167f78ca3c2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_allow_breaks</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a14ab877921f57fba708b863bfb07e14a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_allow_breaks</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a089430685192b91cc6fd386bab5cb04b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::ShowFlags &gt;</type>
      <name>property_show_spaces</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a93b029ab7322031995f3a62c93597e77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::ShowFlags &gt;</type>
      <name>property_show_spaces</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1491957cf9891c33b88da82e5c7eeaf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_insert_hyphens</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a693986be2486347364ca6709339b9c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_insert_hyphens</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>acebe083dfee76753689282e6abf2f10b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TextTransform &gt;</type>
      <name>property_text_transform</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8f7f9efdd7f326a6b8d29bdf8272e764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TextTransform &gt;</type>
      <name>property_text_transform</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a907d05bd08606705ec03a4ace1fa67da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_word</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a4d08c599bcc2010a5e26ca1ac7286eff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_word</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a362f869008809f87a542d9db53bf82c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sentence</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a86764bda072b53d25e44619979ea78e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sentence</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a50b5650b50d5c56e137d0bc0d4192228</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_accumulative_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2a01303d87af2a20f0b35ee5e1ee8c77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accumulative_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac3e702da4020ca68fa8b6f19012d76a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a83bbe65f2a824408c811c960935f5bf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a64aad731a0cfc34823b6180fb2eb6468</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_foreground_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae79a6d076087da355541ffd228dfa37d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_foreground_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a62a83cd60ebbd67b7c0d27fcd61e34f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_family_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a100e94fd24b729c25debcf241894c910</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_family_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afba8d8fe1c25a7d01674d9660a5bb0d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_style_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7aace0b891d83f9144c33d120b3bd33c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_style_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa587c3c6df541f92ab6b23fc3bf756f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_variant_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7ad159434f2604310e576e405fc4b359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_variant_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a88de9320e8c32d5986d0bc2a8009698c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_weight_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af010d4e816d8b584a3594bd1582e9fa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_weight_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac04fdb1885daff2d84b53dbaaf54f1a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_stretch_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a59a4b35fc6c3b3189df9257874739f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_stretch_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a01107eec953f75a6e3483e04b3afcdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_size_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5e9507b9700c85de44769ac5d40e0218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_size_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac5597430e3cea9fc079f0fc1505291a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_scale_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9a306c6981cf079976323d405d371bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_scale_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0b09f6d62ae78bacf99163851d0dbe3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_pixels_above_lines_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a364d783cff10feaa7787575d3a361048</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_pixels_above_lines_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>acfac16c7e0f929bd6fe66aa0770a72f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_pixels_below_lines_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa30701b0a1b9978a7b04246069670141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_pixels_below_lines_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6f3c95f647137b42a531f3034d4ccf22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_pixels_inside_wrap_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a53e6f2d0636bdf145debfcdd0f9dcd51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_pixels_inside_wrap_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa3401d8a17635805f2b5614f4df7c46a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac49d658b1727dc4b971d70bcf0c98d35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a125891383db84c61f2a22296d9faa871</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wrap_mode_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a55b615bd2767ec9fcf579ba2b45d5889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wrap_mode_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a35e8ff223095ef4b4bbb63791dba9f05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_justification_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6483ae50a2ae09cd0cae6a849de73c36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_justification_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a907cab4e2a0f794c5dec0fa9b3dfd1cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_left_margin_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad8e4a178ec935d81e6192a2c07d47f5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_left_margin_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a37ae66c0c241ead4660364228d44a950</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_indent_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a71dbaf676fe82d09a6687a8290674b3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_indent_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a77e92f6600c785c11f3255c54970d44e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_line_height_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5ba1dad5106d662e6eb1c157c69ded96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_line_height_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af879d512fb3292c717d9238299a57603</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0cd0ed3a8e3567b40844150c3e3e4bad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7b00d04b2ec994af094a45c0f63f8cb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2673c51717e9619ce6dfa62682509138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0dcc386165459a4acd573a28e6b7e634</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_right_margin_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac0dfe7bc398c4dbcefbac68790cdd2b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_right_margin_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>adabd1cea15fdb587c6c09650aced403c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_underline_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab23d85f9aa9d1872dec887a16bc0b105</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_underline_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a55fed09a9a67e9c7bc7331d612eea364</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_underline_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a177702b6600a009e916fe8bb9e0c221c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_underline_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>abc76f1419e763b8b87783cbe5ef5f7cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overline_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a40a91035f4b7a739a4b5185966b0d2ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overline_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab5a4b42007a586fbf82658ff827a79ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overline_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0a7407106bdf900e2405e96ada448afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overline_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3152a4832a093a419ffcfaef2220e787</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_rise_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5f1d9a0b6e6bdc5aa2e408c4ec265ecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_rise_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a23604ab16be725062971d0f5aa558dc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_full_height_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a72d763a9886cad5add76232c66f6d799</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_full_height_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a44471e72f6e6816d5de992687a973faa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_language_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa0d32e1de52691b00078f2d17a6409f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_language_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a36a8d7d2a4ed1df710e742a3b4f622ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_tabs_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6d60d666c3bc889a3f54f61e9e6b29c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_tabs_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8b8705780cd1dc40e01679702803872c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_invisible_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a4dd0126c13555af6b41f13f33ad29a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_invisible_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a20957159c624fce4f935b2de86c59e4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_paragraph_background_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a100b05dfa1d03214a32f8dc4d640b932</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_paragraph_background_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a33b578cd933948a587f46f5277eb29c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fallback</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7ad900ac524503c44d498edbc75cbfc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fallback</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5a7e4f93bad8e131aac0e084c7ab1592</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fallback_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af4302773e8992e7cfe9c3b5084438f22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fallback_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad38f875737a3dcec86d1bc910c130fcb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_letter_spacing</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a66a6759b23e7399ce2d503088e1d6f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_letter_spacing</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a47a973bd3401896610015a03aaa5b171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_letter_spacing_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af6fb2e441e09212b2845bbb46bd658a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_letter_spacing_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5e48fc906bde34231a3223f1d11f5fe8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_font_features_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa446a785cb123f8db9c1f1f5579a9024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_font_features_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a01a1846d3b25a0438cc2d51e4add2a76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_allow_breaks_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a615e1f3da0fbcfda7b27e82633f8d25a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_allow_breaks_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5ae264534d5d5a10fba811284a263173</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_spaces_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac3952de20cf8d49bf8cc0d84a1b4e757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_spaces_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0599623582667373a9a524ffcdb734d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_insert_hyphens_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afb8cf4040709045d750a816ce7ab8152</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_insert_hyphens_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a868506850d40a76bf264972e3a080f68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_text_transform_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7d6fb8bb84e3a569935162d278e8e538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_text_transform_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2d1aaee660f7cb4e02d911fbe062595d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_word_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a342e7c25a2a00357521cceae0eafc482</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_word_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a680fd0a8cbd45675f1f7e6b39df860d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sentence_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad1c32b1fcdc40eab07d57f023b53388a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sentence_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a4d3c17fc06d10be7927de549cb2a8778</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a327be329b7b886216e579bec00b9c3af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextTag &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a77e074719b2411cc19d3d8751b7be2ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextTag &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1f2f9b2f531d2cbae5f3b1a958f05ef2</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextTag</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0118aed9c66074ccd878d7dfde26a72f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextTag</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab831f58c78ce1b1e9670ce8753a64887</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextTag &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad02677388669af2ca46d9fda48d9e569</anchor>
      <arglist>(GtkTextTag *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextTagTable</name>
    <filename>classGtk_1_1TextTagTable.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::Buildable</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const Glib::RefPtr&lt; TextTag &gt; &amp;)&gt;</type>
      <name>SlotForEach</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>aacb6dbba8a5acf81d5e9b70d41a3ddb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextTagTable</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>acff08db504fb43f80d342ca6ee6069bd</anchor>
      <arglist>(TextTagTable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextTagTable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a98e64661984cf34416935715a2f3de61</anchor>
      <arglist>(TextTagTable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextTagTable</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a4b5c6a38ec63bc1f89e22c024d082458</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextTagTable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a0eadd28f140ebeda60804c6aa27725f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextTagTable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a68ce3e9d1a6ee71ce955906b1fc18918</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTextTagTable *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a375f95847f5e365447de8b33e8cfabbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>af99009e79aab5d1d136900667dcfe093</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a79d9830a77cc0e07172ce192667e8fc3</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextTag &gt;</type>
      <name>lookup</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a58f83d7b98cf4f496a88ef63e8969d6c</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextTag &gt;</type>
      <name>lookup</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a301a61777cdcf615e495e53c7b49a364</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>abeacc4e997e9f6887529d386edaca477</anchor>
      <arglist>(const SlotForEach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a67d442659bb8cf6ded6ac9965b7811aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; TextTag &gt; &amp;, bool)&gt;</type>
      <name>signal_tag_changed</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>aeb2fba0248f6ef7cddb9bbaf03a01abb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; TextTag &gt; &amp;)&gt;</type>
      <name>signal_tag_added</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a0b53640737a32d7f53e8e229f9829ccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::RefPtr&lt; TextTag &gt; &amp;)&gt;</type>
      <name>signal_tag_removed</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>afa3903e4ceba769c0bd3c0e49270880e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a9174e17b8a29f7202358e48aef5d088c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextTagTable &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a6ca88ad765e61b9a73ad34211bb0e737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextTagTable</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a6b5112b9114440b7ed575b7a70f70f13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextTagTable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>afecff5703b124b252f5d63301eba5a8c</anchor>
      <arglist>(GtkTextTagTable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextView</name>
    <filename>classGtk_1_1TextView.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Scrollable</base>
    <member kind="function">
      <type></type>
      <name>TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af516817338c664ce570b8e8e65f561e3</anchor>
      <arglist>(TextView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a328507b2d019f1184185e4a077631798</anchor>
      <arglist>(TextView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a6637d2aec4565b48105143ace7bda92a</anchor>
      <arglist>(const TextView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a1ab94d3878732a22d135277d390b50a9</anchor>
      <arglist>(const TextView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8bc54aabf29c289bf157624adf59a73d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af4b8c1eaffa4bce083b16e3a798d846a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a97bdc4f8a4d342872887f970f28daf0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0add2eb74ece8495dc7292a73db7682d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af523eda3619878bf5bcee6e03d381346</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af37a02176da5a9bb33e6490e74b2c90b</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a309c03880870321b6f19c89ffe4319be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad1a04d2120f845516bf0679844cb6dc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scroll_to</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9b23b8dbb4362c639abaa05ba9284d3b</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, double within_margin=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scroll_to</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8412941c4da9a71a381052d6049164e4</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, double within_margin, double xalign, double yalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5baf5175cb86631e9adbf481f0f18141</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark, double within_margin=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a205933049cd72f91cb3d5bb2ca4b3228</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark, double within_margin, double xalign, double yalign)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move_mark_onscreen</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a22bf1325be6b58c70213eb77ab2dff03</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>place_cursor_onscreen</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af6b67fe8d287f8db998edd785a2e1a7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_visible_rect</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aacafd481083f4c1ad3ff3c0c351c11b6</anchor>
      <arglist>(Gdk::Rectangle &amp;visible_rect) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor_visible</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ade59cd716b271f26b251b101f000be5a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cursor_visible</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9f8217a3306b89a56ed31162493260da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_cursor_blink</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad2ed708d37781d9faa3f6b4ee66c308c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cursor_locations</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7933bac07f9787c6346c9413c7772ba1</anchor>
      <arglist>(const TextBuffer::const_iterator &amp;iter, Gdk::Rectangle &amp;strong, Gdk::Rectangle &amp;weak) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cursor_locations</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae48c111c473f1190d28d46eded92b6d1</anchor>
      <arglist>(Gdk::Rectangle &amp;strong, Gdk::Rectangle &amp;weak) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_iter_location</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a89b649580bd0f88b23060d894b89bf00</anchor>
      <arglist>(const TextBuffer::const_iterator &amp;iter, Gdk::Rectangle &amp;location) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_iter_at_location</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae26af0f3ce791700875fdc253dc410f2</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_iter_at_location</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a4908e235f9548d994145afa8193cf7a7</anchor>
      <arglist>(TextBuffer::const_iterator &amp;iter, int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_iter_at_position</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab633579b555b3c92d7fff341cf5f822f</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, int &amp;trailing, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_iter_at_position</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>abf686001fcdbe615b03ca75d9c0526be</anchor>
      <arglist>(TextBuffer::const_iterator &amp;iter, int &amp;trailing, int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_line_yrange</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aad518fda62190eb78c753c0d86e69773</anchor>
      <arglist>(const TextBuffer::const_iterator &amp;iter, int &amp;y, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_line_at_y</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af13d510631e6e568b8546f3b57da17ac</anchor>
      <arglist>(TextBuffer::iterator &amp;target_iter, int y, int &amp;line_top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_line_at_y</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>acd6bd650284820cd71c4813e7c57ff48</anchor>
      <arglist>(TextBuffer::const_iterator &amp;target_iter, int y, int &amp;line_top) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buffer_to_window_coords</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0432e5761e99e3055bd88de0bba22443</anchor>
      <arglist>(TextWindowType win, int buffer_x, int buffer_y, int &amp;window_x, int &amp;window_y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>window_to_buffer_coords</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>acd01830cb9482f458d2a1a79ef049c43</anchor>
      <arglist>(TextWindowType win, int window_x, int window_y, int &amp;buffer_x, int &amp;buffer_y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_display_line</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a44de109c094aec1320d6a3c76cd52a00</anchor>
      <arglist>(TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_display_line</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a95fcb12f565550e34f43a29ffd5a23ab</anchor>
      <arglist>(TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_display_line_end</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>acf9dce8edb9822feab10b9d41d2f9079</anchor>
      <arglist>(TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_display_line_start</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7aeed796b4544624024d099a4ef80cca</anchor>
      <arglist>(TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_display_line</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>afe203a8792d554e3a89f8a32c7ca3f35</anchor>
      <arglist>(const TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move_visually</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9323c9a9be5ffb7384adb71813304dca</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>im_context_filter_keypress</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>adc49f1ab14d4aaf7da0111d6e253fd82</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_im_context</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a2b7920c09f10e7d254aec01c952b157f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_gutter</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a19290284463bdcc0d941a9923ee57959</anchor>
      <arglist>(TextWindowType win)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_gutter</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>afcf17397a22a9e670363400db2b1de60</anchor>
      <arglist>(TextWindowType win) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_gutter</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a64116223ea3ee523bd8df52dd56c722a</anchor>
      <arglist>(TextWindowType win, Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_gutter</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab09cb8362e3bf50864e66b2a3dcc8a0b</anchor>
      <arglist>(TextWindowType win)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_child_at_anchor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab6eb1e46c4c6b158c528cb7960f9f247</anchor>
      <arglist>(Widget &amp;child, const Glib::RefPtr&lt; TextBuffer::ChildAnchor &gt; &amp;anchor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_overlay</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab0f953aacb6f9a0e3e36a00e1295e9e6</anchor>
      <arglist>(Widget &amp;child, int xpos, int ypos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_overlay</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a56f8abc0e69cde16462ed2fbccdecccc</anchor>
      <arglist>(Widget &amp;child, int xpos, int ypos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9ba825c4f607ce35f46d0b7bd1b81c79</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap_mode</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a662a116b04038b2a0f084626a3d9e63a</anchor>
      <arglist>(WrapMode wrap_mode)</arglist>
    </member>
    <member kind="function">
      <type>WrapMode</type>
      <name>get_wrap_mode</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af2f635ca672004303418cd30a759f04f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_editable</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>acb7835770c4999ae2a9616332157b67e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_editable</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae1f0c8e3794ef2ff673c2f5bfb3ad735</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a205630db6e1de6052d24e886962aa91e</anchor>
      <arglist>(int pixels_above_lines)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad1856df85a74f4fd7146cce464f75add</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a416ca2e2f7a052c5f0c26bb1b722b4cd</anchor>
      <arglist>(int pixels_below_lines)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0a2e0370bfc81f4949fb2104402c8ed3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0bb1521550891758f46ee55ad677460f</anchor>
      <arglist>(int pixels_inside_wrap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a44991887bc7598cca1f15144499f23e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_justification</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad95ee09f587b88d11e52e650c1232a46</anchor>
      <arglist>(Justification justification)</arglist>
    </member>
    <member kind="function">
      <type>Justification</type>
      <name>get_justification</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a95a4ed6f8a528315c0ab35ff4088efa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_left_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8dd21baf36082f0e293a26149a0e3533</anchor>
      <arglist>(int left_margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_left_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aa916009024d0c3b6a8b5477b298ffcff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_right_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a75bc3e41db3d4112391ad621619d392b</anchor>
      <arglist>(int right_margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_right_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a38a086afd977bf25b928bf9b6d072dcf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_top_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a43ecb687aadeaae0e77f2f770ba15f19</anchor>
      <arglist>(int top_margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_top_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a729ee87379f9f1eb152e2bda5a81af96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bottom_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad1df874cea9a350a3812c7d60c18d7c7</anchor>
      <arglist>(int bottom_margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bottom_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7d83a6cde9feeedbe04b19df7f4e31fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_indent</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7702a6f3f110428c564ae4eee3a30dcd</anchor>
      <arglist>(int indent)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_indent</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a89f798718def3eb2cc2ad2497572b485</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tabs</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af4cb0271b6a18e1f04f88c975b6f0547</anchor>
      <arglist>(Pango::TabArray &amp;tabs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::TabArray</type>
      <name>get_tabs</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a74e428b1dafe983d04dfed6cb9fb6438</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overwrite</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad03c80210645fb840edd03b89cd54acb</anchor>
      <arglist>(bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_overwrite</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0c5279558bf1260ce4a92ff15bf6345e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accepts_tab</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9e683ecc969533dbdf5efbc2452de83a</anchor>
      <arglist>(bool accepts_tab=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_accepts_tab</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a6dde8bda7d3f7c28450f4e59359c947d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_purpose</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8696fb83ed509a0bf1803b3d5dd60560</anchor>
      <arglist>(InputPurpose purpose)</arglist>
    </member>
    <member kind="function">
      <type>InputPurpose</type>
      <name>get_input_purpose</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a25f416a7a997db5d7393e9fc54fb3cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_hints</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a2b0f912bf32d993ea0553890cfa62c37</anchor>
      <arglist>(InputHints hints)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>get_input_hints</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a084e644665c5cfbe939b0f58a67efaa4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_monospace</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9abd9cc4c4d8d5c6b36229f4c46c4506</anchor>
      <arglist>(bool monospace=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_monospace</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a4f0f83403cf805ce32405f0e25f168a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_menu</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7d9905b4d5c4857a7fe98e3203151022</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a224e4207c63da52cfe0ba9f80fb34c9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_extra_menu</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a85fb5a8296408faf5872bcb7e6fbf0e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Context &gt;</type>
      <name>get_rtl_context</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9511c90677ed222740d77f82ba9c9625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::Context &gt;</type>
      <name>get_rtl_context</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0fe8e7222dbbed474b89f502068ac128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Context &gt;</type>
      <name>get_ltr_context</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a50e5a79ee369c703721e325dbd1db6a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::Context &gt;</type>
      <name>get_ltr_context</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af3dca66f4099e918e2baf02bc2f27025</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_set_anchor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a081f9150b3102ad050a457f6ff763674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const Glib::ustring &amp;)&gt;</type>
      <name>signal_insert_at_cursor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aab8862e417c9f8f8b5a18cb3333344e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aaffdbc5f3d78ba5bc3b02a029a6d5d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8fe1792ab753a2f03e16be110f27b1d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a78f7b312655bb6443278b23221a3aecb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>adf1f9bc6e49453861b343098c1602311</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8a7d5ecef4a9de16d524f125984e1861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad9808808325ccea4c54017cc7969b0a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aa102cb3b46a15c232b597e32b7a34937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>afe2bb1bb7ee7eab41a42442cded124a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a6fbda7d3e99fb6b7929bf9ae9ebd98d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a6ed9a21799b509b53203052f9e385a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Justification &gt;</type>
      <name>property_justification</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab70785b6c3ecc35d6d1e186dcbfde73e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Justification &gt;</type>
      <name>property_justification</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7d0fe2df23e3426b0377822c8586bc33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_left_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7d561e4c4bc5e31ffd87ec436d6d8cf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_left_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a2a473a0311944e199286d2780c7201b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_right_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae521a55d32e9a27b271d1e3df19691e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_right_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7b1dfa259256b98bec2e17422abd1d7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_top_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9c8bbfe9567bd49964d35061b506dcd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_top_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>addf650a3475c0545090cfe64496ad2ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_bottom_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a93a720f6b2c52947f5e358aab5196d60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_bottom_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a86dec5ef526558b8b7a98fc71f654b52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_indent</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5f30f5633038d206997b662c4f09e887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_indent</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a2ac8002a81e6d259aa0ad09d327c424d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a97cb64499e7c78f2edf16eb7c8db6159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9975ec96eee78ee6a06f5f0d4a0b5402</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_cursor_visible</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aee8628792cb57eda712e9acf8ffb2ca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_cursor_visible</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a1860b1a5e01ced771ee016b8f5c1cf6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TextBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad284fa8d52787aec3af60a8d023ddaf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TextBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a948b4de1f6fb8746bac5cf1e6a86a871</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overwrite</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a431381047fb0e17752d51c0a80bc6690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overwrite</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a4651b4f043b76c6efbd8871f4a0d78a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_accepts_tab</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5ff2381773501c985043e5eb836eeaca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accepts_tab</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>add77f6501e17be374257e176d7b59ba8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a99369cb482dde262ead21405d9aaeb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a14c49ee6d879d423fdf80e91b25a22e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae2e5919a49692d90007bae720193efa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a368df4cbc37fabe3397faa0cdc0ca130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae3c16b08c8d567d05b82df268ebdd1e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aae917facea4f88329312b2dc9ce5a4a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_monospace</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5f12b7435219a14097b6509d0db5361f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_monospace</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a245dbd12bfee90cebd6189f92578de16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aebcf25736d000e7284b2e4d1a8cc8637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_extra_menu</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a95b326c7fe70c8837dd07e22b91a4063</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9deab7bf2f2df33a9ae0b422036d05a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_set_anchor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>afcb9bf4a7c17b1232748311eaa277b24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_at_cursor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a18fee8e67e2ae8ce7d74a1edde139efb</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TextView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a75fb83dd76e5c1cfea8e8f110f3a61bb</anchor>
      <arglist>(GtkTextView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToggleButton</name>
    <filename>classGtk_1_1ToggleButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a81ebb61c737d14ee998a7290aa56362b</anchor>
      <arglist>(ToggleButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToggleButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a33ede5042b18f8be6e6810116b14309a</anchor>
      <arglist>(ToggleButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>ab9c13a6fcb9d3396d8918475cb7f494e</anchor>
      <arglist>(const ToggleButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToggleButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>af3d76ddb8440c88ea7024da4d7a351b5</anchor>
      <arglist>(const ToggleButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a3d658cf83200b53aed6749a3f71073f5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToggleButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>aaf95f140bb908c7424ce489c8c988993</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToggleButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>ae48839ba71f7dd62410bcbcde26103ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a945ddca141501dc344d281981a59330f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a119f705699e515078c92b51b1f152497</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a88f56cc3b99057fdffca3e0d0b5001a2</anchor>
      <arglist>(bool is_active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a3a0e039f50815795a46656ae5761e531</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggled</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a1fcff3b2f50b5a2e78b51339660f5c3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a90509c164d5e340461581acd971b8eb2</anchor>
      <arglist>(ToggleButton &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_group</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>ab352caf058c6b337deee1aa6bc75de90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_toggled</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a4ddac843a7efcd677070cbeec783f887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a64b11a63de3d61ac0dfa7f6c4219a280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>aaa77548f13fa86b0a1df80df7c8997e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; ToggleButton * &gt;</type>
      <name>property_group</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a44208d1f033f437b85008574e4ee51a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a73203936a6c270d446ff32ef365f378a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggled</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a61f3c4a4eeb448e533579dc0509d363b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ToggleButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>aff198f3e8571926bffa8450220573901</anchor>
      <arglist>(GtkToggleButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Tooltip</name>
    <filename>classGtk_1_1Tooltip.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Tooltip</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>aa481ad792965135092c12e1312408ce8</anchor>
      <arglist>(Tooltip &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Tooltip &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>afcae9a3923e68db3ec6e66ecbb541f56</anchor>
      <arglist>(Tooltip &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tooltip</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>aba17340ea9fc094afdf05b33019ec921</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTooltip *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a6fd1e9cfe3aefe37b56217036eb7a9b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTooltip *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a2e778e4009f24326257b854ddbbba004</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTooltip *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a83a2d5479fc5dbd10b73fe2dc4c0cecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a49e0b6727492955b588399809eba8943</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_markup</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>ad86b297cbbb539a2c274c5a0af9ab73f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a050b7ea7894290257eb0e8dd0ccddf95</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_text</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a7b147eb8a23478ff52fbb41c97783e54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>af88e51714d3bcc8f6edfe02d1ff1c150</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Paintable &gt; &amp;paintable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a42e7580851ffce8ed4c3a9f248a6fd6b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;gicon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>aa68e12bf024a288e08b02313ad7f935f</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_icon</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a155467ddaec3fbbebb8dcf95f72484e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_custom</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a46d40fa085a79d98c8220cb5690528e3</anchor>
      <arglist>(Widget &amp;custom_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_custom</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>adb2713433a636b85604be415a803c674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tip_area</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a197701484426a19f1dee98411e3d3878</anchor>
      <arglist>(const Gdk::Rectangle &amp;rect)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a851cb28fda97592c333e17e07007bb26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Tooltip &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a7bf26ebe7007a80738146ccee0f3a0c6</anchor>
      <arglist>(GtkTooltip *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeConstRow</name>
    <filename>classGtk_1_1TreeConstRow.html</filename>
    <base>Gtk::TreeIterBase2</base>
    <member kind="function">
      <type>const TreeValueProxy&lt; TreeConstRow, ColumnType &gt;</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreeConstRow.html</anchorfile>
      <anchor>ac6f642569a55728b7bf22af71f398e6b</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;column) const</arglist>
    </member>
    <member kind="function">
      <type>ColumnType</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1TreeConstRow.html</anchorfile>
      <anchor>af525d5772b7e04b5363f432520624fda</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;column) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1TreeConstRow.html</anchorfile>
      <anchor>a195a0697bf2f5e93ebe14841007c4e3d</anchor>
      <arglist>(int column, ColumnType &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>const TreeNodeConstChildren &amp;</type>
      <name>children</name>
      <anchorfile>classGtk_1_1TreeConstRow.html</anchorfile>
      <anchor>af89ed51e91868f64b2df89a47158d993</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeIter&lt; TreeConstRow &gt;</type>
      <name>parent</name>
      <anchorfile>classGtk_1_1TreeConstRow.html</anchorfile>
      <anchor>a55fc05f39ff1a745218e02ea050737e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeIter&lt; TreeConstRow &gt;</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeConstRow.html</anchorfile>
      <anchor>ad11b7a551b9c8c83a0c14b3607e3f514</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreeConstRow.html</anchorfile>
      <anchor>a4181764ba206e2b0548564572f9188f4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeDragDest</name>
    <filename>classGtk_1_1TreeDragDest.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>TreeDragDest</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>ac0d7e9992898ab7a1ea229b09078ae06</anchor>
      <arglist>(TreeDragDest &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeDragDest &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>ae7a009b9d21aa331666ea279980970dc</anchor>
      <arglist>(TreeDragDest &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeDragDest</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>ae4ea6bc1ec7b44c6687d4bd876e04fc7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeDragDest *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a32d7775ca642898c25273907634a28b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeDragDest *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a85e055266b044e97512086c26712578b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drag_data_received</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a844ccc263bc158ebbdf46bdf24a07b08</anchor>
      <arglist>(const TreeModel::Path &amp;dest, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>row_drop_possible</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>adf14efdd255ba5d2593e5e25be3db2f8</anchor>
      <arglist>(const TreeModel::Path &amp;dest_path, const Glib::ValueBase &amp;value) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a259ed68ae21862fb34555400d7e87d87</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a126dfd3aadde251b92c808cc347f0313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeDragDest</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a65fd338b5296a8cd016581c7d97337fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>drag_data_received_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a0c3a644b1babf6d288a7c9bce6996c76</anchor>
      <arglist>(const TreeModel::Path &amp;dest, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>row_drop_possible_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a6146c89e4f4a25c37a8c6332e57068be</anchor>
      <arglist>(const TreeModel::Path &amp;dest, const Glib::ValueBase &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeDragDest &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a4e29c4220bb45f3521c0f4d2b34e6dec</anchor>
      <arglist>(GtkTreeDragDest *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeDragSource</name>
    <filename>classGtk_1_1TreeDragSource.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>TreeDragSource</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a7f3908639d42a1a1bf08707d6d69c78e</anchor>
      <arglist>(TreeDragSource &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeDragSource &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>ab21e8c299e1b082aea04b27e635323f4</anchor>
      <arglist>(TreeDragSource &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeDragSource</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>ac77570efae10439a6d219f00515be681</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeDragSource *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a7e32effaee58d75b30a8c2c2c69320be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeDragSource *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>abc5d806d4086a8883379b41cf746fae2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>row_draggable</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a0244fe284f84956ba1ec65e429e31097</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentProvider &gt;</type>
      <name>drag_data_get</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a6432d534590ea71887f83f7eaf6d351a</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drag_data_delete</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a71bcc9882e954d3b1ca1c7b636143657</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a4e0a8df1dbbb370748f9bffdc6623482</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a99e7ca9c6c9d5342f1aad33ff0444539</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeDragSource</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a549eebfb2f1a160252d8c5820a0beb22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>row_draggable_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a7fa2fce72ce853564175199d127b9356</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gdk::ContentProvider &gt;</type>
      <name>drag_data_get_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>adcba4f05f0d9243d78adac955f81746c</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>drag_data_delete_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a34849cb405c5a97999f749a59c08cda3</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeDragSource &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a2a6695148d1b0af9b11607363df4eec3</anchor>
      <arglist>(GtkTreeDragSource *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeExpander</name>
    <filename>classGtk_1_1TreeExpander.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>TreeExpander</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a20dbae47de20c1e54a5c762a0df3003d</anchor>
      <arglist>(TreeExpander &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeExpander &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>af27d02d70570611f035b17fa7ac740b3</anchor>
      <arglist>(TreeExpander &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeExpander</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>aa82c8ad7271bf7d241fe917bb8931245</anchor>
      <arglist>(const TreeExpander &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TreeExpander &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a3b7dc64c81f4b2cc244a009172c5b047</anchor>
      <arglist>(const TreeExpander &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeExpander</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a23118b63bb13c70a5b6c0537c2e75e9e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeExpander *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a6482c4c160a30929279b61f0cd818cb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeExpander *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>ad73d6934ce91663aae649f7602381fc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeExpander</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>ac15be98bbeade6641099c17fd20af36b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>ab93a66e283f6d8a51be94eaef3eae065</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a79a1952fcf043b5f2590fe875fa2035b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a7f27231d7648ffc6c43dce9c08d90e9a</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a3a07afa796a338c02713ed1f625baaa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::ObjectBase &gt;</type>
      <name>get_item</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a674e05246e604d32d624e80e436100e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::ObjectBase &gt;</type>
      <name>get_item</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>aeef6689135a29701e345b2731c81edd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeListRow &gt;</type>
      <name>get_list_row</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a40007418b144226c5a30d9293242b5df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeListRow &gt;</type>
      <name>get_list_row</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a88d2e595fe3f4e2dc9993f4a266ab2aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_list_row</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a598f69a06795fbd583bfa26f93a154b3</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeListRow &gt; &amp;list_row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_list_row</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a287cf28a3731f3faedabba2b1b7fc83b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_indent_for_icon</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>ad05eed9eaf8b11b29f9952b8e90911bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_indent_for_icon</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a6a5cdcc946178716f185d2f5be945c83</anchor>
      <arglist>(bool indent_for_icon=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>ae011d63421a5c16e20b56b9bddda26b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a2951d83cd47eb6bd465bced271b95ea1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Glib::ObjectBase &gt; &gt;</type>
      <name>property_item</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a4c2d4879bda335aa13df77e3a303a242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeListRow &gt; &gt;</type>
      <name>property_list_row</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a95c648e0cde11fc29b2305064f0eeec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeListRow &gt; &gt;</type>
      <name>property_list_row</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a3d8b800fb4a01403d49b89bf1ba67c7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_indent_for_icon</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>aaa398d429a3f7f6c380f2a59eee95c54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_indent_for_icon</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a600e8eec6e7c2b9209e8a8d1e50a71ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a1c4e2a38e520432ec10579ad53994cac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreeExpander *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeExpander.html</anchorfile>
      <anchor>a5d05989897bc38a667cbabb04d46c3ae</anchor>
      <arglist>(GtkTreeExpander *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeIter</name>
    <filename>classGtk_1_1TreeIter.html</filename>
    <templarg></templarg>
    <base>Gtk::TreeIterBase3</base>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a8ea70a95c11cd64ae544245001054415</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a5da22a81cca9d0e66698471f6f0ea568</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>afeaf7cb18aaed52eea06af33df4a191d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a6fc4af99b405fc02575b80aaa5704046</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a55f4956a474d9508cfde63fc9c0a3fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIter</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>af6b6f943956d6cef00db935dae72e33e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIter</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a74c0ee4c3cf79f8d5f4f224b886b9b9d</anchor>
      <arglist>(const TreeIter&lt; T2 &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>TreeIter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ab8e2fa0c0d38cec7272b15ded1f6899e</anchor>
      <arglist>(const TreeIter&lt; T2 &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>TreeIter &amp;</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a04e64d0e34d8414e07eb5c9200457da9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeIter</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ac9e842530e1d5142b56f2dd2c8ed5f23</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>TreeIter &amp;</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>aa008963337005b4748096db14c695d9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeIter</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ab7b068169215ba6f0fa4b8330c4f6860</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a38a749d54a9d550fe3031caca9242705</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a696dead7aec94f0cedde61298fc5b92c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ab235b01d94a640564ef890a0308cf082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a276d5e6b7e46d270e8e349722f83f382</anchor>
      <arglist>(const TreeIterBase3 &amp;lhs, const TreeIterBase3 &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a338467bdc2a6ff29639dd06d6572fa51</anchor>
      <arglist>(const TreeIterBase3 &amp;lhs, const TreeIterBase3 &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeIterBase</name>
    <filename>classGtk_1_1TreeIterBase.html</filename>
    <member kind="function">
      <type></type>
      <name>TreeIterBase</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a0a94a983836379121747823df61d622a</anchor>
      <arglist>(const TreeIterBase &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeIterBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a7059a6680529da8a430aa835b32e3a07</anchor>
      <arglist>(const TreeIterBase &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIterBase</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a6eb65bfb8cc5a95bab1fa7ca635c0068</anchor>
      <arglist>(TreeIterBase &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeIterBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a2bd07600f35ab51994050a8c8a912413</anchor>
      <arglist>(TreeIterBase &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIterBase</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a0904577c8f2602dc7a5508068f0acfbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIterBase</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a10a9ab4a23c43d1252a4383ac1096c53</anchor>
      <arglist>(const GtkTreeIter *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a1479600863c422429b606e26885fc5ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a4c5dba5214a6e093fab38f522acb89a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a0d7ca80b3cc79576e0b43ef373f6064a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTreeIter</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a825f19ad20572560796c87c58a2d1cf0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeIterBase2</name>
    <filename>classGtk_1_1TreeIterBase2.html</filename>
    <base>Gtk::TreeIterBase</base>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeIterBase3</name>
    <filename>classGtk_1_1TreeIterBase3.html</filename>
    <base>Gtk::TreeIterBase2</base>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1TreeIterBase3.html</anchorfile>
      <anchor>a1dc98e87d045b30f15b58212ba7ac0d1</anchor>
      <arglist>(const TreeIterBase3 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_stamp</name>
      <anchorfile>classGtk_1_1TreeIterBase3.html</anchorfile>
      <anchor>ae44506c57e810d9433818b317dbae3b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stamp</name>
      <anchorfile>classGtk_1_1TreeIterBase3.html</anchorfile>
      <anchor>abf5ff4fd9af21d8e455095ad2232af64</anchor>
      <arglist>(int stamp)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeListModel</name>
    <filename>classGtk_1_1TreeListModel.html</filename>
    <base>Glib::Object</base>
    <base>Gio::ListModel</base>
    <member kind="typedef">
      <type>sigc::slot&lt; Glib::RefPtr&lt; Gio::ListModel &gt;(const Glib::RefPtr&lt; Glib::ObjectBase &gt; &amp;)&gt;</type>
      <name>SlotCreateModel</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>afd0682a5b3c78984c493c5982712939a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeListModel</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ab82095a8ab84a785dc11005749e20cd8</anchor>
      <arglist>(TreeListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeListModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>acdfe15c703e162d6b7c942cff66d3cba</anchor>
      <arglist>(TreeListModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeListModel</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>aeb161d137d9a929024562c5be102e517</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ab7ade0e9ba5e196e22647526841566b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeListModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ae40b3e70d05afdf7a53a294e2b6703c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeListModel *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a85481681969ef6ab525475ace155a0ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a724caa63ad5f03ac942daafb4592fd9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a35ffa925e24cc435717d6a85d65df91e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_passthrough</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a414a178ae674608e852d1e4d00dcb851</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_autoexpand</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ac02cb410fbfccf09ee24a7e1821909bd</anchor>
      <arglist>(bool autoexpand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_autoexpand</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ad506a133a8df5be5eb413d1e4e7c0b04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeListRow &gt;</type>
      <name>get_child_row</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a9c515121a6ff57a6e77dd84258286fcb</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeListRow &gt;</type>
      <name>get_child_row</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a35d175c8d0a545eb971b3c95d36a36a8</anchor>
      <arglist>(guint position) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeListRow &gt;</type>
      <name>get_row</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a4a27957e5d7d330658c84b730c7fbc65</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeListRow &gt;</type>
      <name>get_row</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a571581eb4fb94a8da586036b4f2919cc</anchor>
      <arglist>(guint position) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_autoexpand</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>adf67a588ccbd91b015577f3b4d203324</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_autoexpand</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>abf3dd19fa2fc5e085525619f43b0305f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GType &gt;</type>
      <name>property_item_type</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>aeca034faad2066bf05113f98afaa74cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a8694905e9425f718f85ca36d26c32aa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_items</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ac7cb6e5246662d3f24c1938cd8f7305c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_passthrough</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ac07b6a68eaacdbb05cc26e2e1023b43e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ab85b44cefc582b94eefd1f2ff6e2e48c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeListModel &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>a6b844499d3d40b162104016b679c7d44</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;root, const SlotCreateModel &amp;slot_create, bool passthrough=false, bool autoexpand=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeListModel</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ae19f7c1328ecaa66642119ce421dbe28</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;root, const SlotCreateModel &amp;slot_create, bool passthrough=false, bool autoexpand=false)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeListModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeListModel.html</anchorfile>
      <anchor>ad024be9d3f7a5f5c2c8de4a8d2ccdb3e</anchor>
      <arglist>(GtkTreeListModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeListRow</name>
    <filename>classGtk_1_1TreeListRow.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>TreeListRow</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a45803b28bd32d52a1704e12d1b0702f0</anchor>
      <arglist>(TreeListRow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeListRow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>afc9c4b4d8acf840218b4a29e1c9a3c29</anchor>
      <arglist>(TreeListRow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeListRow</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>aae0cdbd1ae9712b9ac4f17bb24ded2bf</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeListRow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a6d019c9e8955e2b6b8b036263b22cca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeListRow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>ae29ad9925b31193a25475bf13a011146</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeListRow *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>ac2baff0e20300f801c6593874d7482b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::ObjectBase &gt;</type>
      <name>get_item</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a9abcb9e830e87363ab85a743ecc6cd4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::ObjectBase &gt;</type>
      <name>get_item</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>ad441de76222fdd6cd93d11fc94e3229e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expanded</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a786663e92737393c669cd902b0a812ff</anchor>
      <arglist>(bool expanded=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_expanded</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a8bc60a76841a2fdadf6f8ffdabd28001</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_expandable</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a15fc1eb2ebbfbe43300203a00a84412c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a19312d4d268245b9874f53847efa353e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_depth</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a2ebaf3fbf13797bf9915dc6f3e680b3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_children</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>ad0ce5964f7dd3a9b5a90d53dd00d5fbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>get_children</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a95dc34c29d7d777a6a2055bf50ab13fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeListRow &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a4fe549e5246e2793843a3b5b2dcf0647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeListRow &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>af1322c9c0978e78de802d5089c5328ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeListRow &gt;</type>
      <name>get_child_row</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a0989617eaddbf9ca85fbf51a221fa996</anchor>
      <arglist>(guint position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeListRow &gt;</type>
      <name>get_child_row</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a04faf9ff0960b73f15b9c7d3b8884a6a</anchor>
      <arglist>(guint position) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::ListModel &gt; &gt;</type>
      <name>property_children</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a556bcdbb81b938b7269dd094b31d9613</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_depth</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>acf9b88e0fc13f6df370715c4b9b23490</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_expandable</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a8aaab2fc6b35cd7842b260e591d5a802</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_expanded</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>ad34f9324fd81e9e338b8a67f1dac458a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_expanded</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>ab863d6fe861c82e20bb06ba9d47eda8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Glib::ObjectBase &gt; &gt;</type>
      <name>property_item</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>aabbc56e8d139c752104b0170e9b9a9d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>a3a26fa02f98d9507afbb5f38cdf7198d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeListRow &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeListRow.html</anchorfile>
      <anchor>ade511e8a1fe72e0dceb6f99d4cd4f194</anchor>
      <arglist>(GtkTreeListRow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModel</name>
    <filename>classGtk_1_1TreeModel.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a86e009cc39c176e1966fa00a74d861</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a86e009cc39c176e1966fa00a74d861a58e421eaf5a6b2057a106d08aa83c433">ITERS_PERSIST</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a86e009cc39c176e1966fa00a74d861a6842aca958d33d116d261b1b1ca88abd">LIST_ONLY</enumvalue>
    </member>
    <member kind="typedef">
      <type>TreeModelColumnRecord</type>
      <name>ColumnRecord</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a58f10daabaa507b4c2473c9d1b6fa584</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeNodeChildren</type>
      <name>Children</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ad04e0f7d1bb271fceeef487a19b97703</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeNodeConstChildren</type>
      <name>ConstChildren</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a71478b3b9e5f9ef06e8aaa6bef9e5782</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Children::iterator</type>
      <name>iterator</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a754e74cd833ff30e729f9b8d7daf4d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstChildren::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a9dab3c7ae593f783641a86fc5582027d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeConstRow</type>
      <name>ConstRow</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a7180cd27c8af6d5f6bb909e67826c573</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeRow</type>
      <name>Row</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a297c9db68905e82fe7c3fac57f6c4de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreePath</type>
      <name>Path</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a06a713fecde31f2f1a7baeb0e3e2fea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeRowReference</type>
      <name>RowReference</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a518281b14bcc32f9d0ef4ca0584a1a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const TreeModel::iterator &amp;)&gt;</type>
      <name>SlotForeachIter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a1e28b7d299138140dae4fb699e630326</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const TreeModel::Path &amp;)&gt;</type>
      <name>SlotForeachPath</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a16638d51f90ee773295f4d6aa04b6822</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const TreeModel::Path &amp;, const TreeModel::iterator &amp;)&gt;</type>
      <name>SlotForeachPathAndIter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a75f611f25f4771bbd7273bb85030ab25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModel</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ac43d6be71926e7951e6fd623a3cc0929</anchor>
      <arglist>(TreeModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a1236a9b09c8a363d83a626e9e80185e5</anchor>
      <arglist>(TreeModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeModel</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a22a0d6b66ec08f25ccd1567dbb1dae3b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a190c8fd4588b844696e36e5c12966b4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aa079daabf7bce79b25482f4c97f77bff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aebaa795e4920ddc0ec5e39c9f4fbc660</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a2d407483ff220a080e287a30389eb2cd</anchor>
      <arglist>(const Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a7697e287ce17c6f2e900c5762f7ba77a</anchor>
      <arglist>(const Glib::ustring &amp;path_string)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a9d92b21297dd3b7f1042cc4708fbbd52</anchor>
      <arglist>(const Glib::ustring &amp;path_string) const</arglist>
    </member>
    <member kind="function">
      <type>Children</type>
      <name>children</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a62142e8a5beffb04a2b643d7f62c890f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ConstChildren</type>
      <name>children</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a63c6dbed9bbe9a3f329611a026996985</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach_iter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ab65a437945c182eb2b033336bb493bee</anchor>
      <arglist>(const SlotForeachIter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach_path</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ab3879b2da7542137d136515acc2d79fa</anchor>
      <arglist>(const SlotForeachPath &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a11fbc9b39c01210e525e7b6cdf91f66f</anchor>
      <arglist>(const SlotForeachPathAndIter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>get_flags</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a32419a0d73d41f24dab4eb49d443dced</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_columns</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a0285262f2cf1855a6f3e9ec601ac4987</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>get_column_type</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a21011c4e84c4897fb374c0dc87323400</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Path</type>
      <name>get_path</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a2f8909976df8c1d0c56e98ff1779c94a</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_changed</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a420cfdce42cd43dab1ab49c89ccce3a5</anchor>
      <arglist>(const Path &amp;path, const const_iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_inserted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>abd301accae626f663e1fff119e042cba</anchor>
      <arglist>(const Path &amp;path, const const_iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_has_child_toggled</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a7dc8f900f6a65d21242dbdad1d8d2e36</anchor>
      <arglist>(const Path &amp;path, const const_iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_deleted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ae8896f29424c2609fde93a873ac54b28</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ae4a0d6c03e883eabd212e0ffb902a8de</anchor>
      <arglist>(const Path &amp;path, const const_iterator &amp;iter, const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a4f141d63273cbac50bf84d0cf8d65948</anchor>
      <arglist>(const Path &amp;path, const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>afafc01fc0eebcd7c74dfa5e8cc199ac7</anchor>
      <arglist>(const Path &amp;path, const const_iterator &amp;iter, int *new_order)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_string</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>afb6831827205c8b89978693a23c541e9</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::Path &amp;, const TreeModel::iterator &amp;)&gt;</type>
      <name>signal_row_changed</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a00ad2d6b2e1c90d360bc1b312b7fa5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::Path &amp;, const TreeModel::iterator &amp;)&gt;</type>
      <name>signal_row_inserted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a1202f9a3fa98eae177c3e013d9923586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::Path &amp;, const TreeModel::iterator &amp;)&gt;</type>
      <name>signal_row_has_child_toggled</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aba6d3492028a2ebad56d465a7a2b28ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::Path &amp;)&gt;</type>
      <name>signal_row_deleted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a35c24eb58800aaf203362e2d52c89dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::Path &amp;, const TreeModel::iterator &amp;, int *)&gt;</type>
      <name>signal_rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a3a6f3e5cfd5d6d17f7957d1b6cfe788c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aed810cc59d8176fac21c9559e03d4c51</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a8795c37c6a281af3488135207e1c9661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModel</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a32fe9767f9ad56c546635e143645cd5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Flags</type>
      <name>get_flags_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a60a228c548bef0e61aeb81e93bcd2dc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>get_n_columns_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a761eea02645113360f925155ec8fe09f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual GType</type>
      <name>get_column_type_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a3c445e784850b90d8fad090737c9b269</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_next_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a282c02ee6be50a2b167768042d3ad316</anchor>
      <arglist>(const iterator &amp;iter, iterator &amp;iter_next) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_iter_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a89fe44f8715f2c7b1c9e7104fb746191</anchor>
      <arglist>(const Path &amp;path, iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_children_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>adf43a4f1ca0e7e285fbce524d1296e1a</anchor>
      <arglist>(const iterator &amp;parent, iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_parent_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a0db3a23fd87fcfb90db13dc9172c6b11</anchor>
      <arglist>(const iterator &amp;child, iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_nth_child_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aaa1d9352002b7407c388c57d8a647fae</anchor>
      <arglist>(const iterator &amp;parent, int n, iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_nth_root_child_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a39c448962f206fba8005005d4c13037a</anchor>
      <arglist>(int n, iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_has_child_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>af473ce3668b75cb0b27248588c1a7430</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>iter_n_children_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a2988bbcac6f591322b136048d1a7db77</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>iter_n_root_children_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a7622474d01133ddd29c05334fa5565fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ref_node_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>abacf427063235d4d657137977985a060</anchor>
      <arglist>(const iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unref_node_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a9d10de1755c8cd883c3f5c6380d15250</anchor>
      <arglist>(const iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual TreeModel::Path</type>
      <name>get_path_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a845fa07517667f74eb0c93af129475f5</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_value_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>af4bfc1710e5e3725b90da29d02ec15dd</anchor>
      <arglist>(const const_iterator &amp;iter, int column, Glib::ValueBase &amp;value) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ad921a5a4390ca0dbc24e53e03209caf9</anchor>
      <arglist>(const iterator &amp;iter, int column, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_value_impl</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aa161622be496341ea6cc6ce9b78827c7</anchor>
      <arglist>(const const_iterator &amp;iter, int column, Glib::ValueBase &amp;value) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_changed</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a245ce3fcf75411a8800b05213e652754</anchor>
      <arglist>(const TreeModel::Path &amp;path, const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_inserted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a23134167e0e61f22e24d387eabc54890</anchor>
      <arglist>(const TreeModel::Path &amp;path, const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_has_child_toggled</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>abddf86f9cce30999456fe9aade3431e7</anchor>
      <arglist>(const TreeModel::Path &amp;path, const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_deleted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a438d4fd8dc0228c6b57ea7a031422cf8</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ac5e459f6370dafe528d928c99f0086c8</anchor>
      <arglist>(const TreeModel::Path &amp;path, const TreeModel::iterator &amp;iter, int *new_order)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a2d29b43d317146b7c021516ca1d1627c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeModelSort</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>abb98f16ab9b02fed117ba8c6749c5a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeConstRow</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a51391f16a224a840e57f10d6f8cab3cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeRow</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>afedc3e0ddd939699f1dddcbc2e0ce08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a510776c39d65f700937cf14a2f6bad73</anchor>
      <arglist>(GtkTreeModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelColumn</name>
    <filename>classGtk_1_1TreeModelColumn.html</filename>
    <templarg></templarg>
    <base>Gtk::TreeModelColumnBase</base>
    <member kind="typedef">
      <type>T</type>
      <name>ElementType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a548b32f98d1fb957559ebc4c709b8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::Value&lt; T &gt;</type>
      <name>ValueType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a769fbaa0f9fd6a4c921ebb61720ed294</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModelColumn</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a52cf4894a268461a6bb4b26f913874e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelColumnBase</name>
    <filename>classGtk_1_1TreeModelColumnBase.html</filename>
    <member kind="function">
      <type>GType</type>
      <name>type</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>a65f94f8020762e6a81f84fa3a3c131c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>index</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>af60b5bbfbd3263bb641957bc8197b9f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModelColumnBase</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>a761854a755c2bc705c062db4951e98ab</anchor>
      <arglist>(GType g_type)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeModelColumnRecord</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>ac76999a1598577a8ebfad075754eb704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>a1f4af6a0e47968de278abd74b3518a7e</anchor>
      <arglist>(const TreeModelColumnBase &amp;lhs, const TreeModelColumnBase &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>ae1aad7c9eb64bcfd9931659e24cc6336</anchor>
      <arglist>(const TreeModelColumnBase &amp;lhs, const TreeModelColumnBase &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelColumnRecord</name>
    <filename>classGtk_1_1TreeModelColumnRecord.html</filename>
    <member kind="function">
      <type></type>
      <name>TreeModelColumnRecord</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>af0c1c552400694ad0d7e5695f8868d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TreeModelColumnRecord</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>af0397b1c80d141d7ede270da3e733698</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>a7084fc10fa1abf0d7317558b8462559f</anchor>
      <arglist>(TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>size</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>a68a155c4f306f46985e8ac96f73cb5be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const GType *</type>
      <name>types</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>ab91e162d1826310baeed8859fe3148ff</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelFilter</name>
    <filename>classGtk_1_1TreeModelFilter.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::TreeModel</base>
    <base>Gtk::TreeDragSource</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotVisible</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ac8fa0042de643daf022f8e86bbf17029</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const Gtk::TreeModel::iterator &amp;, Glib::ValueBase &amp;, int)&gt;</type>
      <name>SlotModify</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>aece2b6f3e98544f004447dbd6af760d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a48a196155ea1b878e160ee0f6f8a9f59</anchor>
      <arglist>(TreeModelFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a7a1768fe5b9f3c5c8fbec15d5e8d06ef</anchor>
      <arglist>(TreeModelFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a05058d16603e843e67a13b2b3d6296b2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModelFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a8b2569b6b90a043b8c78e01e97bd6d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeModelFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a51d27c4c764547f42e8ae1bc265618cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModelFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a55f6b786af57385b6e792934ef0077ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_func</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ad4d4273a355ad702b86718e714356e47</anchor>
      <arglist>(const SlotVisible &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modify_func</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a260411bc2461225c0ee80fa3d07e9727</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns, const SlotModify &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_column</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a78f4cc1a7d58261716ac51619316a45e</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_column</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a4a9b8e778e54a0e384b883daf2268340</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a841f5c3d099a9ef542352dc3ad2248e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a804af36b2ac9d35102e9b8a38a147e6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>convert_child_iter_to_iter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>aa49f7c877c6d2135ea85555329d96fa0</anchor>
      <arglist>(const iterator &amp;child_iter)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>convert_child_iter_to_iter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a5ae345b17833fe41bfbc3b87579066ae</anchor>
      <arglist>(const const_iterator &amp;child_iter) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>convert_iter_to_child_iter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>abd68d1e334d3b76c9ab3b56a4198e852</anchor>
      <arglist>(const iterator &amp;filter_iter)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>convert_iter_to_child_iter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ab5850a03bb906d0f151348d05514da83</anchor>
      <arglist>(const const_iterator &amp;filter_iter) const</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>convert_child_path_to_path</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ae38feced72a218395cc8fa7a7df5f47f</anchor>
      <arglist>(const Path &amp;child_path) const</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>convert_path_to_child_path</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a8bc4fe893efac9c3d690d22da330bd6f</anchor>
      <arglist>(const Path &amp;filter_path) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a00565675a42f714a76e9340894e29126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_cache</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a19c5a6d665017908ae5723d1d2dfa10d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_child_model</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a9f9f8cc691e6e91ef9f32e6445eae4ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TreeModel::Path &gt;</type>
      <name>property_virtual_root</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>af7caa2affdfa7eeba8cacc5acc672b4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>addfee05911c0ecaf7c1d4a789002b416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeModelFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ac4d7aded7af332e2865fcce8b56b2503</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;child_model)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeModelFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a1cb4ac25f615fadc6282aea067c6572d</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;child_model, const TreeModel::Path &amp;virtual_root)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a08ba79783d7c61fb112473eb915ce7dc</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;child_model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a42b4477837155ba56bbb416f2cf3515e</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;child_model, const TreeModel::Path &amp;virtual_root)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ac9cd6f92d84d7a853ab7d3f7165911f9</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeModelFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ad7f5385f08664253c28d58655565e815</anchor>
      <arglist>(GtkTreeModelFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelSort</name>
    <filename>classGtk_1_1TreeModelSort.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::TreeModel</base>
    <base>Gtk::TreeSortable</base>
    <base>Gtk::TreeDragSource</base>
    <member kind="function">
      <type></type>
      <name>TreeModelSort</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a086ba10306a45af88f8fcb397c1105f5</anchor>
      <arglist>(TreeModelSort &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeModelSort &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a4429467760dba40abeb430ab5ee02ad6</anchor>
      <arglist>(TreeModelSort &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeModelSort</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>ada4a9bdd1af5a40c84baf53ad19a482b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModelSort *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a29ab164c823754b5a6c9a8a9dcb8d393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeModelSort *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a75ae9bbd40f461c1b77d46482442f0d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModelSort *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a1702cc8e424b716604f282dab2bd00da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a461d21594a22ee599da259723696d2f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a72bbca514e4b81e3da453c758c9c9ffd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>convert_child_path_to_path</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a3302e796920afbe28677e5795176ade2</anchor>
      <arglist>(const Path &amp;child_path) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>convert_child_iter_to_iter</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a90c0c1bdaddef498594ccee864025c7f</anchor>
      <arglist>(const iterator &amp;child_iter)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>convert_child_iter_to_iter</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>aaa38284cd34efb464c1a41d5e1f312da</anchor>
      <arglist>(const const_iterator &amp;child_iter) const</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>convert_path_to_child_path</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a3a853126043a71b6aa961b3f191de5e3</anchor>
      <arglist>(const Path &amp;sorted_path) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>convert_iter_to_child_iter</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>ae0f9033fa48da7c9759c9fdd900fd424</anchor>
      <arglist>(const iterator &amp;sorted_iter)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>convert_iter_to_child_iter</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a4ce44e9e2ea3140b359c1ec00f677377</anchor>
      <arglist>(const const_iterator &amp;sorted_iter) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_default_sort_func</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>acbfdf9cf2b2a9fa020ef1c0baddf2b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_cache</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a485b2b2193d6a5eba854380b66c5ae37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_is_valid</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a2886d828d4d5c6b1940965ba8350ba67</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>ad76ccdfa0ebc5cde8be819a68655dc83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a0d514721ff90d8ab2e986f0e119bac35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeModelSort &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a935e3e841454ca8f5356a89939c78b39</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModelSort</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a0ea72bb50b9191a2d5f96aace894c034</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a36b29f080bed91fec8cc2cca188d3097</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeModelSort &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>aa305e93baaa6d6067930b3e9381e841a</anchor>
      <arglist>(GtkTreeModelSort *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeNodeChildren</name>
    <filename>classGtk_1_1TreeNodeChildren.html</filename>
    <base>Gtk::TreeNodeConstChildren</base>
    <member kind="typedef">
      <type>Gtk::TreeRow</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a93fb692447ce17894da754128dbf6f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Gtk::TreeIter&lt; Gtk::TreeRow &gt;</type>
      <name>iterator</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a621db45966bf0c3443c71fa4ce21f476</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a94f769a6d10e19ce8e165d8de5a5cda9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a08fbd2d34dda49e8d8d95e2e1f67067b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>af5a20f644ee38f622d0a2176802ea54b</anchor>
      <arglist>(size_type index)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a9f5690808a7fefa0f68dffad81dec44c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>aa635a23b43993680943608b6f0cb7bec</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeNodeConstChildren</name>
    <filename>classGtk_1_1TreeNodeConstChildren.html</filename>
    <base>Gtk::TreeIterBase2</base>
    <member kind="typedef">
      <type>Gtk::TreeConstRow</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>a1a36310c5d28b7f9d9714340dcb2613e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>size_type</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>aad1a123d881559aff2afbef1270d1533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>a2be107b9614343bd8d896b7c08112b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Gtk::TreeIter&lt; Gtk::TreeConstRow &gt;</type>
      <name>const_iterator</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>ace5808a36a5c5fee6921c79681b2b5bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>a9f5690808a7fefa0f68dffad81dec44c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>aa635a23b43993680943608b6f0cb7bec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const value_type</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>a761b672d5376cca2ac72c95e9f4249a7</anchor>
      <arglist>(size_type index) const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>a26e07ccbfb392fade88200de4abd67f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>ad3809eb268bd91c4886c9f4b4d48cba4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreeNodeConstChildren.html</anchorfile>
      <anchor>a3035d246788f958e88e9e8b41236c59a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreePath</name>
    <filename>classGtk_1_1TreePath.html</filename>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>size_type</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a99cbbd70d52aa10ea74981c2fa6d021b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8641ab32a5596000f307ae3608d887ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ae7cdee9d9ad3e55c7353ceb63a8f8e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int &amp;</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8ba6cc97dc395efc853f6a517b53252b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const int &amp;</type>
      <name>const_reference</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a978a88a4b11b340f82d92e307877da5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int *</type>
      <name>iterator</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a4429ec3b888a7469705c5cbe117febb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const int *</type>
      <name>const_iterator</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af681c0578f407544efa3a863af98dfa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reverse_iterator&lt; iterator &gt;</type>
      <name>reverse_iterator</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af785d04631b9c0c9bbbdaf0a7985f63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reverse_iterator&lt; const_iterator &gt;</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adb63aa886bebee7d8c4dd8c24588e018</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aab727e2aedceef53b09999b0784b4f29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a856ca3b96fa118735c6a7df07cf56035</anchor>
      <arglist>(const TreePath &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TreePath &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8114b0d1e52e9b2b2fcaa770fc9a3c3c</anchor>
      <arglist>(const TreePath &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a705c4d2367c8d642e866b7298ef26c94</anchor>
      <arglist>(TreePath &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreePath &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a045f0e42bead57442a960e7bcee55dd1</anchor>
      <arglist>(TreePath &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a03eac54c54a46e35e9a714643aa828c3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aa0d9a96b63ee2e42071ba37a267a025e</anchor>
      <arglist>(TreePath &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkTreePath *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a6b395e3a715bea86fb3570b6ca1c12bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreePath *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a77a77ac0e2260e8db0e5c0aa5286badd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTreePath *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a4be3b3376330915f4bb169cae2f52006</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a2767575c4dc4924a499c23241ae88a1d</anchor>
      <arglist>(GtkTreePath *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aa91b5da376e8b3284d84f744b09df6ef</anchor>
      <arglist>(size_type n, value_type value=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>abed03e843e12b7b64db39fae5b26cc30</anchor>
      <arglist>(const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a34aa9b8bcd7706c3f7202f68caca36d8</anchor>
      <arglist>(const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aaf8dc0c1f3f888681e3a39dae20b7861</anchor>
      <arglist>(In pbegin, In pend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af244289459d3a0af1bb574eed84b0d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreePath &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a0553bca2f5bc31343ef02d38183f878f</anchor>
      <arglist>(const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a9c5ab7c526996b373ed82b67dc0195b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a50fcad8eed42667ad56318ccf8b9bea2</anchor>
      <arglist>(In pbegin, In pend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adf8edbca65a75eb85a2f5ee487b0e6a9</anchor>
      <arglist>(In pbegin, In pend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a347cad71a31af29ed6fb775485ef4892</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_front</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a9fd4b8c6de711debeb9645fdb25ba836</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a41252047eeaa07f5b153bbc406fa49a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a126437034a3c08f7839a2d5dbe611164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ac15f76e56ff5bda112eda0e3ea20f47b</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ae8f7d8969c7a579a023a24aa4e3209aa</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a5e704ac7b9473507e8c282c2c3901226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a68aa895c43cea0c67d0165769faf3bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ac8adfb97d7d391187c01ec98109e8f84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af1558fd6e1229e2b0d74f333ad433383</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a19a4ae51bd965d01deec8739a5937e8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ab75ed31fcaeaaf397c6b5448b980f1d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a5214f945713aadea6c5d9edfb15bee7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a85b71c9650665f44aa9d957bb683406e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a88e6600f57d7f4f0d557ba40124ab90d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>abdfeb826ef7536ecebe934c429d334c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aeb126017b89d14116bddc42a332f902c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ac1313627c706a5fec22463ba89af4d8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>next</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ae770411bfac9b957e69152012599eecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prev</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adedbfeb13aa226f52862197f92217dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>up</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a33117cfbe4c36cb36c7b526fbd4a28c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>down</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adf27662d00fe313974e63566eaffa04d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ancestor</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a04a3084b58e2abff43e8d9e74a0ddaab</anchor>
      <arglist>(const TreePath &amp;descendant) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_descendant</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a5e55286965289da7878fc3ca57dea043</anchor>
      <arglist>(const TreePath &amp;ancestor) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aaf63ba3f9e05bcbdfbe8f08a91fac3b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::ContentProvider &gt;</type>
      <name>create_row_drag_content</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a742074a636249530c2fc9b3f60a3f263</anchor>
      <arglist>(const Glib::RefPtr&lt; const TreeModel &gt; &amp;model) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aea5817b3fea755f256e947b8693e3cc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>get_row_drag_data</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a4823a6def804c279e0cece21e9f84061</anchor>
      <arglist>(const Glib::ValueBase &amp;value, Glib::RefPtr&lt; const TreeModel &gt; &amp;model, TreePath &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>get_row_drag_data</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a258421d46f7129239e8ba5e25e826d1c</anchor>
      <arglist>(const Glib::ValueBase &amp;value, TreePath &amp;path)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTreePath *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af5885a402d809357dd6f4a54ff02448b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ab3245f7b3c2e377776d1402e46317716</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a25a7ab4ccfa3e9c0fc38f7cf9c8ae87c</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8e4d1ae1d86990e825b3337a450e2b43</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8fc7a593e8f7af6d239b93abceefaa64</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aea27279a029d5e26d99b0914f115d5fe</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a683125d78e4c286c8d42030062dae6ee</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a7a92f5ce349b4de53fefad8859908283</anchor>
      <arglist>(TreePath &amp;lhs, TreePath &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreePath</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a386743cf4644e0479bb91c3589fd9e07</anchor>
      <arglist>(GtkTreePath *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeRow</name>
    <filename>classGtk_1_1TreeRow.html</filename>
    <base>Gtk::TreeConstRow</base>
    <member kind="function">
      <type>TreeValueProxy&lt; TreeRow, ColumnType &gt;</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a1a9624e6887b5d0de35b7457f1c5756e</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>ae43aa01beb4306579e33c63fec71eaea</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;column, const ColumnType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a3704ec177350068afb74a5e628a6ef2a</anchor>
      <arglist>(int column, const ColumnType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>TreeNodeChildren &amp;</type>
      <name>children</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a3802f9d3e183367b5b2bd89df862e313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeIter&lt; TreeRow &gt;</type>
      <name>parent</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a094d9a4e37a52be17d8650036363595d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeIter&lt; TreeRow &gt;</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a88055340c1e070ff3622f78730e7ee7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeNodeConstChildren &amp;</type>
      <name>children</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>af89ed51e91868f64b2df89a47158d993</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeIter&lt; TreeConstRow &gt;</type>
      <name>parent</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a55fc05f39ff1a745218e02ea050737e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeIter&lt; TreeConstRow &gt;</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>ad11b7a551b9c8c83a0c14b3607e3f514</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeRowReference</name>
    <filename>classGtk_1_1TreeRowReference.html</filename>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>aa09ed6c7c3501d7673f6e86ee3096415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a91b5f8e5d0776aa2565401617260e39e</anchor>
      <arglist>(GtkTreeRowReference *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a3224ca7fd54e6e5a9e630e2cda31ff86</anchor>
      <arglist>(const TreeRowReference &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TreeRowReference &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a249005f09fc7cbcddd87b5e7cf7a9f98</anchor>
      <arglist>(const TreeRowReference &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a3b5087414df8c538e34601ed58b3e9c7</anchor>
      <arglist>(TreeRowReference &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeRowReference &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a5172cd38b070a5f17ac5eb4331de2932</anchor>
      <arglist>(TreeRowReference &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a0a2149db55cd96c6cac04f0549185359</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a7b2f86aa5ebbedb78f708b8f7ec4c2a4</anchor>
      <arglist>(TreeRowReference &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeRowReference *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a4f60ce036b536cbdc6faf49b99da9faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeRowReference *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a75b24427884ad3ea182efc9129b7c6ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeRowReference *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a3b13629f8bcd1ddd03e247a3ac62b2d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a1c0fa99f2f5935dbac520cf7d4141db5</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a5e88922204c5d2907329bf81e7acc2e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Path</type>
      <name>get_path</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>ac4f7f2edad882696d3932824b3b76d9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>ace90dbff8f664ebdbc0f1f62062fa309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a3e10470b637f29ea6f7afced825de2ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a1bfefcb9eef37dab3ed03e30f765abd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a475f0278dc45a93a78a154045e1e0a2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTreeRowReference *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a21520d3a503787e10fb7106f18bb8a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a40298c36e4c2485147f711c156c432b2</anchor>
      <arglist>(TreeRowReference &amp;lhs, TreeRowReference &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreeRowReference</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a78ffb37dc9b85f6f5ff78a4d97a067b3</anchor>
      <arglist>(GtkTreeRowReference *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeSelection</name>
    <filename>classGtk_1_1TreeSelection.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const Glib::RefPtr&lt; TreeModel &gt; &amp;, const TreeModel::Path &amp;, bool)&gt;</type>
      <name>SlotSelect</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a36610d2039ee31b5e7acfa91aaad098f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotForeachIter</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a301f86cf3ac3b5f05a6324cd83ccbdc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const TreeModel::Path &amp;)&gt;</type>
      <name>SlotForeachPath</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a4beb53485e3f329e19fc8088854af483</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const TreeModel::Path &amp;, const TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotForeachPathAndIter</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a9e1f88770c58a98d31b8d52a591da3cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeSelection</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a77d721c278e2c42ad21f224053a4c101</anchor>
      <arglist>(TreeSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a5162b56bfdbd88a165ffaacf93667cc8</anchor>
      <arglist>(TreeSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeSelection</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a83dad855f51b76071f56f95d58e32327</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>aa272d22e2a8cf68ef941bb898e6ae7a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>adb9b7b49ea9b18d225843468aef728cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeSelection *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>aa691fc7df426d2f19612cc82c512596d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mode</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a8c77e2bc04394554fe272c90aec1b064</anchor>
      <arglist>(SelectionMode type)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>get_mode</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>aacba814fcc0de625e1e3845221c8fe17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_select_function</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a7c408b8e2b45b4a65a2a9ad66d9602cf</anchor>
      <arglist>(const SlotSelect &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>TreeView *</type>
      <name>get_tree_view</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a5564087ad3cb1979d546d905e9364294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeView *</type>
      <name>get_tree_view</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>ac638fdd03513b116624302f62d30a526</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>ae6e6474b69278a024ce2f50cc81f3bac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a51bd031f22a722bef6525f7ef2601a28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::iterator</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>af949a1a078bc5c2272e25e0c2987a81f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::const_iterator</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a497cb6cbd48dd7611c3f0e4f958d0b7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::iterator</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a6c38032e5eb2a7b4a089fb74552c7910</anchor>
      <arglist>(Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::const_iterator</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a15556c7af92f019afb05d6680a170c5b</anchor>
      <arglist>(Glib::RefPtr&lt; const TreeModel &gt; &amp;model) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TreeModel::Path &gt;</type>
      <name>get_selected_rows</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a01dc52a11bc00cdd2b5efab0e8b90f30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TreeModel::Path &gt;</type>
      <name>get_selected_rows</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a45adf98479215cd6965996b4986fce85</anchor>
      <arglist>(Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count_selected_rows</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a47800d7b7b303b989ea5f3d20953a28a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach_iter</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a53ca1a704b42526a4a6509207d5b6bfb</anchor>
      <arglist>(const SlotForeachIter &amp;slot) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach_path</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a589a9fe288cdb4a447698f365461da22</anchor>
      <arglist>(const SlotForeachPath &amp;slot) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>add46077f925ce2b956608a9c1c7f912c</anchor>
      <arglist>(const SlotForeachPathAndIter &amp;slot) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>abe2e36ac9f950b47e6290ce84af939ae</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a22b9264d8c0b06d3678dd022a6994a61</anchor>
      <arglist>(const TreeModel::Path &amp;start_path, const TreeModel::Path &amp;end_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a26dfec082b0384ac7b3760ea01f9472c</anchor>
      <arglist>(const TreeModel::const_iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a77e91cb1efd4cfcc05832aa97bc92a4c</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a5ef57ea9bc6f15126ba43f8da4199b46</anchor>
      <arglist>(const TreeModel::Path &amp;start_path, const TreeModel::Path &amp;end_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a535ec22596405b39863df93838154dc0</anchor>
      <arglist>(const TreeModel::const_iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>add755ee6215105583b8f42ae591d61b2</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a7dd76ffe25dfa8ce2cd2c36c433f0839</anchor>
      <arglist>(const TreeModel::const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a2cb8620473e74aec20511c3f655e3e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>aeac5766a4626733996641ed2583a09e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SelectionMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>afb0431905473fbf7252e422108877270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SelectionMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a904198dfc24f3a45fbd173e54d4d3032</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a015f4d5e531493c10b67a4029775a2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a373c44490f8dda233fd36bea5d573eb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeSelection &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a3005841d69e579cf3a75e7a4699d4fa6</anchor>
      <arglist>(GtkTreeSelection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeSortable</name>
    <filename>classGtk_1_1TreeSortable.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumvalue">
      <name>DEFAULT_SORT_COLUMN_ID</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a150147cea74a83fdbae3027c1fb3abafa1f2659275b72f896314ec041cd75f1eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_UNSORTED_COLUMN_ID</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a150147cea74a83fdbae3027c1fb3abafa829bad43a1d6ce9e9bb97ab9523b03ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; int(const Gtk::TreeModel::const_iterator &amp;, const Gtk::TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotCompare</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>adcefb2f965be0c1a2b82e31a3f7b1bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_SORT_COLUMN_ID</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a150147cea74a83fdbae3027c1fb3abafa1f2659275b72f896314ec041cd75f1eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_UNSORTED_COLUMN_ID</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a150147cea74a83fdbae3027c1fb3abafa829bad43a1d6ce9e9bb97ab9523b03ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeSortable</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a66d6091c6d54b785e61224316adb17b4</anchor>
      <arglist>(TreeSortable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeSortable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ad3490dc1aab25a823e8d18bb4b5b6653</anchor>
      <arglist>(TreeSortable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeSortable</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ad3a67d1369cbea009dfa511f058e677f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeSortable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a7c49843a1adf9e7bb1b7b54705bd301d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeSortable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ab2de6cfe9937f57a3c31c8298a3f6c1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sort_column_id</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a952c62ce874c7b55f0625b104e6d1e46</anchor>
      <arglist>(int &amp;sort_column_id, SortType &amp;order) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_column</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ad4a0c6be13062c64599be8ed73c1e64e</anchor>
      <arglist>(const TreeModelColumnBase &amp;sort_column_id, SortType order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_column</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a01ce9fab2e47887558611a2654f44a7a</anchor>
      <arglist>(int sort_column_id, SortType order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a3a6454bd0a285324c71edb73e403cb1c</anchor>
      <arglist>(const TreeModelColumnBase &amp;sort_column, const SlotCompare &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a0dfc1039a36ed6bb5a6ad3adda030ad6</anchor>
      <arglist>(int sort_column_id, const SlotCompare &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>aa831da01a9e3b7c0dbf3b84be934bf4b</anchor>
      <arglist>(const SlotCompare &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_default_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ac05f7caf5413c4b618a6f605de504363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_default_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a2b2d76bdb9b41cd601637e72fbd71d5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_column_changed</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a17cecb3ed2dae413faefab957f1dac8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_sort_column_changed</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ac1336215845a7690b3ddda8c41887df7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>aaa176c5533e23672cd608418244657e2</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a25dc0e7a2defcc8dbdda0eb47d1af93b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeSortable</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a887a1d33c62b270d14caba5c4c3f1dfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_sort_column_id_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ac8c328584cc61f723f02bc806b90efd4</anchor>
      <arglist>(int *sort_column_id, SortType *order) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_sort_column_id_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a4f056e4b69e93516ef76ca73ecdc7cf6</anchor>
      <arglist>(int sort_column_id, SortType order)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_sort_func_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a6633115a0b052b654abf5508d103808c</anchor>
      <arglist>(int sort_column_id, GtkTreeIterCompareFunc func, void *data, GDestroyNotify destroy)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_default_sort_func_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>aecb9baf38a85890e90b0daacfac560da</anchor>
      <arglist>(GtkTreeIterCompareFunc func, void *data, GDestroyNotify destroy)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>has_default_sort_func_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>af3e6406aaca9fc6a8e0f46b5286ff8b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sort_column_changed_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ab6e36e2ee845b848f89f2e36eb12878f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sort_column_changed</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a6959841c149dd99e9140fb3756fb8e9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeSortable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a276286ba7fdf96acb1af36b5c58095b6</anchor>
      <arglist>(GtkTreeSortable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeStore</name>
    <filename>classGtk_1_1TreeStore.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::TreeModel</base>
    <base>Gtk::TreeSortable</base>
    <base>Gtk::TreeDragSource</base>
    <base>Gtk::TreeDragDest</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>TreeStore</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a5eb67fdb471f07d59a6cd6a48085e2c4</anchor>
      <arglist>(TreeStore &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeStore &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ad8880647ebf322d4987c362f2318e99e</anchor>
      <arglist>(TreeStore &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeStore</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a6f463a83e04cf03b98a069fef4f3da49</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeStore *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a1f6405d80c3b1e4a9672a69f6c13f6f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeStore *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>adf5d227c087f9303de7dad96055d138f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeStore *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a03c99380578b846392bee1d7b6b49e52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_types</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ae403175617926a3156d91c661e0170d4</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>aaf27501bd1c7f533feea94a8fa97be63</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ad4545e4d3e813f53eb0387ed3fe2db2e</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_after</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>aafba6cb5bfad42f83b1edf6975d29aad</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a66db1d0c1b1230e6e2be8f3774b8a570</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ad287ec923f9649320ce455693c920e96</anchor>
      <arglist>(const TreeNodeChildren &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>append</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a3568029b9a2faf8a919aa5fd44661c37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>append</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a5be56047f3d4066874b26166b1882c86</anchor>
      <arglist>(const TreeNodeChildren &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_swap</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ac43cf2594d06cfe44eb8d84fbc250c1e</anchor>
      <arglist>(const iterator &amp;a, const iterator &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>af1db9129be2cc296e701aa40aff7499c</anchor>
      <arglist>(const iterator &amp;source, const iterator &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ace66b6b6b216116d8a7bf18df27a02a1</anchor>
      <arglist>(const TreeNodeChildren &amp;node, const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a59860756eec8e5a63c0103dd947db87c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ancestor</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a1edb0abb05f9e91481f10c1a697df6a2</anchor>
      <arglist>(const const_iterator &amp;iter, const const_iterator &amp;descendant) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iter_depth</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ab1104a0fbd342743ddd054886d9dff3b</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_is_valid</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ab46229d2876cf3a18cd24720bb20ce40</anchor>
      <arglist>(const const_iterator &amp;iter) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a89149c8b9d94283bf3c13b4b079d52be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeStore &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a65fc563bfbef2f1a31028cd33ff228c0</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeStore</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a9dd7365f0848d5a353e27a71c5727d72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeStore</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a01c88818f7b270651e9b22adaa929149</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a919486b88afdef48f0c6cea35910b29f</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeStore &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a9d0f6eb130cef2f7fcaceacbf28d4510</anchor>
      <arglist>(GtkTreeStore *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeValueProxy</name>
    <filename>classGtk_1_1TreeValueProxy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>TreeValueProxy &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeValueProxy.html</anchorfile>
      <anchor>a22707824fe6f609548444eefc855968a</anchor>
      <arglist>(const ColumnType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ColumnType</name>
      <anchorfile>classGtk_1_1TreeValueProxy.html</anchorfile>
      <anchor>a3933b0865e1e05c060b762fe72189978</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeView</name>
    <filename>classGtk_1_1TreeView.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Scrollable</base>
    <member kind="enumeration">
      <type></type>
      <name>DropPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadb904813894a2fdb92ebf452437a0c5e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gadb904813894a2fdb92ebf452437a0c5ea3525317285c6126ce3b62a8df8c00b07">BEFORE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gadb904813894a2fdb92ebf452437a0c5eac130fda0cb93540bf1574912e78964fb">AFTER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gadb904813894a2fdb92ebf452437a0c5ea65ed068b7cf7b85ca6639541156d6733">INTO_OR_BEFORE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gadb904813894a2fdb92ebf452437a0c5eafd38abad70e822b8e3f0a54ca5d4f662">INTO_OR_AFTER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GridLines</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3b07b40498ca9f9e96203c646ab62cba</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3b07b40498ca9f9e96203c646ab62cbaab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3b07b40498ca9f9e96203c646ab62cbaa86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3b07b40498ca9f9e96203c646ab62cbaa3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3b07b40498ca9f9e96203c646ab62cbaa6328e5e3186c227a021ef2ff77e40197">BOTH</enumvalue>
    </member>
    <member kind="typedef">
      <type>TreeViewColumn</type>
      <name>Column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac1ae0dc1852b7204ea27bc504cd5c21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeSelection</type>
      <name>Selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac8c004cc10cc48e6e4ce8ccfe0e49279</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeViewColumn::SlotTreeCellData</type>
      <name>SlotTreeCellData</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a17c07f84eebef3a853c5db76d04535e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(TreeView *, TreeViewColumn *, TreeViewColumn *, TreeViewColumn *)&gt;</type>
      <name>SlotColumnDrop</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a71fdba16137f5b51cb6f7723ab7b5da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(TreeView *, const TreeModel::Path &amp;)&gt;</type>
      <name>SlotMapping</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a25fcecc880fa5456212201e055f17637</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const Glib::RefPtr&lt; TreeModel &gt; &amp;, int, const Glib::ustring &amp;, const TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotSearchEqual</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a34cf8f768e5a4d3698e222f28b7fb66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const Glib::RefPtr&lt; TreeModel &gt; &amp;, const TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotRowSeparator</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a00d68270428cbed45e8ba41855547f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>affab4e7fd54f18901619f9175c0fc174</anchor>
      <arglist>(TreeView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a84405f04833cea631cc37165e29f167b</anchor>
      <arglist>(TreeView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>adc1f7166b69888c7d1f462da16b3cc80</anchor>
      <arglist>(const TreeView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TreeView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a19699c2946d80878fc6b31180c2997a2</anchor>
      <arglist>(const TreeView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af403f11a60a956114a70658e3ffb8fc7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9d4e434d05a47c062e5f3545971d614c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aa57ccaf05876fe3a3103a19e3acaeb8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a619a049b5922e4a6ac6b5b03d3476afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>acde03b3fd2aca47f3c7d86fdcf9796b1</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>adb30108f2d714c353ea7966fdc804b4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8f6cc99c4b8f9f385c068d1183031923</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a35e73786232a17c338b68223ef05b3c3</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad9152392a2f15b784a576fd490525e70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeSelection &gt;</type>
      <name>get_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae953e086ee80dbcd34e49dc55a600dcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeSelection &gt;</type>
      <name>get_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a74ee4596a57761225246231ab8f9d827</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_headers_visible</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af7fe176c5a021cf2ab3c53272d850614</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_headers_visible</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8855c0dacb27dc606786c9c4185d5c75</anchor>
      <arglist>(bool headers_visible=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>columns_autosize</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad4e88bb160718cd6a1116b48fc011f88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_headers_clickable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aa41ad6cd758dcd61ed2ac70bca623498</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_headers_clickable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae1ee5574177dc8a1ed8a1cd88f964edf</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_on_single_click</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a93b41ba7d4f9424bf11ecef742abbe1e</anchor>
      <arglist>(bool single=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activate_on_single_click</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2d6b2ea83d477a6bc272e885f31b7fd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a16f55997427768789b625fab842f5a2d</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aefe3902c11a056a6f0630eced66613eb</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column_numeric</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8affe8dc5cf35c8c4df0c8ec666661d8</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column_editable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2b7e3001fa1bb1aa415da76be91dc65f</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column_numeric_editable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aaf5d988afc408de1dcc73cfee8162438</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aed6655124671376ffb2942c4c1eb19e9</anchor>
      <arglist>(const Glib::ustring &amp;title, CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>remove_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9d6db60f93f343e342227531d11c1291</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_columns</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a943f9af227dc499ba99ba7672c347b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3bbc443759e8893cd74c04eebbe82367</anchor>
      <arglist>(TreeViewColumn &amp;column, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aadd86e03ba6bce629d52ea662d9cc971</anchor>
      <arglist>(const Glib::ustring &amp;title, CellRenderer &amp;cell, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4d47420b699edf3a19b586c54c76eb29</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column_editable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2ccb61b787f54b286c618a38e9b2037c</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column_with_data_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a595dcc0b503a7c1004c296b82c51ac54</anchor>
      <arglist>(int position, const Glib::ustring &amp;title, CellRenderer &amp;cell, const SlotTreeCellData &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_columns</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a32b98da1faa366f68755a2f8a43fb20c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumn *</type>
      <name>get_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a513e50ad0acdd817d1a443f1eaa3debe</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>const TreeViewColumn *</type>
      <name>get_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a09162af3a27736e8b86265dc18e7eea8</anchor>
      <arglist>(int n) const</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_column_cell_renderer</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>abaf17be0f50dc0a2153dd8a7a68b7b70</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_column_cell_renderer</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>acb737e23f20df680ce50e65910642b6f</anchor>
      <arglist>(int n) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TreeViewColumn * &gt;</type>
      <name>get_columns</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2daf3e523102679d48d6b3613396f330</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const TreeViewColumn * &gt;</type>
      <name>get_columns</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a165822d4d0273776b20642ebace0b787</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_column_after</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a94e48d038fd9b57af5bf0c9840dfe308</anchor>
      <arglist>(TreeViewColumn &amp;column, TreeViewColumn &amp;base_column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_column_to_start</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a840f30c8535f799ba92615e5400f6cf6</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7e948adaeeafd9884ba5ca7d639f9ea7</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aecc955177507d991eab00b3192ed31b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumn *</type>
      <name>get_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a87cb76623a39b0d945e58dfc35bd2dd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeViewColumn *</type>
      <name>get_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9241aa0e377a38d58956b56cd5f913f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_drag_function</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2bc13513932ca39941a61a86d2405e89</anchor>
      <arglist>(const SlotColumnDrop &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_column_drag_function</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9109bff0e235846580f196a2e3e3860d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_point</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9fa8beb708934f5bc7fbc4693c5138c9</anchor>
      <arglist>(int tree_x, int tree_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_cell</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a68fe4741ceacbd8854997c24213fdc5a</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column, float row_align, float col_align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_cell</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9f7c82b4307dfcf1602c89a32c42bb5e</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac7394be5aade86355daf4dd26fe1a28f</anchor>
      <arglist>(const TreeModel::Path &amp;path, float row_align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>adb5a753b9df63646066ff5e3954572c4</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1a5fabbe3baff74410cdb1e81850e2b1</anchor>
      <arglist>(TreeViewColumn &amp;column, float col_align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1537a5b521ecbad4aaec88f656b0e6ee</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_activated</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae4515399f85519e5cd57d5cf3d3246c9</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand_all</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad14f254ed59dcba03f58a6510d6b21b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse_all</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8bdd55104bf33d5c1c831eaca15c4691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand_to_path</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4f47352dc7ba22537fda1dd045bac2f2</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expand_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2e606e1a46b925cb2326878fde8cc7fb</anchor>
      <arglist>(const TreeModel::Path &amp;path, bool open_all)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collapse_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7f85229910cc81f470bab553a5286492</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map_expanded_rows</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7dbbfd4bdb2b1b811641ca9f82abebcf</anchor>
      <arglist>(const SlotMapping &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>row_expanded</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af87ac5c0383f9d1173312a0b55137500</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reorderable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a00cd814945792b43eec7a40e0c361822</anchor>
      <arglist>(bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reorderable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab470861af754953ac757ae42a1c80033</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aeace1596d745a904c79b6d1b437da778</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;focus_column, bool start_editing=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a03b12d46cbb8f88ad77cd3f7d1acfe43</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;focus_column, CellRenderer &amp;focus_cell, bool start_editing=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6ff1173a3122d2b2b3380b0f48096623</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6358effaf53f54535098f8c4a710405f</anchor>
      <arglist>(TreeModel::Path &amp;path, TreeViewColumn *&amp;focus_column)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_path_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a71e5b97b84689b0dfd48426f440313dd</anchor>
      <arglist>(int x, int y, TreeModel::Path &amp;path, TreeViewColumn *&amp;column, int &amp;cell_x, int &amp;cell_y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_path_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5ee742f342d9103818bf7a6121d8b5af</anchor>
      <arglist>(int x, int y, TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cell_area</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af387603e2b75eeed1f1cf794c3bb5634</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column, Gdk::Rectangle &amp;rect) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_background_area</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a926e338a7be9465c0344682532c26822</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column, Gdk::Rectangle &amp;rect) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_visible_rect</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a18d7404837d9c39239bef4a9080dc343</anchor>
      <arglist>(Gdk::Rectangle &amp;visible_rect) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_range</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6346d0c0b2b14fa5a56f6e207932a089</anchor>
      <arglist>(TreeModel::Path &amp;start_path, TreeModel::Path &amp;end_path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_blank_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a0e0f51344b987ff8ab4e8531711e30be</anchor>
      <arglist>(int x, int y, TreePath &amp;path, TreeViewColumn *&amp;column, int &amp;cell_x, int &amp;cell_y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_blank_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a91d4656d855ec8845657bd2451cc57dc</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_source</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a78b1d1dc53c585a5f2a77b0e21ce9cfd</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::ContentFormats &gt; &amp;formats, Gdk::ModifierType start_button_mask=static_cast&lt; Gdk::ModifierType &gt;(GDK_MODIFIER_MASK), Gdk::DragAction actions=Gdk::DragAction::COPY|Gdk::DragAction::MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_source</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>abe988756b7977db4a88f780d48163198</anchor>
      <arglist>(Gdk::ModifierType start_button_mask=static_cast&lt; Gdk::ModifierType &gt;(GDK_MODIFIER_MASK), Gdk::DragAction actions=Gdk::DragAction::COPY|Gdk::DragAction::MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_dest</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a28e38e8186e6619aeeacaa5dd522c252</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::ContentFormats &gt; &amp;formats, Gdk::DragAction actions=Gdk::DragAction::COPY|Gdk::DragAction::MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_dest</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3175baf30212d5aa060444b1407d6aa4</anchor>
      <arglist>(Gdk::DragAction actions=Gdk::DragAction::COPY|Gdk::DragAction::MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_rows_drag_source</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a85f88dd1a84d132181df22caed35d38d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_rows_drag_dest</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>afca9a5db99fc77d07aad5c4ac00ef2bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_drag_dest_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5d52bf06ecd93652ff120e38d814344f</anchor>
      <arglist>(const TreeModel::Path &amp;path, DropPosition pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_drag_dest_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a0e321a02735d56e03a42cf0f424fe7c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_drag_dest_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7041bb0c62904ba88f9c6a91aa0b46e8</anchor>
      <arglist>(TreeModel::Path &amp;path, DropPosition &amp;pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_dest_row_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2fce50b4fb57a926b889a0ca3c100a2e</anchor>
      <arglist>(int drag_x, int drag_y, TreeModel::Path &amp;path, DropPosition &amp;pos) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Paintable &gt;</type>
      <name>create_row_drag_icon</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7b7148dfd780e06ebabfc2d34fbae0bd</anchor>
      <arglist>(const TreeModel::Path &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_search</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a63e68b7d085da11dffaacbe2693547da</anchor>
      <arglist>(bool enable_search=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_search</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a53de7a946b81500becd8cc1a371cd7e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aa62f299e5983b98f7879e0c773b5e3cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a561e31b2f5fceb35c441c6daec8a3689</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4cae680d7bd26d2a953e3b447ea5bab6</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_equal_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a68a6c99becef724d20d8e671b3ddb93f</anchor>
      <arglist>(const SlotSearchEqual &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Editable *</type>
      <name>get_search_entry</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a240833725b5e5cddd55d1ba790ad79e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Editable *</type>
      <name>get_search_entry</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aef9488288f95aebd3a8fef0aaf167da9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_entry</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8e47c9d3fb7ffff20f112886ce1ba24a</anchor>
      <arglist>(Editable &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_widget_to_tree_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad5a273a3e6dd21b2fd17b77d18e39516</anchor>
      <arglist>(int wx, int wy, int &amp;tx, int &amp;ty) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_tree_to_widget_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9d6780e510aa60563a9f91ae4dd0ce68</anchor>
      <arglist>(int tx, int ty, int &amp;wx, int &amp;wy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_widget_to_bin_window_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>abdb1da325e3a25e07253406900d057ee</anchor>
      <arglist>(int wx, int wy, int &amp;bx, int &amp;by) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_bin_window_to_widget_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8a48b8c40cd85a9deb8b090243995fd0</anchor>
      <arglist>(int bx, int by, int &amp;wx, int &amp;wy) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_tree_to_bin_window_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4a89e06181f924c357657a24e264f3bc</anchor>
      <arglist>(int tx, int ty, int &amp;bx, int &amp;by) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_bin_window_to_tree_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8257d8db8b5cc534c4c704ce2e251166</anchor>
      <arglist>(int bx, int by, int &amp;tx, int &amp;ty) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_height_mode</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad766f587003dc152e1722cd3be0cedc6</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_fixed_height_mode</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7764a18e78a688bd93259d3bdcda7a04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hover_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac2aa7aaff2cb5f1838aa30ddd224e09e</anchor>
      <arglist>(bool hover=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hover_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6bf95c4e4efee479100e770eff49bb85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hover_expand</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af25d3860f977d1d2f4464d85bfa909f5</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hover_expand</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a05cfe311ac5de2b658d60cd8f0f351cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rubber_banding</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9389a98f6068e09e33fec8e7a98219ab</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_rubber_banding</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a25393b47237b5fa3ea34979ecaecf037</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_rubber_banding_active</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac69490c1f3bbf1c46f0d8078212bb1af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_separator_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a581220f42bad6f492f42cc8f701df7ab</anchor>
      <arglist>(const SlotRowSeparator &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_row_separator_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>abf6114cc95556bf80bee79331778fad7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8fca25c655eac03a8398ce88ab364c97</anchor>
      <arglist>(GridLines grid_lines)</arglist>
    </member>
    <member kind="function">
      <type>GridLines</type>
      <name>get_grid_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1aea7dac8d89c933aac264964aad1053</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_tree_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a30fadfc81883f9be2f4611639fa9daaf</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_tree_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab58f4bee4aad47da7a00e7d6502dfe6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_expanders</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab40c5a76db3ab21abe205b190119db63</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_expanders</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4714f245f4fb69a7fff12f5945832cfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_level_indentation</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>abe9d65c485e9fb0bba61081a0ae6882a</anchor>
      <arglist>(int indentation)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_level_indentation</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>afbc01f64029a2386097876ac03c0d2bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae3d42c3596c90dc9b51a0039788412c9</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreePath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_cell</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae7cc8fde03c481de81fc9d13e34bff98</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreeModel::Path *path, TreeViewColumn *column, CellRenderer *cell)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tooltip_context_path</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a670b0af0999ebf9ceeb667a851856b41</anchor>
      <arglist>(int x, int y, bool keyboard_tip, TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tooltip_context_iter</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aca458f9efab43b8a0fe82dcdbfc1dd59</anchor>
      <arglist>(int x, int y, bool keyboard_tip, Gtk::TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5437add5fba2cef1972c5139375581a0</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_tooltip_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a638c60c5de3ce573ef9309fa8d203fff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::Path &amp;, TreeViewColumn *)&gt;</type>
      <name>signal_row_activated</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab4a38611d6d0bb2544b17c61a4e1c5b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const TreeModel::iterator &amp;, const TreeModel::Path &amp;)&gt;</type>
      <name>signal_test_expand_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab9d1dc75acffc214dc9765d440ff0716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(const TreeModel::iterator &amp;, const TreeModel::Path &amp;)&gt;</type>
      <name>signal_test_collapse_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9670aa58d4ed8d8bb0807715352a788d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::iterator &amp;, const TreeModel::Path &amp;)&gt;</type>
      <name>signal_row_expanded</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6b2e24acc5e0303385f51ff1e7c17625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(const TreeModel::iterator &amp;, const TreeModel::Path &amp;)&gt;</type>
      <name>signal_row_collapsed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a369679100c0d88704b214f1158efd945</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_cursor_changed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>afeff5112c4445837ff4d0921acc20ef3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_columns_changed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a76c28df6f06771a9dd7c890eb4a41e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2d9304632294176a863ecbc205a6ba5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a06d5d07a42c7ebbf386be3bcbe5e3607</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_headers_visible</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3f448df281af58e75ad9a8b8a7a25b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_headers_visible</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7aebee1f3e83973848ead96b28907614</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_headers_clickable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1656c8439bca612c81547896dcfff36c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_headers_clickable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad522905a8020461860a817eecad18636</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; TreeViewColumn * &gt;</type>
      <name>property_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad0716d42e3bb2b6d37732146b82e55a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TreeViewColumn * &gt;</type>
      <name>property_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a766355f014be6fb1e98a516baed355dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>acd0b225e23b79c0e80cdd91e2682ae94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a09113225ac6372372fecb615eff2dcc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_search</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af171693f3dde49ac8744e28edaa54749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_search</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a302d21c4e719a7295303b4b7016d9707</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5e405a65369cc1066632957c6d1bf8f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1f0067d58dfaf87e3f7e2b309650ea20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fixed_height_mode</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a34f7eadfc054386d5f1eb0d987deb6f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fixed_height_mode</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aa4cc9aae85f0305805bf89449d916c06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hover_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a92b860f7b1cb652e764f1317a9525c77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hover_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9087ee5b5b66d5eb144024002303a5f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hover_expand</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3c99461bed41647dcb3af4152d842080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hover_expand</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a85a86329f79e1450f6902a84c5aab046</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_expanders</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aee479bfb88c51c74ce99a6c55fd0f971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_expanders</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3d7ca3a1beeae81dd9789ee2f207c061</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_level_indentation</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a90c34be49bcc81f5056af5f0cf5d9746</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_level_indentation</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5c2a17816ef220000bfcaa065e359352</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_rubber_banding</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a89d507b2f5284889458b97c0e68d219c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_rubber_banding</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aa92d9ab0f99b7860aeb7535c9e513201</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_grid_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1449d1ccb240711d935ac1f36bbff6ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_grid_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a27b2298a11af3680a91aaa42ea1b3452</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_tree_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a437c4fbcc2889579086a4e56d1aba0a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_tree_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3897eb60f9fe9319de54f9ed69efea4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_tooltip_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab7368320f1c73af4ccf95039e1715528</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_tooltip_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac921a7a6c0431a7fbf13d4bc570ee4e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1e262a57c8fb498c3aa8c98d1e5cccb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aaeea7b944011b26041bb140c0d8da4e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac7f583d1c2c27b4468436655581dcd80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreeView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af8a59e70cb0191ea34f2fa5c6ea4a4cb</anchor>
      <arglist>(GtkTreeView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeViewColumn</name>
    <filename>classGtk_1_1TreeViewColumn.html</filename>
    <base>Gtk::Object</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::Buildable</base>
    <member kind="enumeration">
      <type></type>
      <name>Sizing</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad38642b1b42fad0f81583122be117fb2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad38642b1b42fad0f81583122be117fb2ac258357a20bd22e0442145a7144de9ca">GROW_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad38642b1b42fad0f81583122be117fb2afaf1ef2435f2843f123c49e47288e5f1">AUTOSIZE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad38642b1b42fad0f81583122be117fb2ac6e6dc18b53b4c2681394b9d8aefcec7">FIXED</enumvalue>
    </member>
    <member kind="typedef">
      <type>TreeViewColumn</type>
      <name>Column</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad1e1bc110814964ffedf91d582df7841</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(CellRenderer *, const Gtk::TreeModel::const_iterator &amp;)&gt;</type>
      <name>SlotTreeCellData</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a5f6bd1c77fdfb3dbeba9eba535b9858c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a484e2f12124bc8157468f2b8dc9676b4</anchor>
      <arglist>(TreeViewColumn &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumn &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a71abe821c0bc75f34e9bf3888ed699c7</anchor>
      <arglist>(TreeViewColumn &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3bfc70e4ab90875700427792adbf1c8a</anchor>
      <arglist>(const TreeViewColumn &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumn &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a9c688cd276192daf6eb5b5887ea0f077</anchor>
      <arglist>(const TreeViewColumn &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>accfeb0a7b00d1f3d3c766f608709124b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeViewColumn *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac804e8eb2f72a6ecbe16dcca897dea31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeViewColumn *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a804306f86a9a15a4847402914ffac986</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab627a2b3657ccb48ec02408215d7bfd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a7da330db8b204b2be756e481dfdccaf1</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a27200068bb270d0257cef27379b58824</anchor>
      <arglist>(const Glib::ustring &amp;title, CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a6bb49f4d90bdf2130e4d3beb543a69aa</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; T_ModelColumnType &gt; &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a2c81ffa48329816fb17bcf099eee34c5</anchor>
      <arglist>(CellRenderer &amp;cell, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab80da3d0ba64635a911f577204aed2e0</anchor>
      <arglist>(CellRenderer &amp;cell, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>abde42debcf458225c9a39a8300593fb5</anchor>
      <arglist>(const TreeModelColumn&lt; T_ModelColumnType &gt; &amp;column, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a50fb2055a275f85e12b7181a63d0d5c2</anchor>
      <arglist>(const TreeModelColumn&lt; T_ModelColumnType &gt; &amp;column, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a5b7f3b08f423ecacbcce5e90fe0d792e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a0b5316f066b31d2e3a610d4b8129f9a3</anchor>
      <arglist>(CellRenderer &amp;cell_renderer, const Glib::ustring &amp;attribute, int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a813d0f18364cd0136b52ee105b6c6f5a</anchor>
      <arglist>(const Glib::PropertyProxy_Base &amp;property, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a813e2f2a9d0288443242e14feceaa17f</anchor>
      <arglist>(Gtk::CellRenderer &amp;cell, const Glib::ustring &amp;property_name, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_renderer</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a01a7e68ad60768652000ecbaa4f6379f</anchor>
      <arglist>(Gtk::CellRenderer &amp;renderer, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cell_data_func</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3469e1adf42e5932ea123ec33e4ce4e1</anchor>
      <arglist>(CellRenderer &amp;cell_renderer, const SlotTreeCellData &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_cell_data_func</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a786d24b7f62d795b43eb481ced3ec6fa</anchor>
      <arglist>(CellRenderer &amp;cell_renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_attributes</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a8d0c15f078e9f9bfe8593549fbf458f7</anchor>
      <arglist>(CellRenderer &amp;cell_renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a59db1623a03d2b7acdf8cf56904972c8</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a94fd43706a3d5fe1587669369e2ebd24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aaa4c52e2c07511f06cd08556c3293e03</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a2a8e3a45f39a6f235d7c9c34725d19e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resizable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac16b622dad072f0a1a88e13d11be94aa</anchor>
      <arglist>(bool resizable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resizable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3627eb24eb33a7a637f057d269a80586</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sizing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a2bbe642c5597bd9e44797544237e8225</anchor>
      <arglist>(Sizing type)</arglist>
    </member>
    <member kind="function">
      <type>Sizing</type>
      <name>get_sizing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a5e63490c617cb6f26587638a7607746d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_x_offset</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3bc2095329943acd03071af8846cb2a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a99960fced5615ef64a0592be1d551a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_fixed_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ada0912fbab3954899b6a76b5717a2c15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>afeced55175cf96a4710f716117a911d2</anchor>
      <arglist>(int fixed_width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac54f81aca72ac86e3f9988c33e0a51af</anchor>
      <arglist>(int min_width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_min_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>af95f7a83b931a3f555ea1026b98734cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aeb659dc59bb266f1e76f8974f7cfd1a5</anchor>
      <arglist>(int max_width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a8d28b7363d8a58d89eee58ec01b258f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clicked</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>adb843565131485fef9321876f487e3c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3e2c867d3915f316b047417ac8623c3e</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ae8903585929a74776cfc6754d0f3df50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expand</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a1de1f0cbd818083b9077b101250389c5</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_expand</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac4e06804b688df1e599a9f817413b590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_clickable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a1e188579281b5019f835135b49e14024</anchor>
      <arglist>(bool clickable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_clickable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a812886dcf8326f3aec08b181f4d10899</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3b8c4e3b7e8b579090440c50843efd26</anchor>
      <arglist>(Gtk::Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a6ed1b2d4b8d9e39c449e3ace4b04a70f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a0d38feb2e921db927e9600445834d8d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a096f59776acabff6676f9b381b4ed031</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a9ca5033a064958a347a3d086e866919e</anchor>
      <arglist>(Align xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac9cb7a746b5f8e42b667de5fcc1ccd41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reorderable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a207af512ee62a4eb4fca4b2ccfc81b0f</anchor>
      <arglist>(bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reorderable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a8db80af9673b9dc83dc9bba259917773</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_column</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a50cb85207ecfada55432fcefcb46274c</anchor>
      <arglist>(const TreeModelColumnBase &amp;sort_column_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_column</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a6617c7101c0f507d6ba9f634bf7e44dd</anchor>
      <arglist>(int sort_column_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_sort_column_id</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a6dffd4a4699db3df4b2784e5b7ee111a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_indicator</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a48aaef37d207078a348479d1b51afaf2</anchor>
      <arglist>(bool setting)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sort_indicator</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad912f6d44b9f6c472e35b4b1e919c710</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_order</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a33712ea76bd6ccf7ad560e301ed87e66</anchor>
      <arglist>(SortType order)</arglist>
    </member>
    <member kind="function">
      <type>SortType</type>
      <name>get_sort_order</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad9f76f27cbddd3f85a8648e4dfb85ade</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cell_set_cell_data</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab8529cfeb79bac1673ce008c67b8f324</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;tree_model, const TreeModel::iterator &amp;iter, bool is_expander, bool is_expanded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cell_get_size</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a914f32aeb69cb97074dfc9e500f0bad3</anchor>
      <arglist>(int &amp;x_offset, int &amp;y_offset, int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cell_is_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a37ae45530ba29acf1fca780917fd34e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>focus_cell</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a028300531a4aa3e9ac40941f75e94c71</anchor>
      <arglist>(CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cell_position</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab2439bc77b78548932c65927b28d8483</anchor>
      <arglist>(const CellRenderer &amp;cell_renderer, int &amp;start_pos, int &amp;width) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_resize</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a0a739239b847d3ca7107f0087d9d63c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeView *</type>
      <name>get_tree_view</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac44090bb91b945a2b07ba336248ff421</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeView *</type>
      <name>get_tree_view</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>afea53aaf03a7a0626ff6198356625e53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>get_button</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aef5b5ccf85f3cad0d255fca3667a35e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Button *</type>
      <name>get_button</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a392dce81bbe348ac1e11e7c8c55259e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_clicked</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a4c0d95f04ff7047500f6a99f0f168cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3965176724ca762ee77baff095ecbc1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aa8a9a8c6b9c6455313efa3b5b72bc283</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab217515b5e746159c909f33f53c7a0d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a30298f0911b7eb9ebfd6d19f7c711375</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_x_offset</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad3794e0f3843853c2fa9c66ba8325e3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>abf62339b6c0dbc4d1e55df7c47a379d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a990f839509479733fc2536b5f73e5e6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>acb23aab4ff118ba78b2cd0b5f0e1c9ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Sizing &gt;</type>
      <name>property_sizing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a875087f79bd615f64048fb92d58d2406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Sizing &gt;</type>
      <name>property_sizing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a0ff3cd2a7114bcae86c0a573c20f1c3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_fixed_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a820cff41547847dbd99633e9ee1ef551</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_fixed_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a9342e41319369d5e9cac77da6f3faee8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_min_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a570daa8709a55f6e27b42d50be077e85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a788d35ca25e9867e7135f93a3c39eebe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a5bd2ff0b5be4452c79891bcc8a01a326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3fdb18c2a24f02d17c9b5b8de49fe5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ae859bedc04ac4d9fd045c2447cda15bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a963d7926a7532e222a986f6dd06fdb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_expand</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab6c56e64ad9a82c35b245b5ff872e086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_expand</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a411e80abca39397e2375a93faa7a0640</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_clickable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad0a270edcb136eec55ab19137c543f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_clickable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3da0e7e8caee6fc97dc7ff7b255ff598</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>abf170c5375f9a252d9b6f6ec60cc7cef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a2919bed1e216ebf9dcf034b9475a8b72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a12c8c3d5572dc6ec3384138da2042dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3558ec6245fa9d4ca6215ad6bdc60420</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a1592e0d794cccecc36658e0ca6cbcb0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a36b65733bfdefd14838a8aec42ccbabd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sort_indicator</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a172bff2bc9c168746e8ecfe02a99d5db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sort_indicator</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a72fbe6034858193238d584fcd55c0169</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SortType &gt;</type>
      <name>property_sort_order</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>abc9286e851431c9710457888b6b7d23f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SortType &gt;</type>
      <name>property_sort_order</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a42a37fd5d3e167fe0d9e4383eb43252e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_sort_column_id</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a62a031d2ebd9ba4deaf237e6a46cff6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_sort_column_id</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a47bd1c2f146dc2aafa8b451b4000425b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a1e494f93e11dce71869a50d924b253b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ae23482bc714d8621bebc476a9b5604e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreeViewColumn *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a7e8589858ba753112bbc89e9a9e5457f</anchor>
      <arglist>(GtkTreeViewColumn *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Video</name>
    <filename>classGtk_1_1Video.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Video</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a5d2ad4da4f66d9cc502d50cb13e5d24b</anchor>
      <arglist>(Video &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Video &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a8bff3bb6dd02e94808faf74c302121ab</anchor>
      <arglist>(Video &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Video</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>aafbf0e757f64345423254479d073596b</anchor>
      <arglist>(const Video &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Video &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>af3b14cb5dc3d395dfaa4b453f5171b68</anchor>
      <arglist>(const Video &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Video</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a14bb6a3406ee9340db97873fbf03b245</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVideo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>acdfa77b8b27de259bd6f8bac099bbf95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVideo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a13046e911383a384597d98990b72a743</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Video</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>ab28ccbef28e31148712196e4dfe925f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Video</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>ab461617803da9c16f09828db98cac153</anchor>
      <arglist>(const Glib::RefPtr&lt; MediaStream &gt; &amp;media_stream)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Video</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a58992eada6a5fc5c8f19075ca6d9a2de</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Video</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a97655e6272b699d857eb17b570d2d507</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; MediaStream &gt;</type>
      <name>get_media_stream</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>aa4d78a7eb18dc385381b9a9db45abc74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const MediaStream &gt;</type>
      <name>get_media_stream</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a85f1cb137b029f54761dca61ba6b8e9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_media_stream</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>ac377f475251cc4f39088c7af18102bbd</anchor>
      <arglist>(const Glib::RefPtr&lt; MediaStream &gt; &amp;stream)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a1e3e9820875c6ae69bae8f40272ac89d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>aaa10d82aae37f9d16ba8de2ff288555a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_file</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>af46f13acc5fd6035cc88c52756eaf513</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filename</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>af84fd8d52000396dd72a363d558ad8ac</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resource</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a6c904b9677674e435b0fb30aa2d8a18e</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_autoplay</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a6786f4fc451916610356877a3f94a59a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_autoplay</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a13ccbbcd29441c161dc480ddc478a932</anchor>
      <arglist>(bool autoplay=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_loop</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a0f782b9a49819920eb9144927cedbbd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_loop</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a48608e37f3d06eb008c7117685127c37</anchor>
      <arglist>(bool loop=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; MediaStream &gt; &gt;</type>
      <name>property_media_stream</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>afd9d7e55997d1d8c01973a39c20ae480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; MediaStream &gt; &gt;</type>
      <name>property_media_stream</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>aaf7da4233d63a2668a802bc8b93de776</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a51bd57f0a2216e0a16d645001fc9793b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>aebda26e81148bde6750db88aa2a22af2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_autoplay</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>ad073e8e3c7a20e9843a9d5a8b6130403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_autoplay</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>ad89715a7941a6cd3f7a9a95b6cdbdd3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_loop</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>ab71f413d6a49e381213d166c9bf8f2a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_loop</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a4e495fcbce684b51e7dca842305e0ced</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>a4a7146cc3e97bdde2bf37559513ce91e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Video *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Video.html</anchorfile>
      <anchor>ad7e67caf28b9f7afb94dca43c7b504c2</anchor>
      <arglist>(GtkVideo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Viewport</name>
    <filename>classGtk_1_1Viewport.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Scrollable</base>
    <member kind="function">
      <type></type>
      <name>Viewport</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a7a82f7e40c18fc06324a6d17a48b0364</anchor>
      <arglist>(Viewport &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Viewport &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>abff785c32b28e165a97d5c90f9b4bb09</anchor>
      <arglist>(Viewport &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Viewport</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a4dc40ef207ed8a36a2f64cc8a690456e</anchor>
      <arglist>(const Viewport &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Viewport &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a4cf28c54e9225cd139b3ff580d82bf56</anchor>
      <arglist>(const Viewport &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Viewport</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a993d3d1a6736807d0929007ef946e7eb</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkViewport *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>adc421299119cc0f0b21de0abcdbb3bed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkViewport *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a74d34ed75389542cf0f877e894b87455</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Viewport</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a4fc3640768d0dcebed9b404ceef2110e</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;hadjustment, const Glib::RefPtr&lt; Adjustment &gt; &amp;vadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scroll_to_focus</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>ae510dce42e968583ce0726d8ad1aba28</anchor>
      <arglist>(bool scroll_to_focus=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_scroll_to_focus</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>abef6223a293d16719609977b18198c31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>aa35415e95128b1f38308edb88420eb4b</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a4812cf75a3393dc9b28b6bb3876b76e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a2a4f5fbfb54296b836aff90b5df56b73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a3b4f3ae249ee4cb87bbf48c8b3124c1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_scroll_to_focus</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>ab9b63f7283f80724ecf6faed50bcba39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_scroll_to_focus</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>adc01a7abfdcc24c403d5dac446a6286d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a2a507ba6b02d98cc236ef705bf5342e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>acb73ab8ee65f410b5cf1a5d56d15a9ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a5334adda1f180998c26a01733674dfe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Viewport *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a81a6a13f8762482a586c48b7da75ff4c</anchor>
      <arglist>(GtkViewport *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::VolumeButton</name>
    <filename>classGtk_1_1VolumeButton.html</filename>
    <base>Gtk::ScaleButton</base>
    <member kind="function">
      <type></type>
      <name>VolumeButton</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a3fa8edff5d5f42bc85938fd421bf8343</anchor>
      <arglist>(VolumeButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VolumeButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a8b5cc8fc45e5a30cd4c8e701b1b1fdaa</anchor>
      <arglist>(VolumeButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VolumeButton</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>aebed984515639a9e6fd4567d128f3bdf</anchor>
      <arglist>(const VolumeButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VolumeButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a846cea4da569cb6d5be74c9015d45f23</anchor>
      <arglist>(const VolumeButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VolumeButton</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a27eb984c88ffec1aff36f7993b6d3a95</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVolumeButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a0da9674c76e5abe87e070c6d987b9605</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVolumeButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a6e93e6e776048e7aaa7df97b59bb666d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VolumeButton</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a74cdfed7575a0bde30c20693c5e3d11f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_symbolic</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a3db2a686c315d8881c9ed0e94d3bf1cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_symbolic</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a8f1f52f78dcbb1850ac56743e45c2d2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>adf671d0b16bf5ae2519d5abda7983532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::VolumeButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a459e24db3e9b15d5f8d261dd8296f365</anchor>
      <arglist>(GtkVolumeButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Widget</name>
    <filename>classGtk_1_1Widget.html</filename>
    <base>Gtk::Object</base>
    <base>Gtk::Accessible</base>
    <base>Gtk::Buildable</base>
    <base>Gtk::ConstraintTarget</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const Glib::RefPtr&lt; Gdk::FrameClock &gt; &amp;)&gt;</type>
      <name>SlotTick</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4676a4befa8e2c179a35eb56de02309c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad42f2194a32543281b910bdb98b37c28</anchor>
      <arglist>(Widget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a44af4ab8483330a6c2bc75822482ed2e</anchor>
      <arglist>(Widget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6fe83eda31d20211754f8c53f4fa507f</anchor>
      <arglist>(const Widget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aea59a3f6e194f1e96be948d84be00a22</anchor>
      <arglist>(const Widget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a41f83c884ff1a7e532d41405d4cc41ee</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6667a82920375b2ebde07bc1ffdc3641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a750f8231e3858beb9fbd5b44b15ee108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ConstraintTarget &gt;</type>
      <name>make_refptr_constrainttarget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a15561e71039fb44476f1cacc02082757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const ConstraintTarget &gt;</type>
      <name>make_refptr_constrainttarget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad64ea1a8c6c9f0c0b442b4d97d5e3b6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa791d86a0bb3658e378e81d731dd0121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a285c1775842292ae4bc6d074aa892c61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_draw</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a63912f0924724c78298882b7c85139b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_resize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af3f9465454a376549b12a5eeee1277c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_allocate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c4fef597e398649d66e44d9edea5726</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>size_allocate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae34a70af1134ec5b5f2e1ee24ed455b8</anchor>
      <arglist>(const Allocation &amp;allocation, int baseline)</arglist>
    </member>
    <member kind="function">
      <type>SizeRequestMode</type>
      <name>get_request_mode</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0b96ecaa2464c0c55a8e32cb7b0f78cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>measure</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0b677975c848a15ebb3ea28c98070276</anchor>
      <arglist>(Orientation orientation, int for_size, int &amp;minimum, int &amp;natural, int &amp;minimum_baseline, int &amp;natural_baseline) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_size</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5c10fdb9efcc6e7b7bd24f90dcae8834</anchor>
      <arglist>(Requisition &amp;minimum_size, Requisition &amp;natural_size) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_layout_manager</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adad7ca9744ef05dce44867cf84a387e6</anchor>
      <arglist>(const Glib::RefPtr&lt; LayoutManager &gt; &amp;layout_manager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_layout_manager</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5f2e9c1cc952845a9d84f7d5b74fa859</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; LayoutManager &gt;</type>
      <name>get_layout_manager</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a29d02f9573eebea38866e6baca76b503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const LayoutManager &gt;</type>
      <name>get_layout_manager</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1d79ca496ddedd2c1e6e5a2e6653b62e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mnemonic_activate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ace91dc69ed75652af1c00e0a8ef94f92</anchor>
      <arglist>(bool group_cycling)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adc42f15b07b367e41ac690edc2c96693</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a50a016e05181fb474516723240a87134</anchor>
      <arglist>(bool can_focus=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aaed4fd93aa3c9dc09fa11be608433d43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focusable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3c3b3cfd2172846e3b063c8d3f8dbf50</anchor>
      <arglist>(bool focusable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focusable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9635e2dbe3684e7c0113ffc45f05bb05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a03b9f2c504925990f6283dbdb0fb75bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a688c0cad9b5edbcada541ec15a01455b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_visible_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1796eca128fb1e93f2dabe635dbddc69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>grab_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7b51d10f4f6daf3c8031793690fa0f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_on_click</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a13ab8e601567c8eee0abf6119ba3abed</anchor>
      <arglist>(bool focus_on_click=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_on_click</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0c362b38c95bbc48326d9b49f0aeac1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_target</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7f6027998a25b89fab56f8aef0047027</anchor>
      <arglist>(bool can_target=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_target</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afa47f8a791d81974887c9c3d2012ef9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a979a71fb3819b43d23ae4a8c1a7330da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_receives_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a781389940fbd7baa528eee5ed6108ac5</anchor>
      <arglist>(bool receives_default=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_receives_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aed86cceef2f4054d69c50520cb585582</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a12b052fca2ace42902e0448862fbf189</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6437f815a667fd6501f7460abaf8acc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa7372ecdd07aeafc33eb042d19a608f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state_flags</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a382fb9fd8f1fd35bf30a4eaf0d087890</anchor>
      <arglist>(StateFlags flags, bool clear=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_state_flags</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aadacdc1ea1627e0027b7e3dc6a19cf7e</anchor>
      <arglist>(StateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>get_state_flags</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5a0bbd6cebb5f1a57d4bc680db99ba75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3192b5f7f4c15876169b913eb9d1075e</anchor>
      <arglist>(bool sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a00d147da2c74552f9e80dc9956c048fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aae3c34a917c58c3b9d73fa309788eb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6765c4e8acc59ca6909a0a0681be0e8c</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a55cdde1193c35473ffc81a46eb18aaa4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7b87eedcbfbc3f8db5b67e5f23b5ce20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_drawable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abc049a970cde143ee5bbbf185b4469ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_realized</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a077166417abfa6b1b435300b45b823c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_mapped</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a16e4b0304cc24b80c34c1d4755b7ec9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad79d21f9306daae9f7448ab7143f21c3</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_child_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1a1b690d2075d2f55a9930c2cefb71c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_allocated_width</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adab572997d2348f5edc6bdacdf97496b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_allocated_height</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7dd7e996484e07b0f31bfe8b495cba1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_allocated_baseline</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8347dfd49b095d11bdd0a3489bac9a99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Allocation</type>
      <name>get_allocation</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa6499c4b69ff2e4671da95fdec97f62d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ace6f124bd1d49f5c1976035af5aeebb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab235e0acbd4a4410f9b521a074390b49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad03e882640778a5d1328a4e26743b6eb</anchor>
      <arglist>(Orientation orientation) const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9a9d6caa8d94395b28526924a368b7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a33ede5ef71302d5dc0447bc6a2f27698</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Root *</type>
      <name>get_root</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afe1f1a3717b5a7b9399ca30bae63f658</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Root *</type>
      <name>get_root</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6ead72a11f648507132c8f2bc5b4f32d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Native *</type>
      <name>get_native</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5cb80457084d29211d3ea9587626c4c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Native *</type>
      <name>get_native</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aaddc46cecb656005860cb2b736d26cba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>child_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c564b6823adf744d14e258e661f453c</anchor>
      <arglist>(DirectionType direction)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keynav_failed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a270f00bc2bca5e0084e31d0d3cdb4e17</anchor>
      <arglist>(DirectionType direction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error_bell</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aea95a517808ca7eb63830e4bf13854dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5e95431f630a226b0b7297e4815ee945</anchor>
      <arglist>(int width=-1, int height=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_size_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a066cad94180e6dc95fc6f6f5533c10c5</anchor>
      <arglist>(int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_opacity</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8ace1feccc2a5719e3589484a33854f9</anchor>
      <arglist>(double opacity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_opacity</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a243a81d24c32683590b79d65c589e5cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overflow</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abda6e74de35065d555fafb6643706994</anchor>
      <arglist>(Overflow overflow)</arglist>
    </member>
    <member kind="function">
      <type>Overflow</type>
      <name>get_overflow</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9e7be2a991d16a1923c4a0306c994cf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_ancestor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad65bedf64acfd0401abbe489312fba8e</anchor>
      <arglist>(GType widget_type)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_ancestor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2c0d95ae6c94ab118f5904a9f847f6ab</anchor>
      <arglist>(GType widget_type) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_scale_factor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2318ed147c2f6d1e232dbb17ab1ef50a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2f5880e2f1df5ff12295cf97c83de097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afa9bd61978e043da3f929125e02aa369</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Settings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa2f8ed32453af89b2c322ac466b30c2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Clipboard &gt;</type>
      <name>get_clipboard</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a929fc51709a7cf69517d8d0072b0eff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Clipboard &gt;</type>
      <name>get_clipboard</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab52f8277ff791963b0c44c21425cdf16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Clipboard &gt;</type>
      <name>get_primary_clipboard</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab50d7531a811d4cabcf12cc041aa1bac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Clipboard &gt;</type>
      <name>get_primary_clipboard</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a247483fc2e569ad9e209ceed20c9fa8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3a99d1acebc01cf07b409e4ef0b11d27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a72f772d5f51c14dda2c93d1d50ded5d1</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aaad0a6dfb139300cb673de4e8bf1e976</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a70f23009ef939c36a2738d882a03d350</anchor>
      <arglist>(bool set=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_vexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa7f2e9919543177f34471d0a4091689d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3c909282edd09194bc6b6e97c945ad20</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_vexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa78f0ddda88761e4d269f24366d255ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2fd22709b68f6a245f187aa806d2df8d</anchor>
      <arglist>(bool set=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute_expand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3fc821867514e126c02648dd83ae4dd9</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3f4e9791bbc3d786ea93cb6b2dc727d5</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>Align</type>
      <name>get_halign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a94c7248d8685006a94983b64fc663b60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_halign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a28d7dc64da6012005994f9ae41727af5</anchor>
      <arglist>(Align align)</arglist>
    </member>
    <member kind="function">
      <type>Align</type>
      <name>get_valign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a254e2672b2dab41787f5b12f52a69330</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_valign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3f560f05b359942d70c5c207655da07a</anchor>
      <arglist>(Align align)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a43c4844475c4fdf7a893bbe433c24fda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acb4165dfb9b9483955b78aa81f79ff2a</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5b2a038ab47b83b2f7c7aa9fbe7ba99c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4d37d16a0e0c333bb1383a0882c28113</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_top</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa45bacf62fe27c9f10a9fb2ea14aac1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_top</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a048393c3adfbf1caac68d4094b0209a4</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_bottom</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a050f5ccde04b8a35e5473b2db1ed661a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_bottom</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af75837e800efac8690336d0416c2f855</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab866ed660ff8a2b0988bc09516c2ccdf</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ancestor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3d9f2a476e10334e40b452d14735a597</anchor>
      <arglist>(Widget &amp;ancestor) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>translate_coordinates</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3c63f8b020a49c6620304ecc5b81886b</anchor>
      <arglist>(Widget &amp;dest_widget, double src_x, double src_y, double &amp;dest_x, double &amp;dest_y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4d647d7656eb71c9088c807e0794c325</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>pick</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afc0b53a21f7a22a4f62fdd22ae6459fb</anchor>
      <arglist>(double x, double y, PickFlags flags=PickFlags::DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>pick</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2cc86d379fd1506c1e2fd29fbd687dc0</anchor>
      <arglist>(double x, double y, PickFlags flags=PickFlags::DEFAULT) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_controller</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a81c1a1c6de69c0dee6fc96ad9473a328</anchor>
      <arglist>(const Glib::RefPtr&lt; EventController &gt; &amp;controller)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_controller</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0cafcdf7bbfa0b0b12af9e6822cadce6</anchor>
      <arglist>(const Glib::RefPtr&lt; EventController &gt; &amp;controller)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Context &gt;</type>
      <name>create_pango_context</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a037efd7a9033e4b66a17cbf3f6948256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Context &gt;</type>
      <name>get_pango_context</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0be06b45418ec17f992eb3acf89cd0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_options</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad5d356dc0a964bc20a880b326884798a</anchor>
      <arglist>(const Cairo::FontOptions &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_font_options</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a68415ea2d32de46707ebd1b3ca891acc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cairo::FontOptions</type>
      <name>get_font_options</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3a8d16882b2ebe176f272435e09685e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>create_pango_layout</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3324f1e83d4c9a66262d32c4ba4a8051</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_direction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a99ce7eb311e0c9fbc4470c845555b93d</anchor>
      <arglist>(TextDirection dir)</arglist>
    </member>
    <member kind="function">
      <type>TextDirection</type>
      <name>get_direction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a68289c5641ef4984aa2ccf24bf0193be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1eb2a7229c9240d865d9caabb12662b6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Cursor &gt; &amp;cursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a99d907705f76f4a8ed3908d101723582</anchor>
      <arglist>(const Glib::ustring &amp;name={})</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Cursor &gt;</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af9e33abf14585f5755d74fa6fd436cf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Cursor &gt;</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abc76086c9a08fe7752fed5f4ed5607f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>list_mnemonic_labels</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6176f1a652b1aae54aacbdba1e09d79e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>list_mnemonic_labels</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5cd50ac6fa1c17f612314c02bd972fb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mnemonic_label</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adccc7e5666cb846546d0fa74e4a9a6a5</anchor>
      <arglist>(Widget &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_mnemonic_label</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aae9b5c7d8815bfb16114a2796a4513b0</anchor>
      <arglist>(Widget &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drag_check_threshold</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a64de61261ff9d14d7973d3a6833fb163</anchor>
      <arglist>(int start_x, int start_y, int current_x, int current_y)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8f01d63d2855c83c169735bef273fd09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae7b90a66bfe926f728a536b73c7ba1f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a21b9e9e7fb43ed9ab0ed9e7adeec6b4e</anchor>
      <arglist>(Widget &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unparent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa17c76495e4c597626cfd2f5f1e71ea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af83da02607776d8b4c3b177cfe305b6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmap</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8da9feaacdb1fb6cc2e867416767f9c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trigger_tooltip_query</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0edaf9428acc1059fbce774474f4a583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_text</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a42b509c9f13cee28f3c3cd25192b78ae</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tooltip_text</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c1a3d66082c88bbf978445d78c78c8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_markup</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a91d2ed29e299f06fdf18c1d6620667fe</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tooltip_markup</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa136e68bf41cde13aced8f29642dfaf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9acdb4ae0461ce87cacd553a3de7608d</anchor>
      <arglist>(bool has_tooltip=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8b9cbf8066d43537d7a4e2f0295e6068</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>in_destruction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adffa1ef2d6a59782bde97a7faf6c63dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; StyleContext &gt;</type>
      <name>get_style_context</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af76fdca337696a969d0c6080ac5995e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const StyleContext &gt;</type>
      <name>get_style_context</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8cda1a912c228a5aefe31cf745c00c98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>add_tick_callback</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0087dc87b7dfa41988affa55d3fbf834</anchor>
      <arglist>(const SlotTick &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_tick_callback</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afdb8dcd2fc4bb0c90fb23ab0f408a3d9</anchor>
      <arglist>(guint id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_action_group</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2117aba96d706c03c45bdba3f944c457</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::RefPtr&lt; Gio::ActionGroup &gt; &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_action_group</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a717543a7b9da082a38a3a3206f63f879</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate_action</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a40f84ef5c6abe49edc518f8db20330e1</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::VariantBase &amp;args={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activate_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a860c85fce7d176738eb33c251f39781f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4c3639d88f69b17db1cfaf7c1421b031</anchor>
      <arglist>(const Glib::RefPtr&lt; Pango::FontMap &gt; &amp;font_map)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontMap &gt;</type>
      <name>get_font_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2a24e26884171b00df361f74b6261a2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontMap &gt;</type>
      <name>get_font_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad6b7fa17c904f1214fb5eb1d560635cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_first_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a51210d6ce75616744c38b8301d75e7a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_first_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a292277d04975dc0a4a3ab7222a94efa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_last_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7a901f8d56c66ce436883568415d4606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_last_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a879d881737b087be3c4c3af366f78550</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_next_sibling</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa1a82b410a7318b2e5217da8e509aa08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_next_sibling</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad2d5c2677b8b7ddb5f73e38ccfa5e17a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_prev_sibling</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac009b16326837b583c2e96ecbbc4a70f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_prev_sibling</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a37b46b68bcfe4514d609034525d35797</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>observe_children</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a11f7072049ef8fac36525274d5ddafc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>observe_children</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae2a8eddcc4f9aaad787e2586a0a923d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>observe_controllers</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac3ae7307ba7787e45c01a3e082e03256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ListModel &gt;</type>
      <name>observe_controllers</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac5dd4a30f4350cec9a61690a878c1dd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_after</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab997a9d3c9e62100a83e13076ad6afe2</anchor>
      <arglist>(Widget &amp;parent, const Widget &amp;previous_sibling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_before</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2fe8ce7efc292e7a189ee005f39e61fa</anchor>
      <arglist>(Widget &amp;parent, const Widget &amp;next_sibling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_at_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afc1900b5792d3c5130eaa74280e07b8a</anchor>
      <arglist>(Widget &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_at_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a20c2c2a294950814f272e70b73abd60d</anchor>
      <arglist>(Widget &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapshot_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a770acb5e58ac15f6920ac7e23fe7d9b5</anchor>
      <arglist>(Widget &amp;child, const Glib::RefPtr&lt; Gtk::Snapshot &gt; &amp;snapshot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>should_layout</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac674b6afe510bccb8b6255cf2f008495</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_css_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4b7e0ae44defdde5f9521a7ae81e4eea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_css_class</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a246d3418f65097d6cec1618b6bd21b94</anchor>
      <arglist>(const Glib::ustring &amp;css_class)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_css_class</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a094801e2235d7bc5a18d861460ea8614</anchor>
      <arglist>(const Glib::ustring &amp;css_class)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_css_class</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5ed7aee92e29323061a5b8ad73e27271</anchor>
      <arglist>(const Glib::ustring &amp;css_class) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_css_classes</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aef25a5fb6008501d5ebe68085db1d72a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_css_classes</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aed82af134a19b67ee3935d945302552f</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;classes)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_show</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0ee4c7291d5649ab9dd1aa0209619e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_hide</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6e4d9caecfff9b1a427a1c99fd439cc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1b294e9848947fb786cbe7d4e0dd13dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_unmap</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8371212d66dc8c1f1c45ecd0ed28a5de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_realize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6e535816b4ce1539a74ed1d4c5bee6e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_unrealize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6914115564ccbda1e6f34b1540a7e6ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(Gtk::StateFlags)&gt;</type>
      <name>signal_state_flags_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a36188a89a9b700f8cf0e08349df3db62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void(TextDirection)&gt;</type>
      <name>signal_direction_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6815180687fd5defc0051a256e47654d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(bool)&gt;</type>
      <name>signal_mnemonic_activate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acfdd451c72fdf79eef587f805c46fa2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_destroy</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4a135a1d8ae0614afd14b8c8c665cf3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool(int, int, bool, const Glib::RefPtr&lt; Tooltip &gt; &amp;)&gt;</type>
      <name>signal_query_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a04ed27624bccbbe5a6aaf746237de125</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad7c9d43fb67475854b0f9dfd66568461</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4d791548d9a299f8ee3aba37b4ce2d78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acddfa076a66f19c037ca14d1c76c70a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Root * &gt;</type>
      <name>property_root</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a94087a652019e201910e09cd7575137e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af91d49dbe6949bc1f5df339b9c157961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a72809363b2e5e6f939a0262ba4f0f8a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_height_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab636b799e2764f1433c32cb060ea2bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab0640d83813283bbbb32f331a6d8f86d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a87ee8369a28efc37d93fd6761953fbb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1714835c6741e6d1868e6e2ffbbf9e91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a13a9f189e5426df483fffc69bdb8e700</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aab066f4638caa4fd2332d7798cfb05db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_can_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a91f08feacaa2ffc24309c3038e327d2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a43fc5eed58cf0085b0615db1f6296b9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a23bbe511bb8ed869bf8f19f5dc8bc15d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_can_target</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae5d19c2d9e6bd9e40deafdd35dde3d8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_target</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a366199473196fafca873bdc9ab0dd741</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afbaa5ac29749307f74b1878d1e5d31f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a83074bc1852721669bd6707de9af2761</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focusable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af7c7e89e7d5c13e1aac3928374e4aa73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focusable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9428ba19735cc785f8dea9a06ea15f39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a813e98ff342fc1cee4c628be14c95ccd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_receives_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad03daf624166216c76d905e6a8069f2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_receives_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1d6e8955919bfab62ea8f4426e2e1d11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Cursor &gt; &gt;</type>
      <name>property_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afb9e8029a52eb09cd0cf6237e8c42858</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Cursor &gt; &gt;</type>
      <name>property_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab96d3790d92e2b666558d9d870cf58c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4254fa8ac2d0facdba6a6fb5eaa98f61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab7e565a33e1895057c1735027d1882bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_markup</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3c2ef3f5c61e340dda3e7d0f3bb1cbed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_markup</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab9cd8da3d4e5bfa48aa6b24f7b0c7d74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_text</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac4843993dd5b1796e5d1d5848a6d3479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_text</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a45b109d4049939b60cb86b297b196045</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Align &gt;</type>
      <name>property_halign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9085c5664d80f427e2f56a7f52363b97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Align &gt;</type>
      <name>property_halign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aace7b24b424f3cf586cc539fd8502373</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Align &gt;</type>
      <name>property_valign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a55656b493e0ac1b4e0dba7b8275f197e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Align &gt;</type>
      <name>property_valign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8839cc078f05961878740b91d4bdefe8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1353123f8353bef3b684228e175d5331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad13be1c811f368113de5eb6d8bb5a629</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1120530835ae48ed232f611f5a06340b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac589490bb368fc6a9e34d16f02428339</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_top</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3a701f19234ea5142b984c20f4b440c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_top</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad239b759b05efb59d37bb91804e120d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_bottom</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad649764caef9446a76052a488473c357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_bottom</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a237b51d520048aa348cda3ee6f7fecc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa458d2a4ea9e0f80a11b27b318d81d00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a616d8fafa2d642bb0d37cc013701b7c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a75e3e0a893ca7b8c69ea00c53e048588</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a91d786772bf87357d782778afd9d5d6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_vexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aab1ec3d0d09ee07f84c71bdec2d9a90a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_vexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a260bc07cedbb10214a2d7a9e1ba6ba5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_vexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a169ec0b3f37ef0693ee86598fafd6966</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_vexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5e780395caa046752c05993c3311f929</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_opacity</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acc414f484344556e8021b565ef08aa28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_opacity</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0d03899ea67f45b50d8edf5a7acf33b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Overflow &gt;</type>
      <name>property_overflow</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad4e56cab0b329b47d69d60dab1e79729</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Overflow &gt;</type>
      <name>property_overflow</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5c21c47cd31aaed2f5b584df082281cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_scale_factor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af6eaeca91356bc5a4c8eb8caedf05f28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_css_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a514da71c16ef1279f31188043dfdb3ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_css_classes</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a491b78b784f58a5a4ab30d9c46758349</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_css_classes</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adb31649247d804d1a8d5b61e58c5580c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; LayoutManager &gt; &gt;</type>
      <name>property_layout_manager</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a890f23c7d4676f616c0f2409dacfad59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; LayoutManager &gt; &gt;</type>
      <name>property_layout_manager</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ace2d213eef02ce3c47bcfbc9abbbb6a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad91910c92e40117947da6ca81883cad0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_default_direction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2cdb11d295e816d6dd63e65865457882</anchor>
      <arglist>(TextDirection dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextDirection</type>
      <name>get_default_direction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8380cc46ee85e6abda417dfb94831fa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>root_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4ff65b3f11ede080a22228b589c0815f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unroot_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3374f048344462a06e513214368e200f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0e143767a5ca5aecb844bd583d457f0c</anchor>
      <arglist>(int width, int height, int baseline)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SizeRequestMode</type>
      <name>get_request_mode_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aae3a30735ba93b027b0cd87176735027</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>measure_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9d0b8a3fc182f54dd3c5765cf19b9db9</anchor>
      <arglist>(Orientation orientation, int for_size, int &amp;minimum, int &amp;natural, int &amp;minimum_baseline, int &amp;natural_baseline) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>grab_focus_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac6c2ae241a76525bf34e69c395fe20a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_focus_child_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a350eb372710cc0041c4ceb834b277531</anchor>
      <arglist>(Widget *child)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compute_expand_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad52a1f570a76592f7cc20270c10fd12c</anchor>
      <arglist>(bool &amp;hexpand_p, bool &amp;vexpand_p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>contains_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a18d784ae68e7bd14781abc51e79e1da6</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>snapshot_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5de7253e0e0724c1d6b93c98aca1f426</anchor>
      <arglist>(const Glib::RefPtr&lt; Gtk::Snapshot &gt; &amp;snapshot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a00a53168b1f374abe4289950136056dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>realize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3331962a5e38bf2bb107ecc3c8c24f39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unrealize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a57f8ffcd77d8daf86534710a04f25454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>realize_if_needed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a63f7f40764edd8b668dff6431eb92387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_focus_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a62034c79a3c96834fea1160298f74fec</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unset_focus_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acefd1a7c2b23d7215a996207ca788665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Widget *</type>
      <name>get_focus_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c9f5bf26d799e778897551fe7ee0018</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Widget *</type>
      <name>get_focus_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa09fa954f57ad5f81d93265b9581ada5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_show</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a81ec450f7c382fbeb54f7531b5ccde39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_hide</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8a48e5ec59bf4908dc0d0c6a3ea18737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a54244d26703ffe722487f19cee9f4645</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_unmap</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4c56f089b6a5bbe1c5352a9e76756c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_realize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aded36450a809b452e7d402f2d541ad81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_unrealize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abd7eaefa77cd3a98c0e313778954821a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_state_flags_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aed4cc36d52bf8f6c3340004202ba4532</anchor>
      <arglist>(Gtk::StateFlags previous_state_flags)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_direction_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7920fce59a82de96582dcfa862d44eb8</anchor>
      <arglist>(TextDirection direction)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_mnemonic_activate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a82e1eda392e833127565b6e25b570d60</anchor>
      <arglist>(bool group_cycling)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_query_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7450360755ea274143f5450dfd201ba6</anchor>
      <arglist>(int x, int y, bool keyboard_tooltip, const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Widget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0372036e64e26d6847c9e121dad1ae95</anchor>
      <arglist>(GtkWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::WidgetPaintable</name>
    <filename>classGtk_1_1WidgetPaintable.html</filename>
    <base>Glib::Object</base>
    <base>Gdk::Paintable</base>
    <member kind="function">
      <type></type>
      <name>WidgetPaintable</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a330b6fdb9523721847bbf5674dce80ab</anchor>
      <arglist>(WidgetPaintable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WidgetPaintable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>ab803cbc3a50758498365e8d291ab6f20</anchor>
      <arglist>(WidgetPaintable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WidgetPaintable</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>af479fe8e0c73840be3270400ca0a0469</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWidgetPaintable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a54a9532773422fd77f88876fd79b777e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWidgetPaintable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>ad88b7cc18d6478b3bf2c51b74cbfe5a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkWidgetPaintable *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a6751644843a424b9dc92546617b55a69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a7a34ebb199fcdea67393d28f6df73c8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a69524ca749242295d62f9633ca8f6365</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_widget</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a690399df9b1c21996f3ca75d695ee5ca</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_widget</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a386e91502108025aa233d54dc39fbbf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_widget</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a7c54b3076bbcc8d6c228bf7d51ec6214</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_widget</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>abc1523a9dfce5255dfd83ff0e973694d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>af52e14c8963d4ed69f27081a44438cf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; WidgetPaintable &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a9df085a9c4cdd5fbca71ab225cb95691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; WidgetPaintable &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a6d6b0659303044d1e065f821ead7d670</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WidgetPaintable</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>afb1af98562a8f2457e07f5ce06d9df86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WidgetPaintable</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>accd17f2565a495d0e67180e2d7570274</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::WidgetPaintable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1WidgetPaintable.html</anchorfile>
      <anchor>a2bab6abe48dc58cd94558d9219b046a2</anchor>
      <arglist>(GtkWidgetPaintable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Window</name>
    <filename>classGtk_1_1Window.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Native</base>
    <base>Gtk::ShortcutManager</base>
    <base>Gtk::Root</base>
    <member kind="function">
      <type></type>
      <name>Window</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a10d31bd6eb8c667e346ef6e4b732eae2</anchor>
      <arglist>(const Window &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Window &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a878207f0af2481fcaf77ec92884cbdd5</anchor>
      <arglist>(const Window &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Window</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aaee8e40efcfdd01140e6d965c122cb89</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a467102527550b51eb4036390caeedb5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac3e302dafa3d1474738f55df906fe100</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Window</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a627b0fe6008fbb3eef2064506acc0cb9</anchor>
      <arglist>(Window &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Window &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6095541adf7642aad1c2aa2f8556b56a</anchor>
      <arglist>(Window &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Window</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a38e0c8dadad86b1d303b8b495fde71e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a5e2f6d0cb6222820b76e66ea3ffc9d2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a44d8e026c0d7a2e9d1f2220b713708ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_startup_id</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae475322dcbef74f5e6c6b110c95df951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aff0e464d74986442844442b6e4d3457d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a540329adde285de7bbaae04925955e31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af0b2dadb08e50d80aa6ddabba7c87194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>abaaa1bc408c3de1c094e4c2296a4e1d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_default_width</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a5ff52412ac909b78d61534670ccbaf83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_default_width</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9c88aea7f9a78a8a5bfc76920f6f4db4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_default_height</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a316a5b09a17727844dafd176db341ee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_default_height</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3a0071454a5ced1434df147e884c6c54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_destroy_with_parent</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad2441478aabc311118d0bbb7247e96cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_destroy_with_parent</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aebcd2df2b135bfa49ef7c69d910da046</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hide_on_close</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2e5447634504d5da23c850e99bc16b73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hide_on_close</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2a9d9b61fcd070c82cc59aacc32bdb67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a10ca629f2b9835f8b060727e5f8c217a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a5117c9d745f44660d6244e5b4469d7b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a61b485e2dfcfd60a129c258ab1a78820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a69acea5314bc07dc559c47b775ec6a2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac083e4e600ad1043fdffe801bc25c9cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4a456736425e327a9abae107708efaec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_active</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a12fff0d8c031a13b5d0fe05d51f8881f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_decorated</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a72e77120d08be8eaa56e6e62bf15a318</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_decorated</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a15c00ffc0c4f372b8a3fb144a14419da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Window * &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a47a1c6980a498888612d6cf60445cb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Window * &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a40691aee300123891e95c7a2d4650ab4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_deletable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae103a1bd1fb5196aea4f613bce33ee05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_deletable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1291ca96f84770a5e74d0653c2fcc6c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Application &gt; &gt;</type>
      <name>property_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a06c9420500a84e397d02da685cda2ceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Application &gt; &gt;</type>
      <name>property_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a233b93f67b6e597978c77396c7c58625</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focus_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>abf979f349b92d563adccdfca7dc904d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focus_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad37373797856ddd4a96a1b78e1f5026f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ab28c0c498ea778467ac093470ced7ba8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>acb643753a36ec22b8b26303947c61d02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fullscreened</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a496a45f102594816c92783257adb626e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fullscreened</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0fe07c0b714e84989851a04d3c321410</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_default_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>acec8d58c1f950c252db46c96008eac28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_default_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1db70e73978839c589161c29396134f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_focus_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a455a13ecf187eb12fcc4c144f8979d0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_focus_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6878bc8fd7c7794328a0b4054789c8b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9def41b538f299bdd219adf39e3c706a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4532f9c574afc5c7f0be36da3f29a3a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>adabda983d2243858a3b474dffc810e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a48f616f9419ea1e375a849d87aa00dc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_handle_menubar_accel</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af23bd1c519d10bf165d8b76f8e5ace06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_handle_menubar_accel</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2baf4660a193c2a6ea31a325153c1d8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void()&gt;</type>
      <name>signal_keys_changed</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9da42f2b8bdce78fc7523b6ddafa7a9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool()&gt;</type>
      <name>signal_close_request</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9bbc820fb180f28ab5f6c07ae0e54353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a10c072ee6b41d5eea0002d986aa03c07</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af3926f811dfa10b711ed1eadcd29ea02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_startup_id</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1855687f10a461d0cc04ad4072446e57</anchor>
      <arglist>(const Glib::ustring &amp;startup_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8589880384bc7cd7b39c5bcfa6d2932a</anchor>
      <arglist>(Gtk::Widget &amp;focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8dbaf6fd2f692b1dda1e9eb2d7fb9edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1997d080c805ba2e2e6821781992c54b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a24b8b1973013ac5b4e4a0ee3db93e975</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a766d4840b95265355d28b59102c83aa0</anchor>
      <arglist>(Gtk::Widget &amp;default_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_default_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a814766c23a5a6a4d52a704591d3a17b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_default_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a54716169b2741a2c205ea17e26c81df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_default_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a11b9ac7d0473fa345b1238b5482558ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4dc2db7c44546300a7843314cfa21bc8</anchor>
      <arglist>(Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8765c60eaa06575d86d877cd5ba75d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3188cb795d9ad419d69cf24f55d1381b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4fad3b451c5b80c456d292e9b98cf139</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_destroy_with_parent</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae4ee2a5d926665c2bf09e7995b900a03</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_destroy_with_parent</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a83d491299b367d7ca28af3174492d858</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a14a322a0b3759f1138968bc77b53bf87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hide_on_close</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0d096fd6b0e5a50bf65176e4c851cb18</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hide_on_close</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8eae505cecfc047e4e146249be5063e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a44cd7531e6d69b94e742e6a5da953d4e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8c5e84e0feace46c2ec328dc079a8b45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a559fa61ecf491f25ade5687fe356d80e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>abe5abd9639f6e56b7c37551ab2d9d593</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resizable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1ec816449fe941e5fe330bfa509eeb7f</anchor>
      <arglist>(bool resizable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resizable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ab8e00194043b81db0827229314ff7a52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_display</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ab2a0eb62f0ab13aa80665ee5d0319eba</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a009f5011e4974f59d50670032a446278</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_decorated</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a67adb1d8051a38e0e5272f141bb8778c</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_decorated</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2ee537241a3f33e4228bf35572724af9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_deletable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a986276f116d90d61f00bb50d2f87d69c</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_deletable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af548dace7c6d3669ad9367a15b39f624</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a80a7d07b5d126a17206a770d134c76c0</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a34a06ee9dc114adaa2efc2f6d57270af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1f70b3c35e8c477ab3c1f9503a37a6a1</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6d26a6205784d512fa0c2403a567992f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>present</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a7d848c59fc1a42f4a296461515c0476e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>present</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0724ad6e36d55fd1182e2481fb52cd04</anchor>
      <arglist>(guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minimize</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>afa20d84e80c30a41b12d9ca0bd0926ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unminimize</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6dc5793a1e30a69794e01b31ec4f81ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maximize</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a23f2755248ee7aaa39802ccb37bba618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmaximize</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a78bca41d0915b84f285187f3bfcd1e9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fullscreen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2343d2ece18fc8cf4db9e9de4764f386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unfullscreen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa426c8fca5b776d5266da732293f6dab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fullscreen_on_monitor</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a62f490d1c51e769b8c13e900ec42772a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Monitor &gt; &amp;monitor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a790c193a42c27eb90850b5b6da695f0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_size</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac7bddf34f109fd2ed006ff95f1ae881c</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_default_size</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4762468ad3250e22251ad531886510c1</anchor>
      <arglist>(int &amp;width, int &amp;height) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; WindowGroup &gt;</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a620c3988fd31c158bd03222db7a8d804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const WindowGroup &gt;</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3367fb1fced9ce6b080a35feedbe789d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a570da3ac96de159b3e29886efbdb3278</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Application &gt;</type>
      <name>get_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1b44ab681a19ee818626be73147b2aaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Application &gt;</type>
      <name>get_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a59c3090c9fb07f5c00d761eb3b15b542</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6eadd0aa1c88ac7e1ca196089ed0cd02</anchor>
      <arglist>(const Glib::RefPtr&lt; Application &gt; &amp;application)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa04eaebe21e5a912869fd4546b97cb18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a5321a4dd1b2945b60f7379d24164e524</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1ab489e0053441bc772050f4ce957981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8418ee6405bfe1830ff23898c2acffe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac3cc8f275fc26473766b9d041753d864</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9da2ecd7b7b48542da86c685fc370f90</anchor>
      <arglist>(Widget &amp;titlebar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3a895fa30a0649e4f8012d476ba633c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1654994963f8226f5f4ccb4b979a0765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1593c910ddba6d3e67f9b092edb72743</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad2933a4a66a1365a482501ff46a07bb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_fullscreen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af7b8b970b699ecbdb63b72467dfccec4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_handle_menubar_accel</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad276e3a73b838e4972df3fb4d372ab6b</anchor>
      <arglist>(bool handle_menubar_accel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_handle_menubar_accel</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a73a423a84e8c2d289bcb98b5c1eb0d60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_manage</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a385db8609a06d67c4bb442a07381456e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>acae850e2c83a88cd810993355cd35f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac6b22b756e826d0a306aff9e4677cafd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>abb1622b7a525d0602419d661fc646d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_default_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a533d03e9b92d8ccd142ab3a44005cae4</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_default_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a30bd6190446ce8babb674e3f329cac58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_auto_startup_notification</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a17d7fbb99c147938b2f8af87cd1187f8</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gio::ListModel &gt;</type>
      <name>get_toplevels</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a98f07d0548948ba5ff0ecfd1a6d3bc52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Window * &gt;</type>
      <name>list_toplevels</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aeec6764040fc8c627f1dcf41594bbbe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>on_window_hide</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3cc7aba601ff5df9c85afaa778d29679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>destroy_</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a230fe9d4577dc165d139f4d7463367ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_keys_changed</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac731a0f505fb299150aa3186ab4ce78d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_close_request</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1e285f2fda1e6040b0114868d092fef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Window *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae450767a1f7f277ee50a0acb197f3e08</anchor>
      <arglist>(GtkWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::WindowControls</name>
    <filename>classGtk_1_1WindowControls.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>WindowControls</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a04494cd8d0a79e427fd06b6f4cd32d2f</anchor>
      <arglist>(WindowControls &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WindowControls &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a3da57ab0eca313885653b60de285cf56</anchor>
      <arglist>(WindowControls &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowControls</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a030e383b9650885d3d853d3a1dd3231e</anchor>
      <arglist>(const WindowControls &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowControls &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a1f763b3a4271aac157b751c54fae55b7</anchor>
      <arglist>(const WindowControls &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowControls</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a3d381fab7115af4f3c2d901fe5da0868</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWindowControls *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a70d3e3bf5b78b6ed0f098274f6923b8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWindowControls *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>adb996af61681cd12b33f8ed7d6ac96d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowControls</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a6aff4cfd7c7a384e8495eca886b4ba25</anchor>
      <arglist>(PackType side)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_side</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a1dba48905a479bf4c26366574218410e</anchor>
      <arglist>(PackType side)</arglist>
    </member>
    <member kind="function">
      <type>PackType</type>
      <name>get_side</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>ad0bdd54f92ba17e83f426cae4bc10307</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_decoration_layout</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a075ab83cbeaf9c3542f3731c1b577f68</anchor>
      <arglist>(const Glib::ustring &amp;layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_decoration_layout</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a7cec2e650584d01b00fa2c57963a5d1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_decoration_layout</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a9a1cb142526bc14390576c26c3514dc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_empty</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a7df64bc3e9bb6fb049999516353e679e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PackType &gt;</type>
      <name>property_side</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a6ccb8752c581a51edd81eb4ed1856cc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PackType &gt;</type>
      <name>property_side</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a150122e03a3a299791dec42dd0477fa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_decoration_layout</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a3fc26fc2c8ac3010b27f45287ee8b07f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_decoration_layout</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a5ff9898841252300f9b93640ab0ef04e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_empty</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>ab2619ddc308837d97dc1294fc0d6456e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a4cc67002df3522913156a16627bfa0f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::WindowControls *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1WindowControls.html</anchorfile>
      <anchor>a8bfc7f868efe08a33489e22547296f46</anchor>
      <arglist>(GtkWindowControls *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::WindowGroup</name>
    <filename>classGtk_1_1WindowGroup.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>WindowGroup</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a7f6a2c3792d94ea2ddbdf0e9270da961</anchor>
      <arglist>(WindowGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WindowGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a93af3a3f415fc943eb4ff4ec4146fd68</anchor>
      <arglist>(WindowGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowGroup</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a6875a863a7ed18bd936a6a41e769d44d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWindowGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>aef213723ca60da18c416fc87d084bcf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWindowGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a54680c1b5842ba8d1765b1b91f0da88e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GtkWindowGroup *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a6f5c2c7c0b9572471a27267e1d539998</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_window</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>af09398387f8b18913715d28f8e9ae2d9</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_window</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a9650c8c68d5b1967236d15b0a35c7c1d</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Window * &gt;</type>
      <name>list_windows</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>aa96e373fc556f7faa94af2f4f9aa3d60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Window * &gt;</type>
      <name>list_windows</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a39c069040ba011aa557f9c604fabcc5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a6c8a57e2ad473b1cba1cbb9b0c18a436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; WindowGroup &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a06e7ed1c9e3460b5890ab34eb12699a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WindowGroup</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a58f33bf8908cd978b321d30ae95f5961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::WindowGroup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>aa92672f8fb518c64976abb0deb17bd0e</anchor>
      <arglist>(GtkWindowGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::WindowHandle</name>
    <filename>classGtk_1_1WindowHandle.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>WindowHandle</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>ae889d54f9aa94b7134e039cf95943787</anchor>
      <arglist>(WindowHandle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WindowHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>aa1f3e477421daa1d3660d17eb812575c</anchor>
      <arglist>(WindowHandle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowHandle</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a84ed49237beaec7f47d14f7ceb78630a</anchor>
      <arglist>(const WindowHandle &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>WindowHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a3f698ab64653086d3566d28ab2f21a28</anchor>
      <arglist>(const WindowHandle &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowHandle</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a17092f19698a0a18e945e25b68d309ab</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWindowHandle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a6e6804973844bca8199171f89078e5a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWindowHandle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a7865d81f3b7159a8fe3b317135acc9a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WindowHandle</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a56f2064afbe0238ae6c9286bd237659d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>ab2f9224b5db6fc2d4db8f1ce5c9d5dd9</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_child</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>ad852e7a1deffe5b4f7e34e2be3db7889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a54d39a325aa1df3a2544e9c99fda8d04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a78bb8b629a66d2800c011759425767f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a31cbe9332cdf1c24ccdd46d293ea02a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a92a31387da38e3813dbe9e245a9858eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>a12d35e0bf915e5efa8f4595279ded152</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::WindowHandle *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1WindowHandle.html</anchorfile>
      <anchor>ac3c1466122a75937b7098e344ccca921</anchor>
      <arglist>(GtkWindowHandle *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TreeModelColumn&lt; ColumnType &gt;</name>
    <filename>classGtk_1_1TreeModelColumn.html</filename>
    <base>Gtk::TreeModelColumnBase</base>
    <member kind="typedef">
      <type>ColumnType</type>
      <name>ElementType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a548b32f98d1fb957559ebc4c709b8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::Value&lt; ColumnType &gt;</type>
      <name>ValueType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a769fbaa0f9fd6a4c921ebb61720ed294</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModelColumn</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a52cf4894a268461a6bb4b26f913874e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TreeModelColumn&lt; Glib::ustring &gt;</name>
    <filename>classGtk_1_1TreeModelColumn.html</filename>
    <base>Gtk::TreeModelColumnBase</base>
    <member kind="typedef">
      <type>Glib::ustring</type>
      <name>ElementType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a548b32f98d1fb957559ebc4c709b8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::Value&lt; Glib::ustring &gt;</type>
      <name>ValueType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a769fbaa0f9fd6a4c921ebb61720ed294</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModelColumn</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a52cf4894a268461a6bb4b26f913874e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Cairo</name>
    <filename>namespaceCairo.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Gdk</name>
    <filename>namespaceGdk.html</filename>
    <namespace>Gdk::Cairo</namespace>
    <class kind="class">Gdk::DeviceWithPad</class>
    <class kind="class">Gdk::DragSurfaceImpl</class>
    <class kind="class">Gdk::PopupSurfaceImpl</class>
    <class kind="class">Gdk::ToplevelSurfaceImpl</class>
    <class kind="class">Gdk::AppLaunchContext</class>
    <class kind="class">Gdk::CairoContext</class>
    <class kind="class">Gdk::Clipboard</class>
    <class kind="class">Gdk::ContentFormats</class>
    <class kind="class">Gdk::ContentFormatsBuilder</class>
    <class kind="class">Gdk::ContentProvider</class>
    <class kind="class">Gdk::Cursor</class>
    <class kind="class">Gdk::Device</class>
    <class kind="class">Gdk::DevicePad</class>
    <class kind="class">Gdk::DeviceTool</class>
    <class kind="class">Gdk::Display</class>
    <class kind="class">Gdk::DisplayManager</class>
    <class kind="class">Gdk::Drag</class>
    <class kind="class">Gdk::DragSurface</class>
    <class kind="class">Gdk::DrawContext</class>
    <class kind="class">Gdk::Drop</class>
    <class kind="class">Gdk::Event</class>
    <class kind="class">Gdk::FrameClock</class>
    <class kind="class">Gdk::FrameTimings</class>
    <class kind="class">Gdk::GLError</class>
    <class kind="class">Gdk::GLContext</class>
    <class kind="class">Gdk::GLTexture</class>
    <class kind="class">Gdk::MemoryTexture</class>
    <class kind="class">Gdk::Monitor</class>
    <class kind="class">Gdk::Paintable</class>
    <class kind="class">Gdk::PixbufError</class>
    <class kind="class">Gdk::Pixbuf</class>
    <class kind="class">Gdk::PixbufAnimation</class>
    <class kind="class">Gdk::PixbufAnimationIter</class>
    <class kind="class">Gdk::PixbufFormat</class>
    <class kind="class">Gdk::PixbufLoader</class>
    <class kind="class">Gdk::Popup</class>
    <class kind="class">Gdk::PopupLayout</class>
    <class kind="class">Gdk::Rectangle</class>
    <class kind="class">Gdk::RGBA</class>
    <class kind="class">Gdk::Seat</class>
    <class kind="class">Gdk::Snapshot</class>
    <class kind="class">Gdk::Surface</class>
    <class kind="class">Gdk::TextureError</class>
    <class kind="class">Gdk::Texture</class>
    <class kind="class">Gdk::TimeCoord</class>
    <class kind="class">Gdk::Toplevel</class>
    <class kind="class">Gdk::ToplevelLayout</class>
    <class kind="class">Gdk::ToplevelSize</class>
    <member kind="enumeration">
      <type></type>
      <name>InputSource</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95ca2ec2be318cc86a1224c0e9dcc71321e4">MOUSE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95cad3fa1aa45b9fe56e1fc1b558d8ed6678">PEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95caedda266cdb6345b9f6914cc2e7577475">KEYBOARD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95ca2d13f7e9bde0277e8a81eeb4569e8e33">TOUCHSCREEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95cab37023f260283a7a7f7ae79637f476d1">TOUCHPAD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95ca0eedd0c48ef32cb25dadcea6ee148e03">TRACKPOINT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95ca824aebf2c6d32530c206fc0c38c5db06">TABLET_PAD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragCancelReason</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8c79041c84505c11dbb19b6dce7bcf15</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8c79041c84505c11dbb19b6dce7bcf15a25c048a9893a60bddb82dde516ea8d84">NO_TARGET</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8c79041c84505c11dbb19b6dce7bcf15adf21509f1aa29b63f30453c9d4568631">USER_CANCELLED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8c79041c84505c11dbb19b6dce7bcf15abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisFlags</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13ae00a27b055945bd9d2f0675b88d04994">DELTA_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a9eeb5da461f980d442766906f9aa5de7">DELTA_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a6753182d0065061a189bb834145e8cd1">PRESSURE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a1f25b7bafc96defe027e4745193048bf">XTILT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a400145fc5c4fc5f290cadae4df19206c">YTILT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a0f0dd2bcb848ba94248d660bada66b34">WHEEL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13ab06c2037eb7a58030a42212c8244d477">DISTANCE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13aa27939099e0fe4086159364fcf8d5f73">ROTATION</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a3c93f85078b290625b7c4db299979c4f">SLIDER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisUse</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7aa2e843feab94ef623fea888f07c28696">IGNORE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7ae00a27b055945bd9d2f0675b88d04994">DELTA_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a9eeb5da461f980d442766906f9aa5de7">DELTA_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a6753182d0065061a189bb834145e8cd1">PRESSURE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a1f25b7bafc96defe027e4745193048bf">XTILT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a400145fc5c4fc5f290cadae4df19206c">YTILT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a0f0dd2bcb848ba94248d660bada66b34">WHEEL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7ab06c2037eb7a58030a42212c8244d477">DISTANCE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7aa27939099e0fe4086159364fcf8d5f73">ROTATION</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a3c93f85078b290625b7c4db299979c4f">SLIDER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7af447f5c03508de4d88e340390ba7c78f">LAST</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CrossingMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga51381e098e2f4c0e9d1187af00212412</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a8695c57e30e957161af26fe52d8a5826">GRAB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a6def5f6325c94e8ebae23c0757362dd5">UNGRAB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412afb246063db6ad5f2148a30a649de8a3f">GTK_GRAB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a2f6c3f8ee99f1a460eab9de142e38146">GTK_UNGRAB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412ad20139b302c5229b353275e78827dbc5">STATE_CHANGED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412aeeab9b6bf8a005872d294bfa0a20025a">TOUCH_BEGIN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a2eb2c753d4070138e8823f538643dbf6">TOUCH_END</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a6cf2b1c135683eaf11117baa7416939e">DEVICE_SWITCH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragAction</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a9506293be3b3dfe00ecdb83e764ca6ae8606d021da140a92c7eba8d9b8af84f">COPY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a9506293be3b3dfe00ecdb83e764ca6af7f93635f8e193a924ae4a691bb66b8f">MOVE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a9506293be3b3dfe00ecdb83e764ca6a58c0a0e97e6d2f615bc264c2775fda44">LINK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a9506293be3b3dfe00ecdb83e764ca6a9fb730caf1b2d638a1dcf747f0d4207d">ASK</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Gravity</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1bb9235871d434d3c55411d8261b075e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075eaa284a013a2af9189373c41351330e0d3">NORTH_WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea2bf8f791695c70efa9c14e6f1c326403">NORTH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea9d1250c1be563879340211b990a1297c">NORTH_EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea83c9f5692281bf59471b13dfddb3af91">WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075eac397289ee45877be0cd49811fe245b4e">CENTER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea45ac78bf3d4882ac520f4e7fb08d55c5">EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075eaca96c91342c9c847a70b11d29692ec01">SOUTH_WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea96e44fa82e5a5263fb92337be422d3eb">SOUTH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea851c1766426329f3aed605f25b08f769">SOUTH_EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075eafe6f99ef1ec99efbdc19a9786cf1facc">STATIC</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModifierType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a3dc6fbe44b971bbbf78cdcb09646d408">SHIFT_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97af7dcc1a4d3e22ea5e8da562eb49b15f5">LOCK_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a1cf7e318199a2c92f8998fa28ef1a6e0">CONTROL_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a92414f242e6176bd059cf5410938b2ad">ALT_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97ac3994cec3efa5171279e5a941af37764">BUTTON1_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a074d87d3f720a9f7b316cb5e1526f3ad">BUTTON2_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a504f9750ada3531a9ca6bc4578dbe7d1">BUTTON3_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97acba37d236d683d39cf041472780fea5c">BUTTON4_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97aaf16c465ab1273eb8d7a394f8205417d">BUTTON5_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a0ba06af7c68462207bd81d90a75192c6">SUPER_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97acca48cb2202e1e95c77ef4e7d12db4bb">HYPER_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97ae9487d0f509173eeee762a73f5098eea">META_MASK</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NotifyType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8af79bb27f97650fb2aa357f7a9b2cdd</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda221efe82951a165d1ac6ccfe5822cbe9">ANCESTOR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda05470727787aa721cf53222b5d3d40f3">VIRTUAL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda4f10abcd0aa37699b72ccf01540a8995">INFERIOR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cddabda8a2bc3f2b11a8313512f84864777f">NONLINEAR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda9f5eb4152a855b0d9f7c439ad215be51">NONLINEAR_VIRTUAL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollDirection</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac2fa2e5a018b29f36448a06f8e8c123c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123cafbaedde498cdead4f2780217646e9ba1">UP</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123cac4e0e4e3118472beeb2ae75827450f1f">DOWN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123ca684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123ca21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123ca464948bf38663fe1c4053f72402b63d5">SMOOTH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TouchpadGesturePhase</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga37bf51065a75849c3f52ecd16fa0bcfb</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga37bf51065a75849c3f52ecd16fa0bcfba19aad9f2fe3ce0023298ab83f7e75775">BEGIN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga37bf51065a75849c3f52ecd16fa0bcfba15a8022d0ed9cd9c2a2e756822703eb4">UPDATE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga37bf51065a75849c3f52ecd16fa0bcfbab1a326c06d88bf042f73d70f50197905">END</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga37bf51065a75849c3f52ecd16fa0bcfba2027c027133e22c8929e2874dc44dd36">CANCEL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollUnit</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2026cdbd2c3d074f815c59956121ac17</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2026cdbd2c3d074f815c59956121ac17a0f0dd2bcb848ba94248d660bada66b34">WHEEL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2026cdbd2c3d074f815c59956121ac17a3513fa1d151ed2fe37341d8e2d86dd8c">SURFACE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeyMatch</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab6a89da620d8a55904ecc19428d7c24d</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6a89da620d8a55904ecc19428d7c24dab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6a89da620d8a55904ecc19428d7c24dafba5cdfa4bcb408f641c743519a0fe19">PARTIAL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6a89da620d8a55904ecc19428d7c24dac41e056424136b6e8c4e23dd6326efa1">EXACT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GLApi</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga768e103a9ff6ae6587583fe4dee496a9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga768e103a9ff6ae6587583fe4dee496a9aad70939237c6f0d638fe79884d91449b">GL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga768e103a9ff6ae6587583fe4dee496a9a7e384ec7ebbb4403911770ab90cd91a1">GLES</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GLAPI</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1e635b6f765f454867b578cd614179d7</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1e635b6f765f454867b578cd614179d7aad70939237c6f0d638fe79884d91449b">GL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1e635b6f765f454867b578cd614179d7a7e384ec7ebbb4403911770ab90cd91a1">GLES</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SubpixelLayout</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaa</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa3a18a06c8e6bb8a5189c6b244bb7fdd1">HORIZONTAL_RGB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa256f347885f0a29b5415f61c8bb76370">HORIZONTAL_BGR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa4c6a73d4cf585f0fa3c8c727adcb50c7">VERTICAL_RGB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa5f16e0801f74527caab23e8e8c7b5c48">VERTICAL_BGR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Colorspace</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga866d716154abb7f5be26bd36b3017d3f</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga866d716154abb7f5be26bd36b3017d3fa889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InterpType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715fac</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga709a35a3eb48c0b819041e3414715facaad135772d7cf93dd0ccf9d2474b34e6a">NEAREST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga709a35a3eb48c0b819041e3414715faca016ffba64e34f1856fc40a0ede6b66e1">TILES</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga709a35a3eb48c0b819041e3414715facaad6fddf718ad19b063e02fdd7e8e3e65">BILINEAR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga709a35a3eb48c0b819041e3414715faca74f67c0302d5888253dce0a5e2462ade">HYPER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnchorHints</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ac039a0e505a57a288c0de3334649f17b">FLIP_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ab9b8e06eeba4d9b150c39907b7261a34">FLIP_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940a11ae2bc51a61dd6c7432894cef1d770a">SLIDE_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940af3edc18ff2ffa6821c628e3e5d1d3fae">SLIDE_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ab08f3ab5981a38c93c339fdfb997e535">RESIZE_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ac37e45b95b79d3cf7b6c94f83ad24ea3">RESIZE_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ac49dea25c71cd4eb6e7930cc908b347d">FLIP</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ab4bece16f41bf005ca3fb5358b67b0c6">SLIDE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940a1acac8984c2139895dee3e8aa928de57">RESIZE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SurfaceEdge</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga02c48b5874f5d12617e3651c5d2c7acc</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7accaa284a013a2af9189373c41351330e0d3">NORTH_WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca2bf8f791695c70efa9c14e6f1c326403">NORTH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca9d1250c1be563879340211b990a1297c">NORTH_EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca83c9f5692281bf59471b13dfddb3af91">WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca45ac78bf3d4882ac520f4e7fb08d55c5">EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7accaca96c91342c9c847a70b11d29692ec01">SOUTH_WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca96e44fa82e5a5263fb92337be422d3eb">SOUTH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca851c1766426329f3aed605f25b08f769">SOUTH_EAST</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FullscreenMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab6878e8f24bf48a74f62573e4f252847</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6878e8f24bf48a74f62573e4f252847a367b346fde329f22e0d445b479150d18">ON_CURRENT_MONITOR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6878e8f24bf48a74f62573e4f252847a79366c1e28caf8addb3e013caf78b32e">ON_ALL_MONITORS</enumvalue>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3cbd30b32e1a100503398960f4779dee</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae29cee1278e0927f29e5f13f2afcc648</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga63b86bb3648a3c6eaf3f80bc7c8c53d4</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac26bd9e081e5bbdddf758cd63abf6131</anchor>
      <arglist>(AxisFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9e7ad1d8a3aec3c19fbf39e06af12a9a</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga29e9f438ed6380cbd8582d3f243faa7e</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1daa317ebc41b3a6d9bed57ac14ced59</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf3255f44d3f9fccc900f8264b01ca632</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9c856185b733dd03866f1b8cd0d3d7f9</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae19f3b208343da290137dc38d9a32993</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa94621e5a8456f3db149323d793feeca</anchor>
      <arglist>(DragAction flags)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9d8233eb045b3578dc0ee65b71aa4894</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadc215548f83bedbace310af27f3b4f9f</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab1540afa3db90f4b5786796dbb4fc811</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaea5a44032c938042746ad236bd660cb2</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad82a54dfc3606ebaa71c019c0f529845</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0cdb70ae86f6833d530d8342cdea8f4f</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac4cedd5d88bb8edb2777e6bbccfd1b3b</anchor>
      <arglist>(ModifierType flags)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga99cb90b1d68978ab0c006a66382fc1a7</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0639d6eb9650f83675b5195a290a28db</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gacb25d39f0de616dbd29c3202e75c68bb</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaefb05faff52f0140eaaf0b166aa96f42</anchor>
      <arglist>(FrameClock::Phase lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa38c901ed5e96d1f4ca9bca5eb539c38</anchor>
      <arglist>(FrameClock::Phase lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadf5343521a39a1916e113eb89ba6104f</anchor>
      <arglist>(FrameClock::Phase lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab5c5800a4f6aedc0874e359a3e4f05f6</anchor>
      <arglist>(FrameClock::Phase flags)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae826f61ef52e4470d5f0d44f34565a0e</anchor>
      <arglist>(FrameClock::Phase &amp;lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa6edc364a7be4fa226fe4f8ec7815698</anchor>
      <arglist>(FrameClock::Phase &amp;lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga39532e0c2f91069345d3cac6d2a83333</anchor>
      <arglist>(FrameClock::Phase &amp;lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga96907a0107c6fcab72c6b822037e386f</anchor>
      <arglist>(GLApi lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8671595b0425a82a448d3cf678dc3121</anchor>
      <arglist>(GLApi lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4de32b34cb38b208d6de806343f6ff33</anchor>
      <arglist>(GLApi lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab6eae8dc9a2115059d2a72488df6ce8e</anchor>
      <arglist>(GLApi flags)</arglist>
    </member>
    <member kind="function">
      <type>GLApi &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa24ac5f32f10d49af5caac2879998e87</anchor>
      <arglist>(GLApi &amp;lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4ee27581ab2606b8577c95b2bc1a14f0</anchor>
      <arglist>(GLApi &amp;lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa3f6e41ffe73c2a2977e664b65d3f521</anchor>
      <arglist>(GLApi &amp;lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8fcc2e614977f0d70897c7653b780ef8</anchor>
      <arglist>(GLAPI lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad5f10dc100d5af19e63775741a76a3e3</anchor>
      <arglist>(GLAPI lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gabda89fc8e4943c48e5d21de3be255148</anchor>
      <arglist>(GLAPI lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga29e54a7b7c754df02f84ec0c253a5663</anchor>
      <arglist>(GLAPI flags)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga14c24d9cd7b9df7a65b45eff3ede39bd</anchor>
      <arglist>(GLAPI &amp;lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga429e148c0255afa70a8c32b823ec6657</anchor>
      <arglist>(GLAPI &amp;lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga05cae2e9d5eed9fd780b621afb8ee2ad</anchor>
      <arglist>(GLAPI &amp;lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6038c04f7989f52dea77f6c81662942e</anchor>
      <arglist>(Paintable::Flags lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3e48c471aad77a8e525832fefabde43d</anchor>
      <arglist>(Paintable::Flags lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3207e7043d29277a836bf83684ea0772</anchor>
      <arglist>(Paintable::Flags lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae5cffc2f8c20d106bf90b014d001d05a</anchor>
      <arglist>(Paintable::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gabf80996ea77ae313a3d7158cc9965697</anchor>
      <arglist>(Paintable::Flags &amp;lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaca08ede4e8ac88423fd16c172febc0c5</anchor>
      <arglist>(Paintable::Flags &amp;lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga28df8945d7af0422b59d142db991831a</anchor>
      <arglist>(Paintable::Flags &amp;lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae484f290e9b5e65cc1477023326d5b7c</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaeab522e4886592c592b0a39cbd2c51ff</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5fba6499c1bef048e61300108ef1961d</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga93766424068809b36648ad03f603e14e</anchor>
      <arglist>(AnchorHints flags)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae52c4490f004aee155140e38957e1c2c</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7bd3cff4750fe4c7eecc247ec1880ecc</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6dc7a116b6e719d67628be53dd32ad42</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga58eadd1585b5797e7151aa39b4d9626b</anchor>
      <arglist>(Seat::Capabilities lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3e7f4acf83c5e58322385d1fdc1747e8</anchor>
      <arglist>(Seat::Capabilities lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga16cae175b197f98eecf69d49d4f9856a</anchor>
      <arglist>(Seat::Capabilities lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad09ae308290060e1f4a1f41ec2b9dd4e</anchor>
      <arglist>(Seat::Capabilities flags)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6951c17082764e8494cb520e72f9ec00</anchor>
      <arglist>(Seat::Capabilities &amp;lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaef910a915cad3e4ccc616b6fd51ae991</anchor>
      <arglist>(Seat::Capabilities &amp;lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad1bd479f78f5d2d785bbdb536ce97c1f</anchor>
      <arglist>(Seat::Capabilities &amp;lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7e3da6720e035cef8d5fbd1a322dbe84</anchor>
      <arglist>(Toplevel::State lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab0ba0d6db47cfdf5bbb8d930301ac8f8</anchor>
      <arglist>(Toplevel::State lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac8165e4e85d0ae54ff8bac2bd9af171a</anchor>
      <arglist>(Toplevel::State lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1e5e8bb6fc7baccfefc42f93f85d49b6</anchor>
      <arglist>(Toplevel::State flags)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga434007d3c62bdb560605b66a92e63f83</anchor>
      <arglist>(Toplevel::State &amp;lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadf10a99e75aecdbb07cba6597bcf14d4</anchor>
      <arglist>(Toplevel::State &amp;lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga32e308b7a358a836c20a09100621861b</anchor>
      <arglist>(Toplevel::State &amp;lhs, Toplevel::State rhs)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gdk::Cairo</name>
    <filename>namespaceGdk_1_1Cairo.html</filename>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Context &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>ad8bec4dff96c8e84581f27317a1d4915</anchor>
      <arglist>(cairo_t *cobject, bool has_reference=true)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Region &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a4f15b89ac8771a040176250794d13a2e</anchor>
      <arglist>(cairo_region_t *cobject, bool has_reference=true)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; T &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>aa932f0040f574e83207f797da1bfe105</anchor>
      <arglist>(cairo_surface_t *cobject, bool has_reference=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_source_rgba</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a0f592f448c610fa191d3de1fbf1899e3</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_source_pixbuf</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>aa24894861f63d4ff081e57441eef88ce</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Glib::RefPtr&lt; const Gdk::Pixbuf &gt; &amp;pixbuf, double pixbuf_x=0, double pixbuf_y=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_rectangle_to_path</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a6ea2e5e747df1326ca23215e39616a78</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Gdk::Rectangle &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_region_to_path</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a217bdd97cd08f473eb56c191f091419e</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Region &gt;</type>
      <name>create_region_from_surface</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a890b5dc9fe567788120090785ca91a6a</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_from_gl</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a21c6ba261fd0974c49c090ff84eac6b1</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Glib::RefPtr&lt; Gdk::Surface &gt; &amp;surface, int source, int source_type, int buffer_scale, int x, int y, int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gio</name>
    <filename>namespaceGio.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Glib</name>
    <filename>namespaceGlib.html</filename>
    <namespace>Glib::Container_Helpers</namespace>
    <class kind="class">Glib::Value&lt;::Cairo::RefPtr&lt; T &gt;, typename std::enable_if&lt; std::is_base_of&lt;::Cairo::Region, T &gt;::value||std::is_base_of&lt;::Cairo::Surface, T &gt;::value &gt;::type &gt;</class>
    <class kind="class">Glib::Value&lt; Glib::RefPtr&lt; Gdk::ContentFormats &gt; &gt;</class>
    <class kind="class">Glib::Value&lt; RefPtr&lt; Gtk::Expression&lt; T &gt; &gt; &gt;</class>
    <class kind="class">Glib::Value&lt; Glib::RefPtr&lt; Gtk::RecentInfo &gt; &gt;</class>
    <member kind="function">
      <type>RefPtr&lt; Gtk::Expression&lt; T &gt; &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad7f08958530150a9f72eb7b02f1051a9</anchor>
      <arglist>(GtkExpression *object, bool take_copy=false)</arglist>
    </member>
    <member kind="function">
      <type>RefPtr&lt; Gtk::ExpressionWatch&lt; T &gt; &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ac1a14c52f1e825557c877c5db0776362</anchor>
      <arglist>(GtkExpressionWatch *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Glib::Container_Helpers</name>
    <filename>namespaceGlib_1_1Container__Helpers.html</filename>
    <class kind="struct">Glib::Container_Helpers::TypeTraits&lt;::Cairo::RefPtr&lt;::Cairo::Surface &gt; &gt;</class>
    <class kind="struct">Glib::Container_Helpers::TypeTraits&lt;::Cairo::RefPtr&lt; const ::Cairo::Surface &gt; &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>Gtk</name>
    <filename>namespaceGtk.html</filename>
    <namespace>Gtk::Accelerator</namespace>
    <class kind="class">Gtk::AccelKey</class>
    <class kind="class">Gtk::BitsetConstIter</class>
    <class kind="class">Gtk::ListViewText</class>
    <class kind="class">Gtk::Object</class>
    <class kind="class">Gtk::SelectionListModelImpl</class>
    <class kind="class">Gtk::TreeModelColumnRecord</class>
    <class kind="class">Gtk::TreeModelColumnBase</class>
    <class kind="class">Gtk::TreeModelColumn</class>
    <class kind="class">Gtk::AboutDialog</class>
    <class kind="class">Gtk::Accessible</class>
    <class kind="class">Gtk::Actionable</class>
    <class kind="class">Gtk::ActionBar</class>
    <class kind="class">Gtk::Adjustment</class>
    <class kind="class">Gtk::AppChooser</class>
    <class kind="class">Gtk::AppChooserButton</class>
    <class kind="class">Gtk::AppChooserDialog</class>
    <class kind="class">Gtk::AppChooserWidget</class>
    <class kind="class">Gtk::Application</class>
    <class kind="class">Gtk::ApplicationWindow</class>
    <class kind="class">Gtk::AspectFrame</class>
    <class kind="class">Gtk::Assistant</class>
    <class kind="class">Gtk::AssistantPage</class>
    <class kind="class">Gtk::BinLayout</class>
    <class kind="class">Gtk::Bitset</class>
    <class kind="class">Gtk::BoolFilter</class>
    <class kind="class">Gtk::Border</class>
    <class kind="class">Gtk::Box</class>
    <class kind="class">Gtk::BoxLayout</class>
    <class kind="class">Gtk::Buildable</class>
    <class kind="class">Gtk::BuilderError</class>
    <class kind="class">Gtk::Builder</class>
    <class kind="class">Gtk::Button</class>
    <class kind="class">Gtk::Calendar</class>
    <class kind="class">Gtk::CellArea</class>
    <class kind="class">Gtk::CellAreaBox</class>
    <class kind="class">Gtk::CellAreaContext</class>
    <class kind="class">Gtk::CellEditable</class>
    <class kind="class">Gtk::CellLayout</class>
    <class kind="class">Gtk::CellRenderer</class>
    <class kind="class">Gtk::CellRendererAccel</class>
    <class kind="class">Gtk::CellRendererCombo</class>
    <class kind="class">Gtk::CellRendererPixbuf</class>
    <class kind="class">Gtk::CellRendererProgress</class>
    <class kind="class">Gtk::CellRendererSpin</class>
    <class kind="class">Gtk::CellRendererSpinner</class>
    <class kind="class">Gtk::CellRendererText</class>
    <class kind="class">Gtk::CellRendererToggle</class>
    <class kind="class">Gtk::CellView</class>
    <class kind="class">Gtk::CenterBox</class>
    <class kind="class">Gtk::CenterLayout</class>
    <class kind="class">Gtk::CheckButton</class>
    <class kind="class">Gtk::ColorButton</class>
    <class kind="class">Gtk::ColorChooser</class>
    <class kind="class">Gtk::ColorChooserDialog</class>
    <class kind="class">Gtk::ColumnView</class>
    <class kind="class">Gtk::ColumnViewColumn</class>
    <class kind="class">Gtk::ComboBox</class>
    <class kind="class">Gtk::ComboBoxText</class>
    <class kind="class">Gtk::Constraint</class>
    <class kind="class">Gtk::ConstraintGuide</class>
    <class kind="class">Gtk::ConstraintVflParserError</class>
    <class kind="class">Gtk::ConstraintLayout</class>
    <class kind="class">Gtk::ConstraintTarget</class>
    <class kind="class">Gtk::CssLocation</class>
    <class kind="class">Gtk::CssParserError</class>
    <class kind="class">Gtk::CssParserWarning</class>
    <class kind="class">Gtk::CssProvider</class>
    <class kind="class">Gtk::CssSection</class>
    <class kind="class">Gtk::ResponseType_Wrapper</class>
    <class kind="class">Gtk::Dialog</class>
    <class kind="class">Gtk::DirectoryList</class>
    <class kind="class">Gtk::DragIcon</class>
    <class kind="class">Gtk::DragSource</class>
    <class kind="class">Gtk::DrawingArea</class>
    <class kind="class">Gtk::DropControllerMotion</class>
    <class kind="class">Gtk::DropDown</class>
    <class kind="class">Gtk::DropTarget</class>
    <class kind="class">Gtk::DropTargetAsync</class>
    <class kind="class">Gtk::Editable</class>
    <class kind="class">Gtk::EditableLabel</class>
    <class kind="class">Gtk::EmojiChooser</class>
    <class kind="class">Gtk::Entry</class>
    <class kind="class">Gtk::EntryCompletion</class>
    <class kind="class">Gtk::EntryBuffer</class>
    <class kind="class">Gtk::EventController</class>
    <class kind="class">Gtk::EventControllerFocus</class>
    <class kind="class">Gtk::EventControllerKey</class>
    <class kind="class">Gtk::EventControllerLegacy</class>
    <class kind="class">Gtk::EventControllerMotion</class>
    <class kind="class">Gtk::EventControllerScroll</class>
    <class kind="class">Gtk::Expander</class>
    <class kind="class">Gtk::ExpressionBase</class>
    <class kind="class">Gtk::Expression</class>
    <class kind="class">Gtk::PropertyExpression</class>
    <class kind="class">Gtk::ConstantExpression</class>
    <class kind="class">Gtk::ObjectExpression</class>
    <class kind="class">Gtk::ClosureExpression</class>
    <class kind="class">Gtk::ExpressionWatchBase</class>
    <class kind="class">Gtk::ExpressionWatch</class>
    <class kind="class">Gtk::FileChooserError</class>
    <class kind="class">Gtk::FileChooser</class>
    <class kind="class">Gtk::FileChooserDialog</class>
    <class kind="class">Gtk::FileChooserNative</class>
    <class kind="class">Gtk::FileChooserWidget</class>
    <class kind="class">Gtk::FileFilter</class>
    <class kind="class">Gtk::Filter</class>
    <class kind="class">Gtk::FilterListModel</class>
    <class kind="class">Gtk::Fixed</class>
    <class kind="class">Gtk::FlattenListModel</class>
    <class kind="class">Gtk::FlowBox</class>
    <class kind="class">Gtk::FlowBoxChild</class>
    <class kind="class">Gtk::FontButton</class>
    <class kind="class">Gtk::FontChooser</class>
    <class kind="class">Gtk::FontChooserDialog</class>
    <class kind="class">Gtk::FontChooserWidget</class>
    <class kind="class">Gtk::Frame</class>
    <class kind="class">Gtk::Gesture</class>
    <class kind="class">Gtk::GestureClick</class>
    <class kind="class">Gtk::GestureDrag</class>
    <class kind="class">Gtk::GestureLongPress</class>
    <class kind="class">Gtk::GesturePan</class>
    <class kind="class">Gtk::GestureRotate</class>
    <class kind="class">Gtk::GestureSingle</class>
    <class kind="class">Gtk::GestureStylus</class>
    <class kind="class">Gtk::GestureSwipe</class>
    <class kind="class">Gtk::GestureZoom</class>
    <class kind="class">Gtk::GLArea</class>
    <class kind="class">Gtk::Grid</class>
    <class kind="class">Gtk::GridLayout</class>
    <class kind="class">Gtk::GridLayoutChild</class>
    <class kind="class">Gtk::GridView</class>
    <class kind="class">Gtk::HeaderBar</class>
    <class kind="class">Gtk::IconPaintable</class>
    <class kind="class">Gtk::IconThemeError</class>
    <class kind="class">Gtk::IconTheme</class>
    <class kind="class">Gtk::IconView</class>
    <class kind="class">Gtk::Image</class>
    <class kind="class">Gtk::InfoBar</class>
    <class kind="class">Gtk::Inscription</class>
    <class kind="class">Gtk::Label</class>
    <class kind="class">Gtk::LayoutChild</class>
    <class kind="class">Gtk::LayoutManager</class>
    <class kind="class">Gtk::LevelBar</class>
    <class kind="class">Gtk::LinkButton</class>
    <class kind="class">Gtk::ListBase</class>
    <class kind="class">Gtk::ListBox</class>
    <class kind="class">Gtk::ListBoxRow</class>
    <class kind="class">Gtk::ListItem</class>
    <class kind="class">Gtk::ListItemFactory</class>
    <class kind="class">Gtk::ListStore</class>
    <class kind="class">Gtk::ListView</class>
    <class kind="class">Gtk::LockButton</class>
    <class kind="class">Gtk::MediaControls</class>
    <class kind="class">Gtk::MediaFile</class>
    <class kind="class">Gtk::MediaStream</class>
    <class kind="class">Gtk::MenuButton</class>
    <class kind="class">Gtk::MessageDialog</class>
    <class kind="class">Gtk::MultiFilter</class>
    <class kind="class">Gtk::AnyFilter</class>
    <class kind="class">Gtk::EveryFilter</class>
    <class kind="class">Gtk::MultiSelection</class>
    <class kind="class">Gtk::MultiSorter</class>
    <class kind="class">Gtk::Native</class>
    <class kind="class">Gtk::NativeDialog</class>
    <class kind="class">Gtk::NoSelection</class>
    <class kind="class">Gtk::Notebook</class>
    <class kind="class">Gtk::NotebookPage</class>
    <class kind="class">Gtk::NumericSorterBase</class>
    <class kind="class">Gtk::NumericSorter</class>
    <class kind="class">Gtk::Orientable</class>
    <class kind="class">Gtk::Overlay</class>
    <class kind="class">Gtk::PadActionEntry</class>
    <class kind="class">Gtk::PadController</class>
    <class kind="class">Gtk::PageSetup</class>
    <class kind="class">Gtk::Paned</class>
    <class kind="class">Gtk::PaperSize</class>
    <class kind="class">Gtk::PasswordEntry</class>
    <class kind="class">Gtk::Picture</class>
    <class kind="class">Gtk::Popover</class>
    <class kind="class">Gtk::PopoverMenu</class>
    <class kind="class">Gtk::PopoverMenuBar</class>
    <class kind="class">Gtk::PrintContext</class>
    <class kind="class">Gtk::PrintError</class>
    <class kind="class">Gtk::PrintOperation</class>
    <class kind="class">Gtk::PrintOperationPreview</class>
    <class kind="class">Gtk::PageRange</class>
    <class kind="class">Gtk::PrintSettings</class>
    <class kind="class">Gtk::ProgressBar</class>
    <class kind="class">Gtk::Range</class>
    <class kind="class">Gtk::RecentInfo</class>
    <class kind="class">Gtk::RecentManagerError</class>
    <class kind="class">Gtk::RecentManager</class>
    <class kind="class">Gtk::Requisition</class>
    <class kind="class">Gtk::Revealer</class>
    <class kind="class">Gtk::Root</class>
    <class kind="class">Gtk::Scale</class>
    <class kind="class">Gtk::ScaleButton</class>
    <class kind="class">Gtk::Scrollable</class>
    <class kind="class">Gtk::Scrollbar</class>
    <class kind="class">Gtk::ScrolledWindow</class>
    <class kind="class">Gtk::SearchBar</class>
    <class kind="class">Gtk::SearchEntry</class>
    <class kind="class">Gtk::SelectionFilterModel</class>
    <class kind="class">Gtk::SelectionModel</class>
    <class kind="class">Gtk::Separator</class>
    <class kind="class">Gtk::Settings</class>
    <class kind="class">Gtk::SignalListItemFactory</class>
    <class kind="class">Gtk::Shortcut</class>
    <class kind="class">Gtk::ShortcutAction</class>
    <class kind="class">Gtk::NothingAction</class>
    <class kind="class">Gtk::CallbackAction</class>
    <class kind="class">Gtk::MnemonicAction</class>
    <class kind="class">Gtk::ActivateAction</class>
    <class kind="class">Gtk::SignalAction</class>
    <class kind="class">Gtk::NamedAction</class>
    <class kind="class">Gtk::ShortcutController</class>
    <class kind="class">Gtk::ShortcutLabel</class>
    <class kind="class">Gtk::ShortcutManager</class>
    <class kind="class">Gtk::ShortcutsGroup</class>
    <class kind="class">Gtk::ShortcutsSection</class>
    <class kind="class">Gtk::ShortcutsShortcut</class>
    <class kind="class">Gtk::ShortcutsWindow</class>
    <class kind="class">Gtk::ShortcutTrigger</class>
    <class kind="class">Gtk::NeverTrigger</class>
    <class kind="class">Gtk::KeyvalTrigger</class>
    <class kind="class">Gtk::MnemonicTrigger</class>
    <class kind="class">Gtk::AlternativeTrigger</class>
    <class kind="class">Gtk::SingleSelection</class>
    <class kind="class">Gtk::SizeGroup</class>
    <class kind="class">Gtk::SliceListModel</class>
    <class kind="class">Gtk::Snapshot</class>
    <class kind="class">Gtk::Sorter</class>
    <class kind="class">Gtk::SortListModel</class>
    <class kind="class">Gtk::SpinButton</class>
    <class kind="class">Gtk::Spinner</class>
    <class kind="class">Gtk::Stack</class>
    <class kind="class">Gtk::StackPage</class>
    <class kind="class">Gtk::StackSidebar</class>
    <class kind="class">Gtk::StackSwitcher</class>
    <class kind="class">Gtk::Statusbar</class>
    <class kind="class">Gtk::StringFilter</class>
    <class kind="class">Gtk::StringList</class>
    <class kind="class">Gtk::StringObject</class>
    <class kind="class">Gtk::StringSorter</class>
    <class kind="class">Gtk::StyleContext</class>
    <class kind="class">Gtk::StyleProvider</class>
    <class kind="class">Gtk::Switch</class>
    <class kind="class">Gtk::Text</class>
    <class kind="class">Gtk::TextBuffer</class>
    <class kind="class">Gtk::TextChildAnchor</class>
    <class kind="class">Gtk::TextIterBase</class>
    <class kind="class">Gtk::TextIter</class>
    <class kind="class">Gtk::TextConstIter</class>
    <class kind="class">Gtk::TextMark</class>
    <class kind="class">Gtk::TextTag</class>
    <class kind="class">Gtk::TextTagTable</class>
    <class kind="class">Gtk::TextView</class>
    <class kind="class">Gtk::ToggleButton</class>
    <class kind="class">Gtk::Tooltip</class>
    <class kind="class">Gtk::TreeDragDest</class>
    <class kind="class">Gtk::TreeDragSource</class>
    <class kind="class">Gtk::TreeExpander</class>
    <class kind="class">Gtk::TreeIter</class>
    <class kind="class">Gtk::TreeIterBase</class>
    <class kind="class">Gtk::TreeIterBase2</class>
    <class kind="class">Gtk::TreeIterBase3</class>
    <class kind="class">Gtk::TreeValueProxy</class>
    <class kind="class">Gtk::TreeConstRow</class>
    <class kind="class">Gtk::TreeRow</class>
    <class kind="class">Gtk::TreeNodeConstChildren</class>
    <class kind="class">Gtk::TreeNodeChildren</class>
    <class kind="class">Gtk::TreeListModel</class>
    <class kind="class">Gtk::TreeListRow</class>
    <class kind="class">Gtk::TreeModel</class>
    <class kind="class">Gtk::TreeModelFilter</class>
    <class kind="class">Gtk::TreeModelSort</class>
    <class kind="class">Gtk::TreePath</class>
    <class kind="class">Gtk::TreeRowReference</class>
    <class kind="class">Gtk::TreeSelection</class>
    <class kind="class">Gtk::TreeSortable</class>
    <class kind="class">Gtk::TreeStore</class>
    <class kind="class">Gtk::TreeView</class>
    <class kind="class">Gtk::TreeViewColumn</class>
    <class kind="class">Gtk::Video</class>
    <class kind="class">Gtk::Viewport</class>
    <class kind="class">Gtk::VolumeButton</class>
    <class kind="class">Gtk::Widget</class>
    <class kind="class">Gtk::WidgetPaintable</class>
    <class kind="class">Gtk::Window</class>
    <class kind="class">Gtk::WindowControls</class>
    <class kind="class">Gtk::WindowGroup</class>
    <class kind="class">Gtk::WindowHandle</class>
    <class kind="class">Gtk::PageSetupUnixDialog</class>
    <class kind="class">Gtk::Printer</class>
    <class kind="class">Gtk::PrintJob</class>
    <class kind="class">Gtk::PrintUnixDialog</class>
    <member kind="typedef">
      <type>ResponseType_Wrapper::ResponseType</type>
      <name>ResponseType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a310c03b74e03af3545fbfb0e17ba87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void(const Glib::RefPtr&lt; PageSetup &gt; &amp;)&gt;</type>
      <name>SlotPrintSetupDone</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a1df20bedd1e8fce6e3866e600ebe7f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Gdk::Rectangle</type>
      <name>Allocation</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8aafb0aa51d1034c06046f066563367b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>License</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ad62ed19bfea19c06b7f7bd7eb7accd58">GPL_2_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a85d2e001767f82b2d32835e3455d5f0c">GPL_3_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ab459be528e41973aaafe4e0748eda088">LGPL_2_1</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4af181e5b5f858198a9d0c76d6a00af45a">LGPL_3_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ac539e03be7b269c8a84f85437bc8d298">BSD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a618ab187de4f43fe4111b0525c1b245b">MIT_X11</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a2ee472f109582677972e6225d6d919df">ARTISTIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ae03be4ef6a2988adbae4deca77d5ea2b">GPL_2_0_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4aa87d9623b391b6051e23f5929352212c">GPL_3_0_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4aef0877588103d357760ed599faf82011">LGPL_2_1_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ae0ac086d453c7519ec4208a8c37def82">LGPL_3_0_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a7b2d38bd5fa3c2b6f8663e4ae3cee1bc">AGPL_3_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a90f48283538dd6982efee37160e5a32f">AGPL_3_0_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a3ee3064c2d3002a7ab8ad7f92e26cf58">BSD_3</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4aa81f6d86eeac0122f14239f6ecc60e84">APACHE_2_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a88932bac1467ad07c606249a9ffaa631">MPL_2_0</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererState</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877ac841881b7f65d9e69aa9c932ca4427c8">SELECTED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877aae647f1222eb18ac0f5d78a76e3cedeb">PRELIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877a61441d6c841da240b514b8147c6570d3">INSENSITIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877a98c9ebf97fd64620520cc3f0386ebaf0">SORTED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877a3bccbab2a35cb78388a0f4a8e2003b07">FOCUSED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877ada38e4ae9f0772a8d992d805e07c3cd9">EXPANDABLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877a59fd6ceac734b3855e74b57d00a1db1f">EXPANDED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecf</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf272c01b5a3cb656e373301223b1eecfad045782b31eed09e6224a51be7cda142">INERT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf272c01b5a3cb656e373301223b1eecfa92dd8beddddeafa14dbf175ad049b382">ACTIVATABLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf272c01b5a3cb656e373301223b1eecfa04b2e050ef362244ef798e7d855c74eb">EDITABLE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Align</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411ae8225b11842409df543692aebed34fd1">FILL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411ab078ffd28db767c502ac367053f6e0ac">START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411ab1a326c06d88bf042f73d70f50197905">END</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411ac397289ee45877be0cd49811fe245b4e">CENTER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411a385881ed58577143e69edf478122d179">BASELINE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ArrowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782a</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aafbaedde498cdead4f2780217646e9ba1">UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aac4e0e4e3118472beeb2ae75827450f1f">DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aa684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aa21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeleteType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3a</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aadb8615d2de129806499e1c0b9ed16f9f">CHARS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aa82b25208e9e6a9c9e0f60c898d6b142e">WORD_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aac92e63983e5471b830aabea602fd2360">WORDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aad7c369998a9d28efa02e40615f5ad89e">DISPLAY_LINES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aabc6d36ef4c74a07b9576f95dc25faab8">DISPLAY_LINE_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aaa4c18f4c349daba2391f81fe7cbcca44">PARAGRAPH_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aad473f89caa2621cbac56ade8371d45fe">PARAGRAPHS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aa52f1e315372b38db1b8f4e3666c4f721">WHITESPACE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DirectionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7bac61a259280534b88be3a4869b6327f31">TAB_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7bafdf9020b004ae74f8b1ac6142e1b9ab4">TAB_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7bafbaedde498cdead4f2780217646e9ba1">UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7bac4e0e4e3118472beeb2ae75827450f1f">DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7ba684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7ba21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconSize</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4dda2576308ca7af1688ff7b7c091e8c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4dda2576308ca7af1688ff7b7c091e8cace138ec8d8aadff7e1db3c13b62c3d16">INHERIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4dda2576308ca7af1688ff7b7c091e8ca1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4dda2576308ca7af1688ff7b7c091e8ca71726adf0ff60cd03eaf3c515883eeb8">LARGE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3d</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabfcae0b9b0cf2aab01ee96352668d3dab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabfcae0b9b0cf2aab01ee96352668d3da3e35661f311d49f66eccb1bc2ea4de46">LTR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabfcae0b9b0cf2aab01ee96352668d3daefe01da942ed68b700b911f5a1b131a7">RTL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Justification</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549be</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5ba228222f6b4bfde1d59eb7134549bea684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5ba228222f6b4bfde1d59eb7134549bea21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5ba228222f6b4bfde1d59eb7134549beac397289ee45877be0cd49811fe245b4e">CENTER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5ba228222f6b4bfde1d59eb7134549beae8225b11842409df543692aebed34fd1">FILL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8698319d7eb64b1f297b04e4e5c7809b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809ba551b723eafd6a31d444fcb2f5920fbd3">INFO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809ba059e9861e0400dfbe05c98a841f3f96b">WARNING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809ba2799482497469e61e6ce62588cc7b71f">QUESTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809babb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809ba03570470bad94692ce93e32700d2e1cb">OTHER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MovementStep</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdec</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca2b04ff879957cf72ee0d8d6ed4d11469">LOGICAL_POSITIONS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca0045267457114c8ef2f5cf286d6080de">VISUAL_POSITIONS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecac92e63983e5471b830aabea602fd2360">WORDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecad7c369998a9d28efa02e40615f5ad89e">DISPLAY_LINES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecabc6d36ef4c74a07b9576f95dc25faab8">DISPLAY_LINE_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecad473f89caa2621cbac56ade8371d45fe">PARAGRAPHS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecaa4c18f4c349daba2391f81fe7cbcca44">PARAGRAPH_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca9306c07017fd316befdc82b5cd16652f">PAGES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca7f1899ac72381f48fe7843abbdb5d33b">BUFFER_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca2ae89707d4f986b0965f9b8a2aaf2bff">HORIZONTAL_PAGES</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Orientation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga84179a467b0ed4f61b4e325eb09b0b1c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga84179a467b0ed4f61b4e325eb09b0b1ca86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga84179a467b0ed4f61b4e325eb09b0b1ca3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Overflow</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga30e9efcbf3fddf39c7fed0fafc502d4c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga30e9efcbf3fddf39c7fed0fafc502d4ca510222cdd4bc0b765486ba35b2775e54">VISIBLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga30e9efcbf3fddf39c7fed0fafc502d4ca347e628a8f72626a0611ef842fe9d304">HIDDEN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CornerType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796a</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb771ef9e379831be8ae9711cf01796aa747385047b85ae751f83adb36435a3c1">TOP_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb771ef9e379831be8ae9711cf01796aa8d81ac82421d1b03da58fccb9174892e">BOTTOM_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb771ef9e379831be8ae9711cf01796aa901d87dedda8db733f5e6d34c4eb5fe0">TOP_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb771ef9e379831be8ae9711cf01796aa341b72aaab1308a3e6667af1e52f5def">BOTTOM_RIGHT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PackType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafd31781c802e2887a7898b442780662d</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafd31781c802e2887a7898b442780662dab078ffd28db767c502ac367053f6e0ac">START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafd31781c802e2887a7898b442780662dab1a326c06d88bf042f73d70f50197905">END</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PickFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafad5b9976ce273bc6632075e4fd3d433</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafad5b9976ce273bc6632075e4fd3d433a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafad5b9976ce273bc6632075e4fd3d433a61441d6c841da240b514b8147c6570d3">INSENSITIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafad5b9976ce273bc6632075e4fd3d433a8846371fcb1b2afc144e36f48cacd7fc">NON_TARGETABLE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PolicyType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb7ebcc442f2bdbeca2bf7436c18ffd9af3fc827ade4b968e50406496907ef962">ALWAYS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb7ebcc442f2bdbeca2bf7436c18ffd9a008f6cdd0c190839e9885cf9f9e2a652">AUTOMATIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb7ebcc442f2bdbeca2bf7436c18ffd9a443475558f0168dff92ecde26b98ae5a">NEVER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb7ebcc442f2bdbeca2bf7436c18ffd9a3932d629fb5e2be9d09b3a4485b3cc9d">EXTERNAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PositionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3568edcd04af4a2cbd1eb0195513fe6ba684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3568edcd04af4a2cbd1eb0195513fe6ba21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3568edcd04af4a2cbd1eb0195513fe6ba6705777b712ee811e76fb07162081d63">TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3568edcd04af4a2cbd1eb0195513fe6ba1fabf63de5c96c78e2a40805bcdeb73b">BOTTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RevealerTransitionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ac6cd088ce1247a63b5cb265e4ff547f6">CROSSFADE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a152f1036c0739805670d9a146ba55ea4">SLIDE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ad8d6276cf556fd04c990921931f7c8f9">SLIDE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a1fed7c44a85162ae1a819234e4e0b62e">SLIDE_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a543dfeb28adfe9a119ec87df86a2f02d">SLIDE_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ae18cffb65bd85b7fd97b7094752a2556">SWING_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a3f455c00c836c3aa75ae7ba898d8ff81">SWING_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ad11f823dd2cb07649a0372f1c1bdabf1">SWING_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a4af14ab67148d94d0a77297fd18346ff">SWING_DOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a40222410c7347ec4b6bcaba3bcb21f3b">JUMP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a77848feb272e734f57ef2a467da168bb">STEP_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a2562da1964d4881ee13b4d332169b839">STEP_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a84855ab8774fc617d92c0d3bfa2bc4b7">PAGE_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a59a864aecb8511033ba3029c850b4d5b">PAGE_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a06fb2775ee1c7667a924e617c216efca">STEP_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a47f518d69b15443f1b518a0ee42a8de4">STEP_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ae791d936f894ce58dd18bf603edcb9b4">PAGE_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ae9a23c5ce3d34b40123d65ca14b2e88f">PAGE_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a9df2c203ab55cdb565d1d0736191bc7e">STEP_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ae360df38493d65079ed1e1e0a1616bb1">STEP_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a753c2d32899531224d6da811b617b74b">PAGE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a34691b980cc62b33b67783f5e32485cc">PAGE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ab078ffd28db767c502ac367053f6e0ac">START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ab1a326c06d88bf042f73d70f50197905">END</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3e58167cfed0be4c87474c3bdca80d78ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3e58167cfed0be4c87474c3bdca80d78a0679273e201afd0bf57af3961f8a23b8">SINGLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3e58167cfed0be4c87474c3bdca80d78a81bc07b0b58ddb233dbccd42a7a14d46">BROWSE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3e58167cfed0be4c87474c3bdca80d78a65f405ff27981239b3c296a487786b85">MULTIPLE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StackTransitionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ac6cd088ce1247a63b5cb265e4ff547f6">CROSSFADE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a152f1036c0739805670d9a146ba55ea4">SLIDE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ad8d6276cf556fd04c990921931f7c8f9">SLIDE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a1fed7c44a85162ae1a819234e4e0b62e">SLIDE_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a543dfeb28adfe9a119ec87df86a2f02d">SLIDE_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ac78dee3132b64a1852d92bf3d84d2cb4">SLIDE_LEFT_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a4f9e0cb595730fe558f0c29b7fcc39a6">SLIDE_UP_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290aac74928ae0582a6d2d496afad5c6dd74">OVER_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290afd0dc80f690d5b34b0badb73d739fa6a">OVER_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ae9e7be80d5d140394b2002a8810c7f18">OVER_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ac84f7e7ebb49f99c2dcd47f6942fa4a8">OVER_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a1fcc712a4313b1a464bc27c81e094b03">UNDER_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290aa9efb04a22194d60299a977370f5b971">UNDER_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a73ac647b7db2fbe77537a32e20a52bd8">UNDER_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290abc0ea4a83b79393c1c4d41cb9a44b54c">UNDER_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ab82759f118cbdd6a9a255e8bf6df3562">OVER_UP_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a47aed8f242fd6993ebefdfa05e298a64">OVER_DOWN_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ad2e0766420009569403f3c44df92b73a">OVER_LEFT_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ac5347fdbdfd30e0c4590ac8f461278db">OVER_RIGHT_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a5d167d235f5a8880ec432fc13206106f">ROTATE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a17ac59a0d27b38c77bd02f3bcefd5728">ROTATE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290aab98ef36772da284b27836063dab7f20">ROTATE_LEFT_RIGHT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WrapMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad4b21987a45f87bbdae74d63d92e543b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad4b21987a45f87bbdae74d63d92e543bab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad4b21987a45f87bbdae74d63d92e543ba027acd3aa6b1dd7f26119d3cf0f9a063">CHAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad4b21987a45f87bbdae74d63d92e543babdde29e3c0fe7b687d69a696bbaf71ac">WORD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad4b21987a45f87bbdae74d63d92e543ba747e9563254d052b55ceef37bcf8de50">WORD_CHAR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NaturalWrapMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabe369d1ed66fb3387e34fe8dbbcd62f5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gabe369d1ed66fb3387e34fe8dbbcd62f5ace138ec8d8aadff7e1db3c13b62c3d16">INHERIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gabe369d1ed66fb3387e34fe8dbbcd62f5ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gabe369d1ed66fb3387e34fe8dbbcd62f5abdde29e3c0fe7b687d69a696bbaf71ac">WORD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6052510d27fae00eed4aaa3640ff9fbe</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6052510d27fae00eed4aaa3640ff9fbea83ec681a20197326c163ea3b39ef7c32">ASCENDING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6052510d27fae00eed4aaa3640ff9fbeacff818f0ae4cef845577e39283886a53">DESCENDING</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Ordering</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaabda831565bf9011ccfdd6dd8579966b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabda831565bf9011ccfdd6dd8579966ba24090feb3da5cdc786897cfe709a9f2b">SMALLER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabda831565bf9011ccfdd6dd8579966ba969f331a87d8c958473c32b4d0e61a44">EQUAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabda831565bf9011ccfdd6dd8579966ba0b05bcaf8d36c43568ed40ff4098bc76">LARGER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PageOrientation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bf</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga466045b8876a149482ab0034c53302bfa7dbb530820039c270faf100d3f6ff027">PORTRAIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga466045b8876a149482ab0034c53302bfa20287e25ffb71f92af9803e4c3a53928">LANDSCAPE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga466045b8876a149482ab0034c53302bfa77ef580b02607c3670912ae096a2d7e9">REVERSE_PORTRAIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga466045b8876a149482ab0034c53302bfa08856dc7ac138f20776636dfbfe7b877">REVERSE_LANDSCAPE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SensitivityType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baa</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga20c60e5d15f0bd720bdbd72567414baaae1f2d5134ed2543d38a0de9751cf75d9">AUTO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga20c60e5d15f0bd720bdbd72567414baaa90651ebea9a35ec4e018c8157492e17c">ON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga20c60e5d15f0bd720bdbd72567414baaa88559a0cfd8250c9d65970cc145c92d4">OFF</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SizeRequestMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga35be6d001d814dbf37bd405433b06cf5a5b0843da6f9c935945dfa2414d3bb0fd">HEIGHT_FOR_WIDTH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga35be6d001d814dbf37bd405433b06cf5af7c9ec2e2edbcefb4f54cd4a94ddf47d">WIDTH_FOR_HEIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga35be6d001d814dbf37bd405433b06cf5a7948d919713bdd26caa8fa84d86d2d81">CONSTANT_SIZE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a18ff74f43da410c5529f7d6fca84f115">ACTIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a36c1a4573b5a639d07fe3a483d525a60">PRELIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8ac841881b7f65d9e69aa9c932ca4427c8">SELECTED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a61441d6c841da240b514b8147c6570d3">INSENSITIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a311b0dffee5d76ae9d32401832da100b">INCONSISTENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a3bccbab2a35cb78388a0f4a8e2003b07">FOCUSED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a212ce5af0d9ebd4ecdf6defe7c982882">BACKDROP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a7933faaed3f6cab7068a04a891e42f68">DIR_LTR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a580fdcf2015437e27c075ac66e9a2bda">DIR_RTL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a58c0a0e97e6d2f615bc264c2775fda44">LINK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8aa6ec08e871b6a4151dc143082d826cd2">VISITED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a758f9c8c8110e53f8c8e0c790f855560">CHECKED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8acede43a7d12021fb24c8bb0d337b3e60">DROP_ACTIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a793d33a91df9b60577fbf16c30b699cf">FOCUS_VISIBLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a9062ef80ed5425408ded0095aff2c1bc">FOCUS_WITHIN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputPurpose</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a1af05990625447458f0ca2af23f9c94d">FREE_FORM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a002101f8725e5c78d9f30d87f3fa4c87">ALPHA</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6af9be5b7d870f8c68a8f1de3ef940bf31">DIGITS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a34f55eca38e0605a84f169ff61a2a396">NUMBER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6af9dd946cc89c1f3b41a0edbe0f36931d">PHONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6ae6b391a8d2c4d45902a23a8b6585703d">URL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a61a649a33f2869e5e35fbb7aff3a80d9">EMAIL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6aad32e604e17467fc435538334fbddf3e">NAME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a319f4d26e3c536b5dd871bb2c52e3178">PASSWORD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6acdbc895d08b5d92db04174533a8548f7">PIN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a6c7748bd0ad3fbdff996e81581ad64d6">TERMINAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputHints</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a697c7b3f271fd8e9c63dc6ca6004ba2a">SPELLCHECK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5ac888b8aa14a7ed05b98140c68478f7ce">NO_SPELLCHECK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a6382f1777eef31b47211c79be0197f58">WORD_COMPLETION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a13740c53e0080fab7e5d80ac3cb5d6c7">LOWERCASE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a652c41eba2c45879dcde99d946f0f25a">UPPERCASE_CHARS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a23cfa62652f3af4fdf047804514c2b59">UPPERCASE_WORDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a7eecb826f2b77dfcdd2eabe153f154bf">UPPERCASE_SENTENCES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a80689142af8cf2bd7d104bc7904e5207">INHIBIT_OSK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5ab035df10136becb427a75fd00e57acde">VERTICAL_WRITING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a3d5a8e602b2db6ec81688075668247f5">EMOJI</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a1320d041756fab0be4b3024403d9942e">NO_EMOJI</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a84c6d22cfdf3772e66b07bde636e0571">PRIVATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BaselinePosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga00fac330ed16cf77e1f1e2744d6dcdf2a6705777b712ee811e76fb07162081d63">TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga00fac330ed16cf77e1f1e2744d6dcdf2ac397289ee45877be0cd49811fe245b4e">CENTER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga00fac330ed16cf77e1f1e2744d6dcdf2a1fabf63de5c96c78e2a40805bcdeb73b">BOTTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShortcutScope</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga129a7769d1432f63cf004a29387d5172</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga129a7769d1432f63cf004a29387d5172a54b4c4075463b2e02cd69f5cd139b5b2">LOCAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga129a7769d1432f63cf004a29387d5172af59a25f2594f469f0bfccad7f8f13744">MANAGED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga129a7769d1432f63cf004a29387d5172a6eecfba72d12922ee1dead07a0ef3334">GLOBAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContentFit</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4b947ccb193a81c9246f8c6205930606</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4b947ccb193a81c9246f8c6205930606ae8225b11842409df543692aebed34fd1">FILL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4b947ccb193a81c9246f8c6205930606a6c8c93b0cd657e2fd400f2c61acc6f42">CONTAIN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4b947ccb193a81c9246f8c6205930606a901b03ba0232d92accb3426e9acddfee">COVER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4b947ccb193a81c9246f8c6205930606abc583ad00af23561f79a0855821cda73">SCALE_DOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropagationPhase</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3f2ccdc42fe620ab04147029242efb57ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3f2ccdc42fe620ab04147029242efb57ab72f08e0732365cac9599b5c42157bf9">CAPTURE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3f2ccdc42fe620ab04147029242efb57a5e8d29c977ac65a782e594abae4bcbb2">BUBBLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3f2ccdc42fe620ab04147029242efb57a730950ad798a77ad508aa9e2564d013f">TARGET</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropagationLimit</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad9c2c418dcd294fb6a3b09edc34dd0f5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad9c2c418dcd294fb6a3b09edc34dd0f5ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad9c2c418dcd294fb6a3b09edc34dd0f5a8e83da138016212adcc854f55d4bac1c">SAME_NATIVE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventSequenceState</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac6cd8c73d758289d36ce3ead17b42b8eab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac6cd8c73d758289d36ce3ead17b42b8eaae96222dd53eeb49ff325d44bf84898b">CLAIMED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac6cd8c73d758289d36ce3ead17b42b8ea66d5e0b0ce726b4aeb4ddf6c25b6c12b">DENIED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PanDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccf</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga69b6d95718a927fa162896019abf6ccfa684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga69b6d95718a927fa162896019abf6ccfa21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga69b6d95718a927fa162896019abf6ccfafbaedde498cdead4f2780217646e9ba1">UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga69b6d95718a927fa162896019abf6ccfac4e0e4e3118472beeb2ae75827450f1f">DOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconLookupFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6d0c2193613cfb97ab313746a5bacaa2a68f736522b9cec790ffac6173a7fd890">FORCE_REGULAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6d0c2193613cfb97ab313746a5bacaa2a7461f0e2fd5cb759c2b9f90199d09c04">FORCE_SYMBOLIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6d0c2193613cfb97ab313746a5bacaa2ac88a7ff977d4250f490213c08fb1d8e8">PRELOAD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ButtonsType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094ab</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094abab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094abae0aa021e21dddbd6d8cecec71e9cf564">OK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094aba7286293c9125ac7d7bace94c190bc16d">CLOSE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094aba2027c027133e22c8929e2874dc44dd36">CANCEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094abaa8a862c880ca436e818ab6fba32e8f82">YES_NO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094abacb1315790b542732dedb0c77e73d5d68">OK_CANCEL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadActionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8c0adb8db3023099859105acf38d056b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8c0adb8db3023099859105acf38d056ba57b35198356d373bcd2a6e08abcb3795">BUTTON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8c0adb8db3023099859105acf38d056bae69b8a2544417fb71e2767e95d7ac8f3">RING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8c0adb8db3023099859105acf38d056ba6989032db1002ec3fb0b2de2c970f184">STRIP</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Unit</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fb</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9cdd3adb4017a5c706e205aa914ba6fbab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9cdd3adb4017a5c706e205aa914ba6fba70b71cabeeaf8c2bf473c896d5442ddb">POINTS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9cdd3adb4017a5c706e205aa914ba6fba30a479d5d88158a7f4248944ccbf72b0">INCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9cdd3adb4017a5c706e205aa914ba6fbaad05f78187c942f9dd521605fa81f1ba">MM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintStatus</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a91d26e4b2b105c74655093c9becd30b7">INITIAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2abd6a3a60251e4e52cdc9c393f33cbe10">PREPARING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a0276249b1bed372c591ca9b9ba0427c5">GENERATING_DATA</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2abb06c7633e3f218d4bdaa98908f4ac47">SENDING_DATA</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2ac69f06e1a9b016d133907b4e5f5864d2">PENDING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2aa93e92d3ca62e31700ec784e8b811d25">PENDING_ISSUE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a80740a1b51505a3f7697e6c4e532ba81">PRINTING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a2c616b2713e2e0aed04b4c4752c88133">FINISHED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a9f8764895271c8ac1f624461c218b3bb">FINISHED_ABORTED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintDuplex</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga50af48ce5ffc122b50924230939b78e3abc424b28fbff73745ea330d848bcc668">SIMPLEX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga50af48ce5ffc122b50924230939b78e3a86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga50af48ce5ffc122b50924230939b78e3a3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintQuality</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gab282abd83fff59a70ddba9e26cd30e04a41bc94cbd8eebea13ce0491b2ac11b88">LOW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gab282abd83fff59a70ddba9e26cd30e04a1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gab282abd83fff59a70ddba9e26cd30e04ab89de3b4b81c4facfac906edf29aec8c">HIGH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gab282abd83fff59a70ddba9e26cd30e04a521019040a0f4f7773357aa6bc22180b">DRAFT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintPages</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga003abcb0f8711428f85e3c54c68ee25ea5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga003abcb0f8711428f85e3c54c68ee25eaa2770969c827f0f2910f6179418462df">CURRENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga003abcb0f8711428f85e3c54c68ee25eaa38e66ffb7ec3fbbd28bcbedeec0cd7d">RANGES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga003abcb0f8711428f85e3c54c68ee25ea0a2dba942c08df9fd12a10acc7f19a78">SELECTION</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PageSet</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26726525983cb55ec0633b7485143cf3a5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26726525983cb55ec0633b7485143cf3a6634c67f28ba9a80efe941b9519aa106">EVEN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26726525983cb55ec0633b7485143cf3a57a1355d5527355458c7cc08ba70bf94">ODD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NumberUpLayout</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9adeabc6f363f5f7395989ec5ecba971ba">LEFT_TO_RIGHT_TOP_TO_BOTTOM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9a1c8e0cb420bc1387e349ac7c00f6b65d">LEFT_TO_RIGHT_BOTTOM_TO_TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9a18b01b26be272743d5a8275fb910359b">RIGHT_TO_LEFT_TOP_TO_BOTTOM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9aa2626d64408fd37e3535313806ad24b9">RIGHT_TO_LEFT_BOTTOM_TO_TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9ad0d32dc8040f9efbea1641c2009c7bdd">TOP_TO_BOTTOM_LEFT_TO_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9adc300b18229aea7bbb12555ee05faabc">TOP_TO_BOTTOM_RIGHT_TO_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9a0ba1f2ebdd474598941ec0fef2fa24e6">BOTTOM_TO_TOP_LEFT_TO_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9a3443c6090746c10ac90eca0b4d6f3df1">BOTTOM_TO_TOP_RIGHT_TO_LEFT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShortcutType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02abf6ceeb63dd0c59cf68f18bb85d62b2d">ACCELERATOR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a115c8f01be400a85bf6913ce675e4055">GESTURE_PINCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a3fbc2b2c789ff4e8a1703d02fdca0e99">GESTURE_STRETCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02abf2a7916e04b8f2311eb7fe9d7b0bdb4">GESTURE_ROTATE_CLOCKWISE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a42517f7f21ed422a3ecd689f0917ded8">GESTURE_ROTATE_COUNTERCLOCKWISE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a39186febfd7afaab988bcf9b76c0a38c">GESTURE_TWO_FINGER_SWIPE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02ad33abe7a449cf860a905f6baa79ef7f1">GESTURE_TWO_FINGER_SWIPE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a18ab6eb876a304305b5a09208567680c">GESTURE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a85c572f65fc91e3a2826e2815da6cc1b">GESTURE_SWIPE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a893e00ba8004a994f4b078c14ef38353">GESTURE_SWIPE_RIGHT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpinType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca2562da1964d4881ee13b4d332169b839">STEP_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca77848feb272e734f57ef2a467da168bb">STEP_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca59a864aecb8511033ba3029c850b4d5b">PAGE_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca84855ab8774fc617d92c0d3bfa2bc4b7">PAGE_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca710533dd879dd1202e5c73b27705bf02">HOME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575cab1a326c06d88bf042f73d70f50197905">END</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca5123cb514ff95a726922950380866e00">USER_DEFINED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextSearchFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga45bb48ef86a7da2535de94066029bc29a75847e4f17fade6de4955ebe9fe996c0">VISIBLE_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga45bb48ef86a7da2535de94066029bc29a3e380f5fb3b2482487df3ae4244de2d8">TEXT_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga45bb48ef86a7da2535de94066029bc29a2144545143b2322969cdd90988e5b4bc">CASE_INSENSITIVE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextWindowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a14dc79e11f9bdd15c996c5755c7cef4b">WIDGET</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a61a96ffcb251bb9bf0abf8fec19d0ea8">TEXT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a6705777b712ee811e76fb07162081d63">TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a1fabf63de5c96c78e2a40805bcdeb73b">BOTTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintCapabilities</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcb</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbafab1b9baa2e24c2792a93f0d2780df40">PAGE_SET</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbaf02148c811fd8c3232b840ef6a2390c3">COPIES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbadcb8f1b0c17da8a5a259440bcbe46c92">COLLATE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcba642e0b6684e6165e142c074f1cd8d55c">REVERSE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcba127ea1d20becc4dba06d9d152db0c2e5">SCALE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbab18c422d890777dc9b6160603065652c">GENERATE_PDF</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbac281a9c7735967492a9d79018db2da50">GENERATE_PS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcba16146de8c60e5b0d74bf6d2a78d4f576">PREVIEW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcba8c1247ebc830ae5162b0bb09bedc33ad">NUMBER_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbaeff7a10f8dbd4e022753fbec33d82d50">NUMBER_UP_LAYOUT</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_gtkmm_internals</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a28579143b737d7c7248e5250a7571d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>manage</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a753d0ddca83bd0d0decdfdcd1e93076a</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>make_managed</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a5991590fc93229c31fea0fbbb081e0e5</anchor>
      <arglist>(T_Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga875c4250a627fe2fb6106c62a33fe505</anchor>
      <arglist>(Application::InhibitFlags lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafa16bc517d0d1ad3fc195f51aa90fae8</anchor>
      <arglist>(Application::InhibitFlags lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga92983bca7fb11ee943692f541a0ec7d1</anchor>
      <arglist>(Application::InhibitFlags lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf3e6f5c5bf529b0ad18bfbac48333cb5</anchor>
      <arglist>(Application::InhibitFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga856e61c5a1f55ab30c8bbce51660b15a</anchor>
      <arglist>(Application::InhibitFlags &amp;lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac4c4e76300e78ae5e7c28311fb365351</anchor>
      <arglist>(Application::InhibitFlags &amp;lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8ae7de71ac9a5758fc505c3d07bd1e18</anchor>
      <arglist>(Application::InhibitFlags &amp;lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga95ae2f1836dd939955d64dfda0734032</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga347757f95f45cafb39eff727d14b22fa</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga55d02129ec54aed65c659d1ef73261e5</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5afd3653c32defe9fc0c788ba865ed0d</anchor>
      <arglist>(CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1c2c79ca5b77d866e386bc29560ba66c</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga73c38048d39ad525c36ac18208c0b5d3</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac60535e95befe7132bc7a2a29ebbc2ce</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaaa6501f8f2eaf5dcbc6568182e4db1cb</anchor>
      <arglist>(PickFlags lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5a25b8496b54fdf1be8b53744fa07705</anchor>
      <arglist>(PickFlags lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae8d5c4c0ea9d73770daf755ef1698b34</anchor>
      <arglist>(PickFlags lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga93619bc87aa79a64e1acb7ecdaa37ce8</anchor>
      <arglist>(PickFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1ad05815b7b0a1c6ae470ff9e7cfcb4a</anchor>
      <arglist>(PickFlags &amp;lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab1f15465723cc26786edd1758c897ce6</anchor>
      <arglist>(PickFlags &amp;lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaad54f16347f98449003b6c082a0e1c9d</anchor>
      <arglist>(PickFlags &amp;lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa430c6d062989989c878a4f1409376f8</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2cbf355a938231d81ffe937654fd4599</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadf47fccda70b738a0e6b6dde1dbb2ea9</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2c413d343ec83522dd8a42c6987fc0eb</anchor>
      <arglist>(StateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga37d7a45c257f87eb52d62dbae44255dc</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac2be079f075e21089339425f4c3f6a3b</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga46591e2dc834d86e904e55fa39e9f8e8</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6ba3c52bbebec0f97b48f59b9f84a3a8</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae5bb58fae80b9d328ffeabaeace1ded9</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9ed94f7dab42eacdb9de8713c965bad1</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacaad3c53584466e69c8f244367e977c6</anchor>
      <arglist>(InputHints flags)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae8ca47a4563565d1f33971ad81cfce4c</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1e13e262c767b57c682bc11f155adcef</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6b376ffed88b71a4f7ded7a0389775b3</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae7ea829519a6e36816975d706d28c20d</anchor>
      <arglist>(EventControllerScroll::Flags lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6a7d3ada355ccfcbb88ffe0faae8be74</anchor>
      <arglist>(EventControllerScroll::Flags lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga783bc5b23caa06399c05b08fe1f7d9c0</anchor>
      <arglist>(EventControllerScroll::Flags lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0e00fbc1eebc5f8466917b4e4d6b4a9e</anchor>
      <arglist>(EventControllerScroll::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0a39f09a86e787cf36c34cb60b918309</anchor>
      <arglist>(EventControllerScroll::Flags &amp;lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga99b91d2fd33022f2ddd35014906df230</anchor>
      <arglist>(EventControllerScroll::Flags &amp;lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf6e0fe4495135f75032fee829977d2b7</anchor>
      <arglist>(EventControllerScroll::Flags &amp;lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga17d56bfccc04152d0fd985677ab27f6b</anchor>
      <arglist>(FontChooser::Level lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga47538f01790b093ffdd7f7a0495052cb</anchor>
      <arglist>(FontChooser::Level lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabfb0febc07feade8dea08b6cad212487</anchor>
      <arglist>(FontChooser::Level lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5c0454d1a7b9bb1284b544f0241cf9f7</anchor>
      <arglist>(FontChooser::Level flags)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2d7eba0dcac65cd0ef4e85285b817971</anchor>
      <arglist>(FontChooser::Level &amp;lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab9c2aa4ba8acd72e37074672b0156a87</anchor>
      <arglist>(FontChooser::Level &amp;lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaff92c7c1ae1763b04ac0f657c5448787</anchor>
      <arglist>(FontChooser::Level &amp;lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae43eefc56e404acd25aa5088fa9eab40</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga396c2a966305f85991a6a63247438d4b</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5042237701d1e7cb3210bb46cdb41b87</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8f097ce72dcecce314f18303ed06bfac</anchor>
      <arglist>(IconLookupFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4151cc515d6ce6b6d99c5f9c7c3822f1</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9037d2bb6e8f05b4210a596cfd8fda9c</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab5daff6317f96dc6602f9d300d597eef</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga31614e6b23688da2ed69b5d54be41f22</anchor>
      <arglist>(PopoverMenu::Flags lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad97f2fb50c73f72acf8fc4edfe9acdd4</anchor>
      <arglist>(PopoverMenu::Flags lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf224fe29c8d933c24a65c847f5c8289d</anchor>
      <arglist>(PopoverMenu::Flags lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga93a63e64efde8eedf23a9b9214833a70</anchor>
      <arglist>(PopoverMenu::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5008341d6f22b1bb4d11ce2a719bb942</anchor>
      <arglist>(PopoverMenu::Flags &amp;lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf326fddc2ef880e2247563bcc65797af</anchor>
      <arglist>(PopoverMenu::Flags &amp;lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga086ba77dfbc90a3978eec543c88b470c</anchor>
      <arglist>(PopoverMenu::Flags &amp;lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>run_page_setup_dialog</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>acdc501a0e38df936b78003f61a4e37fd</anchor>
      <arglist>(Window &amp;parent, const Glib::RefPtr&lt; const PageSetup &gt; &amp;page_setup, const Glib::RefPtr&lt; const PrintSettings &gt; &amp;print_settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>run_page_setup_dialog</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a5165504babd346f7dfd33f8848e07a06</anchor>
      <arglist>(Window &amp;parent, const Glib::RefPtr&lt; const PrintSettings &gt; &amp;print_settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run_page_setup_dialog_async</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a42452c3f915addf41ed7b51b4e052d34</anchor>
      <arglist>(Window &amp;parent, const Glib::RefPtr&lt; const PageSetup &gt; &amp;page_setup, const Glib::RefPtr&lt; const PrintSettings &gt; &amp;print_settings, const SlotPrintSetupDone &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run_page_setup_dialog_async</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae717dafe63d99c1e26ecf66d0e20fd60</anchor>
      <arglist>(Window &amp;parent, const Glib::RefPtr&lt; const PrintSettings &gt; &amp;print_settings, const SlotPrintSetupDone &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga116156a171b8d20719ee7dc47f942c99</anchor>
      <arglist>(ShortcutAction::Flags lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad5b19f262633c8426cf67f7ad34976a8</anchor>
      <arglist>(ShortcutAction::Flags lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga646c2cd8b7618dae084c0f3902bdca33</anchor>
      <arglist>(ShortcutAction::Flags lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga78f36f85904d62d93bf8396b5f33ed71</anchor>
      <arglist>(ShortcutAction::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa97f29c1fe8dee76eb5f1656f9d1ab1d</anchor>
      <arglist>(ShortcutAction::Flags &amp;lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga92c6366033f6c92edc37647d3898087a</anchor>
      <arglist>(ShortcutAction::Flags &amp;lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga292c19f32a97c9fabe661f351d2d22e2</anchor>
      <arglist>(ShortcutAction::Flags &amp;lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3191dfe30a797835afb4138d1f1359b0</anchor>
      <arglist>(StyleContext::PrintFlags lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1d449e1491bef5c9d3532c75cab08833</anchor>
      <arglist>(StyleContext::PrintFlags lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacbc696fb3f40d1aa0ee6ec5b181bf3d3</anchor>
      <arglist>(StyleContext::PrintFlags lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaad383ec5fe6b4392daf278f44eadc720</anchor>
      <arglist>(StyleContext::PrintFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa6176d06dc766f6af96a53183d9dafd7</anchor>
      <arglist>(StyleContext::PrintFlags &amp;lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7e01c03812c836d742bd27a1256b7789</anchor>
      <arglist>(StyleContext::PrintFlags &amp;lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadf7b4e645e768344bb445dac5aff2937</anchor>
      <arglist>(StyleContext::PrintFlags &amp;lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga00496c69b32a8eddccf163fb11e00327</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7360481e7db3ee22b52891b45b801f89</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaac266d954271ea5fe49d534864f2d5f1</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0f9d38cf1bed3e028260e13b8fbc9870</anchor>
      <arglist>(TextSearchFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae0035cd1212a0d562b3c4dc774282b69</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad8778fcc2c2c67aa28abdec698207600</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3171b3210f43ed5468a094117b7c36eb</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf53b4964aa02b5891829410f45643239</anchor>
      <arglist>(TreeModel::Flags lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacfd11a91aae02011666bbf241447b791</anchor>
      <arglist>(TreeModel::Flags lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0dc3d66f8e6140430e416c2d16d1198d</anchor>
      <arglist>(TreeModel::Flags lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9ab0f14eb4d09fa1ec1ffe461d40a738</anchor>
      <arglist>(TreeModel::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2300bb8d3fecd3132c520e56f4bcd7ac</anchor>
      <arglist>(TreeModel::Flags &amp;lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga93887731186ac13c17d41c50f98e8cef</anchor>
      <arglist>(TreeModel::Flags &amp;lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7f69944a15758301c01cee2ec123b5ac</anchor>
      <arglist>(TreeModel::Flags &amp;lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaad61a9471f6ee6484f965ad54b5afb80</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga76b2f115d9c93812b98e55c298fa5a88</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga89e437a62c5057f51524d52555f83208</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga45759a0732ecd7ebcf69e83924465de5</anchor>
      <arglist>(PrintCapabilities flags)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaacc1cca7058c9611b24e6f631e07a4e2</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga828daae7b326f2fedde6b21401fb05fa</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae5d504a32337e05514b2fb747d61d058</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_A3</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a0d839d584fffab643302c626ddde1a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_A4</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8697827f471b189c608152681faba896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_A5</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a9bbe475f2cd466e1990ddf4e0b4d8e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_B5</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>aae11f067c17cf37a423f155a0d1a33a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_LETTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a00711ed67d3d355965209311f281a151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_EXECUTIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>afe39a20910b2541fb8406aa4b9b3ad53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_LEGAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8554a14efd109647e8356413a6e4eda5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gtk::Accelerator</name>
    <filename>namespaceGtk_1_1Accelerator.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>namespaceGtk_1_1Accelerator.html</anchorfile>
      <anchor>a86a556cc1d8c142e63964adf73dc524e</anchor>
      <arglist>(guint keyval, Gdk::ModifierType modifiers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>namespaceGtk_1_1Accelerator.html</anchorfile>
      <anchor>ace2510df1db5fe3e0e02d4d8a155cf00</anchor>
      <arglist>(const Glib::ustring &amp;accelerator, guint &amp;accelerator_key, Gdk::ModifierType &amp;accelerator_mods)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>name</name>
      <anchorfile>namespaceGtk_1_1Accelerator.html</anchorfile>
      <anchor>a48c9ab27c812cec90ac3bea4edac1733</anchor>
      <arglist>(guint accelerator_key, Gdk::ModifierType accelerator_mods)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>namespaceGtk_1_1Accelerator.html</anchorfile>
      <anchor>a12cae9e6505048e6329ba4fe26186b25</anchor>
      <arglist>(guint accelerator_key, Gdk::ModifierType accelerator_mods)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_default_mod_mask</name>
      <anchorfile>namespaceGtk_1_1Accelerator.html</anchorfile>
      <anchor>a0163a8f5a397dde118643a138e97319a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Containers</name>
    <title>Container Widgets</title>
    <filename>group__Containers.html</filename>
    <class kind="class">Gtk::ListViewText</class>
    <class kind="class">Gtk::AspectFrame</class>
    <class kind="class">Gtk::CenterBox</class>
    <class kind="class">Gtk::EmojiChooser</class>
    <class kind="class">Gtk::Expander</class>
    <class kind="class">Gtk::Fixed</class>
    <class kind="class">Gtk::FlowBox</class>
    <class kind="class">Gtk::FlowBoxChild</class>
    <class kind="class">Gtk::Frame</class>
    <class kind="class">Gtk::Grid</class>
    <class kind="class">Gtk::HeaderBar</class>
    <class kind="class">Gtk::ListBox</class>
    <class kind="class">Gtk::ListBoxRow</class>
    <class kind="class">Gtk::Notebook</class>
    <class kind="class">Gtk::Overlay</class>
    <class kind="class">Gtk::Paned</class>
    <class kind="class">Gtk::PopoverMenu</class>
    <class kind="class">Gtk::PopoverMenuBar</class>
    <class kind="class">Gtk::ScrolledWindow</class>
    <class kind="class">Gtk::Stack</class>
    <class kind="class">Gtk::TextView</class>
    <class kind="class">Gtk::TreeView</class>
    <class kind="class">Gtk::Viewport</class>
    <class kind="class">Gtk::WindowHandle</class>
  </compound>
  <compound kind="group">
    <name>Dialogs</name>
    <title>Dialogs</title>
    <filename>group__Dialogs.html</filename>
    <class kind="class">Gtk::AboutDialog</class>
    <class kind="class">Gtk::AppChooserDialog</class>
    <class kind="class">Gtk::Assistant</class>
    <class kind="class">Gtk::ColorChooserDialog</class>
    <class kind="class">Gtk::Dialog</class>
    <class kind="class">Gtk::FileChooserDialog</class>
    <class kind="class">Gtk::FontChooserDialog</class>
    <class kind="class">Gtk::FontChooserWidget</class>
    <class kind="class">Gtk::MessageDialog</class>
  </compound>
  <compound kind="group">
    <name>Gestures</name>
    <title>Event Controllers and Gestures</title>
    <filename>group__Gestures.html</filename>
    <class kind="class">Gtk::DragSource</class>
    <class kind="class">Gtk::DropControllerMotion</class>
    <class kind="class">Gtk::DropTarget</class>
    <class kind="class">Gtk::DropTargetAsync</class>
    <class kind="class">Gtk::EventController</class>
    <class kind="class">Gtk::EventControllerFocus</class>
    <class kind="class">Gtk::EventControllerKey</class>
    <class kind="class">Gtk::EventControllerLegacy</class>
    <class kind="class">Gtk::EventControllerMotion</class>
    <class kind="class">Gtk::EventControllerScroll</class>
    <class kind="class">Gtk::Gesture</class>
    <class kind="class">Gtk::GestureClick</class>
    <class kind="class">Gtk::GestureDrag</class>
    <class kind="class">Gtk::GestureLongPress</class>
    <class kind="class">Gtk::GesturePan</class>
    <class kind="class">Gtk::GestureRotate</class>
    <class kind="class">Gtk::GestureSingle</class>
    <class kind="class">Gtk::GestureStylus</class>
    <class kind="class">Gtk::GestureSwipe</class>
    <class kind="class">Gtk::GestureZoom</class>
    <class kind="class">Gtk::PadController</class>
    <class kind="class">Gtk::Shortcut</class>
    <class kind="class">Gtk::ShortcutAction</class>
    <class kind="class">Gtk::ShortcutController</class>
    <class kind="class">Gtk::ShortcutTrigger</class>
  </compound>
  <compound kind="group">
    <name>Menus</name>
    <title>Menu classes</title>
    <filename>group__Menus.html</filename>
    <class kind="class">Gtk::AccelKey</class>
    <class kind="class">Gtk::PopoverMenu</class>
    <class kind="class">Gtk::PopoverMenuBar</class>
  </compound>
  <compound kind="group">
    <name>Printing</name>
    <title>Printing</title>
    <filename>group__Printing.html</filename>
    <class kind="class">Gtk::PageSetup</class>
    <class kind="class">Gtk::PaperSize</class>
    <class kind="class">Gtk::PrintContext</class>
    <class kind="class">Gtk::PrintOperation</class>
    <class kind="class">Gtk::PrintOperationPreview</class>
    <class kind="class">Gtk::PrintSettings</class>
    <class kind="class">Gtk::PageSetupUnixDialog</class>
    <class kind="class">Gtk::Printer</class>
    <class kind="class">Gtk::PrintJob</class>
    <class kind="class">Gtk::PrintUnixDialog</class>
  </compound>
  <compound kind="group">
    <name>RecentFiles</name>
    <title>RecentFiles</title>
    <filename>group__RecentFiles.html</filename>
    <class kind="class">Gtk::RecentInfo</class>
    <class kind="class">Gtk::RecentManager</class>
  </compound>
  <compound kind="group">
    <name>TextView</name>
    <title>TextView Classes</title>
    <filename>group__TextView.html</filename>
    <class kind="class">Gtk::TextBuffer</class>
    <class kind="class">Gtk::TextChildAnchor</class>
    <class kind="class">Gtk::TextIterBase</class>
    <class kind="class">Gtk::TextIter</class>
    <class kind="class">Gtk::TextConstIter</class>
    <class kind="class">Gtk::TextMark</class>
    <class kind="class">Gtk::TextTag</class>
    <class kind="class">Gtk::TextTagTable</class>
    <class kind="class">Gtk::TextView</class>
  </compound>
  <compound kind="group">
    <name>TreeView</name>
    <title>TreeView Classes</title>
    <filename>group__TreeView.html</filename>
    <class kind="class">Gtk::ListViewText</class>
    <class kind="class">Gtk::TreeModelColumnRecord</class>
    <class kind="class">Gtk::TreeModelColumnBase</class>
    <class kind="class">Gtk::TreeModelColumn</class>
    <class kind="class">Gtk::CellRenderer</class>
    <class kind="class">Gtk::CellRendererAccel</class>
    <class kind="class">Gtk::CellRendererCombo</class>
    <class kind="class">Gtk::CellRendererPixbuf</class>
    <class kind="class">Gtk::CellRendererProgress</class>
    <class kind="class">Gtk::CellRendererSpin</class>
    <class kind="class">Gtk::CellRendererSpinner</class>
    <class kind="class">Gtk::CellRendererText</class>
    <class kind="class">Gtk::CellRendererToggle</class>
    <class kind="class">Gtk::ListStore</class>
    <class kind="class">Gtk::TreeDragDest</class>
    <class kind="class">Gtk::TreeDragSource</class>
    <class kind="class">Gtk::TreeIterBase</class>
    <class kind="class">Gtk::TreeIterBase2</class>
    <class kind="class">Gtk::TreeIterBase3</class>
    <class kind="class">Gtk::TreeIter</class>
    <class kind="class">Gtk::TreeConstRow</class>
    <class kind="class">Gtk::TreeRow</class>
    <class kind="class">Gtk::TreeNodeConstChildren</class>
    <class kind="class">Gtk::TreeNodeChildren</class>
    <class kind="class">Gtk::TreeModel</class>
    <class kind="class">Gtk::TreeModelFilter</class>
    <class kind="class">Gtk::TreeModelSort</class>
    <class kind="class">Gtk::TreePath</class>
    <class kind="class">Gtk::TreeRowReference</class>
    <class kind="class">Gtk::TreeSelection</class>
    <class kind="class">Gtk::TreeSortable</class>
    <class kind="class">Gtk::TreeStore</class>
    <class kind="class">Gtk::TreeView</class>
    <class kind="class">Gtk::TreeViewColumn</class>
  </compound>
  <compound kind="group">
    <name>Version</name>
    <title>Version</title>
    <filename>group__Version.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>GTKMM_MAJOR_VERSION</name>
      <anchorfile>group__Version.html</anchorfile>
      <anchor>gafa367c81e9a217e1a4d120dbfb728c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GTKMM_MINOR_VERSION</name>
      <anchorfile>group__Version.html</anchorfile>
      <anchor>ga37812ac9b5a7e3e8382ce1152f9c54bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GTKMM_MICRO_VERSION</name>
      <anchorfile>group__Version.html</anchorfile>
      <anchor>gac5207f9696a3415abb147921cc23768e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GTKMM_CHECK_VERSION</name>
      <anchorfile>group__Version.html</anchorfile>
      <anchor>ga19ae9504c923a3d6da88e3ae76651805</anchor>
      <arglist>(major, minor, micro)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Widgets</name>
    <title>Widgets</title>
    <filename>group__Widgets.html</filename>
    <class kind="class">Gtk::ListViewText</class>
    <class kind="class">Gtk::ActionBar</class>
    <class kind="class">Gtk::AppChooserButton</class>
    <class kind="class">Gtk::AppChooserWidget</class>
    <class kind="class">Gtk::AspectFrame</class>
    <class kind="class">Gtk::Button</class>
    <class kind="class">Gtk::Calendar</class>
    <class kind="class">Gtk::CellView</class>
    <class kind="class">Gtk::CenterBox</class>
    <class kind="class">Gtk::CheckButton</class>
    <class kind="class">Gtk::ColorButton</class>
    <class kind="class">Gtk::ColumnView</class>
    <class kind="class">Gtk::ComboBox</class>
    <class kind="class">Gtk::ComboBoxText</class>
    <class kind="class">Gtk::DragIcon</class>
    <class kind="class">Gtk::DrawingArea</class>
    <class kind="class">Gtk::DropDown</class>
    <class kind="class">Gtk::EditableLabel</class>
    <class kind="class">Gtk::EmojiChooser</class>
    <class kind="class">Gtk::Entry</class>
    <class kind="class">Gtk::Expander</class>
    <class kind="class">Gtk::FileChooserWidget</class>
    <class kind="class">Gtk::Fixed</class>
    <class kind="class">Gtk::FlowBox</class>
    <class kind="class">Gtk::FlowBoxChild</class>
    <class kind="class">Gtk::FontButton</class>
    <class kind="class">Gtk::FontChooserWidget</class>
    <class kind="class">Gtk::Frame</class>
    <class kind="class">Gtk::GLArea</class>
    <class kind="class">Gtk::Grid</class>
    <class kind="class">Gtk::GridView</class>
    <class kind="class">Gtk::IconView</class>
    <class kind="class">Gtk::Image</class>
    <class kind="class">Gtk::InfoBar</class>
    <class kind="class">Gtk::Inscription</class>
    <class kind="class">Gtk::Label</class>
    <class kind="class">Gtk::LevelBar</class>
    <class kind="class">Gtk::LinkButton</class>
    <class kind="class">Gtk::ListBox</class>
    <class kind="class">Gtk::ListBoxRow</class>
    <class kind="class">Gtk::ListView</class>
    <class kind="class">Gtk::LockButton</class>
    <class kind="class">Gtk::MediaControls</class>
    <class kind="class">Gtk::MenuButton</class>
    <class kind="class">Gtk::Notebook</class>
    <class kind="class">Gtk::Paned</class>
    <class kind="class">Gtk::PasswordEntry</class>
    <class kind="class">Gtk::Picture</class>
    <class kind="class">Gtk::Popover</class>
    <class kind="class">Gtk::PopoverMenu</class>
    <class kind="class">Gtk::PopoverMenuBar</class>
    <class kind="class">Gtk::ProgressBar</class>
    <class kind="class">Gtk::Range</class>
    <class kind="class">Gtk::Revealer</class>
    <class kind="class">Gtk::Scale</class>
    <class kind="class">Gtk::ScaleButton</class>
    <class kind="class">Gtk::Scrollbar</class>
    <class kind="class">Gtk::ScrolledWindow</class>
    <class kind="class">Gtk::SearchBar</class>
    <class kind="class">Gtk::SearchEntry</class>
    <class kind="class">Gtk::ShortcutLabel</class>
    <class kind="class">Gtk::ShortcutsGroup</class>
    <class kind="class">Gtk::ShortcutsSection</class>
    <class kind="class">Gtk::ShortcutsShortcut</class>
    <class kind="class">Gtk::ShortcutsWindow</class>
    <class kind="class">Gtk::SpinButton</class>
    <class kind="class">Gtk::Spinner</class>
    <class kind="class">Gtk::Stack</class>
    <class kind="class">Gtk::StackSidebar</class>
    <class kind="class">Gtk::StackSwitcher</class>
    <class kind="class">Gtk::Statusbar</class>
    <class kind="class">Gtk::Switch</class>
    <class kind="class">Gtk::Text</class>
    <class kind="class">Gtk::TextView</class>
    <class kind="class">Gtk::ToggleButton</class>
    <class kind="class">Gtk::TreeView</class>
    <class kind="class">Gtk::Video</class>
    <class kind="class">Gtk::Viewport</class>
    <class kind="class">Gtk::VolumeButton</class>
    <class kind="class">Gtk::Window</class>
    <class kind="class">Gtk::WindowControls</class>
  </compound>
  <compound kind="group">
    <name>gdkmmEnums</name>
    <title>gdkmm Enums and Flags</title>
    <filename>group__gdkmmEnums.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>InputSource</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95ca2ec2be318cc86a1224c0e9dcc71321e4">MOUSE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95cad3fa1aa45b9fe56e1fc1b558d8ed6678">PEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95caedda266cdb6345b9f6914cc2e7577475">KEYBOARD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95ca2d13f7e9bde0277e8a81eeb4569e8e33">TOUCHSCREEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95cab37023f260283a7a7f7ae79637f476d1">TOUCHPAD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95ca0eedd0c48ef32cb25dadcea6ee148e03">TRACKPOINT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa2b575499ce34e8b79386b2db0c3c95ca824aebf2c6d32530c206fc0c38c5db06">TABLET_PAD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Feature</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0ffe4a95d79a93bc0b649fdfd6ab3970</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0ffe4a95d79a93bc0b649fdfd6ab3970a57b35198356d373bcd2a6e08abcb3795">BUTTON</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0ffe4a95d79a93bc0b649fdfd6ab3970ae69b8a2544417fb71e2767e95d7ac8f3">RING</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0ffe4a95d79a93bc0b649fdfd6ab3970a6989032db1002ec3fb0b2de2c970f184">STRIP</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0a6469dddabc742695242fbf0ba62910</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910ad3fa1aa45b9fe56e1fc1b558d8ed6678">PEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a5727c5b09d265bc24423f126e89d6fd3">ERASER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a3a8c100f1870815a5863a675c2521c6f">BRUSH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910aebb4b61f7b8f6015b8e8461af1c0e5b2">PENCIL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a9fb056f19b33a724cd93c3ea7240511d">AIRBRUSH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910a2ec2be318cc86a1224c0e9dcc71321e4">MOUSE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a6469dddabc742695242fbf0ba62910acc66cf051fcfc1277ab42e77209361c5">LENS</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragCancelReason</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8c79041c84505c11dbb19b6dce7bcf15</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8c79041c84505c11dbb19b6dce7bcf15a25c048a9893a60bddb82dde516ea8d84">NO_TARGET</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8c79041c84505c11dbb19b6dce7bcf15adf21509f1aa29b63f30453c9d4568631">USER_CANCELLED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8c79041c84505c11dbb19b6dce7bcf15abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisFlags</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13ae00a27b055945bd9d2f0675b88d04994">DELTA_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a9eeb5da461f980d442766906f9aa5de7">DELTA_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a6753182d0065061a189bb834145e8cd1">PRESSURE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a1f25b7bafc96defe027e4745193048bf">XTILT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a400145fc5c4fc5f290cadae4df19206c">YTILT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a0f0dd2bcb848ba94248d660bada66b34">WHEEL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13ab06c2037eb7a58030a42212c8244d477">DISTANCE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13aa27939099e0fe4086159364fcf8d5f73">ROTATION</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1d57fbdd69ea913588b3fec3a438cd13a3c93f85078b290625b7c4db299979c4f">SLIDER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisUse</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7aa2e843feab94ef623fea888f07c28696">IGNORE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7ae00a27b055945bd9d2f0675b88d04994">DELTA_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a9eeb5da461f980d442766906f9aa5de7">DELTA_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a6753182d0065061a189bb834145e8cd1">PRESSURE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a1f25b7bafc96defe027e4745193048bf">XTILT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a400145fc5c4fc5f290cadae4df19206c">YTILT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a0f0dd2bcb848ba94248d660bada66b34">WHEEL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7ab06c2037eb7a58030a42212c8244d477">DISTANCE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7aa27939099e0fe4086159364fcf8d5f73">ROTATION</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7a3c93f85078b290625b7c4db299979c4f">SLIDER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaa3ef1fe9ccf3e0e884578dba5a63feb7af447f5c03508de4d88e340390ba7c78f">LAST</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CrossingMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga51381e098e2f4c0e9d1187af00212412</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a8695c57e30e957161af26fe52d8a5826">GRAB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a6def5f6325c94e8ebae23c0757362dd5">UNGRAB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412afb246063db6ad5f2148a30a649de8a3f">GTK_GRAB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a2f6c3f8ee99f1a460eab9de142e38146">GTK_UNGRAB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412ad20139b302c5229b353275e78827dbc5">STATE_CHANGED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412aeeab9b6bf8a005872d294bfa0a20025a">TOUCH_BEGIN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a2eb2c753d4070138e8823f538643dbf6">TOUCH_END</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga51381e098e2f4c0e9d1187af00212412a6cf2b1c135683eaf11117baa7416939e">DEVICE_SWITCH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragAction</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a9506293be3b3dfe00ecdb83e764ca6ae8606d021da140a92c7eba8d9b8af84f">COPY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a9506293be3b3dfe00ecdb83e764ca6af7f93635f8e193a924ae4a691bb66b8f">MOVE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a9506293be3b3dfe00ecdb83e764ca6a58c0a0e97e6d2f615bc264c2775fda44">LINK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0a9506293be3b3dfe00ecdb83e764ca6a9fb730caf1b2d638a1dcf747f0d4207d">ASK</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Gravity</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1bb9235871d434d3c55411d8261b075e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075eaa284a013a2af9189373c41351330e0d3">NORTH_WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea2bf8f791695c70efa9c14e6f1c326403">NORTH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea9d1250c1be563879340211b990a1297c">NORTH_EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea83c9f5692281bf59471b13dfddb3af91">WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075eac397289ee45877be0cd49811fe245b4e">CENTER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea45ac78bf3d4882ac520f4e7fb08d55c5">EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075eaca96c91342c9c847a70b11d29692ec01">SOUTH_WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea96e44fa82e5a5263fb92337be422d3eb">SOUTH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075ea851c1766426329f3aed605f25b08f769">SOUTH_EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1bb9235871d434d3c55411d8261b075eafe6f99ef1ec99efbdc19a9786cf1facc">STATIC</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModifierType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a3dc6fbe44b971bbbf78cdcb09646d408">SHIFT_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97af7dcc1a4d3e22ea5e8da562eb49b15f5">LOCK_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a1cf7e318199a2c92f8998fa28ef1a6e0">CONTROL_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a92414f242e6176bd059cf5410938b2ad">ALT_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97ac3994cec3efa5171279e5a941af37764">BUTTON1_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a074d87d3f720a9f7b316cb5e1526f3ad">BUTTON2_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a504f9750ada3531a9ca6bc4578dbe7d1">BUTTON3_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97acba37d236d683d39cf041472780fea5c">BUTTON4_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97aaf16c465ab1273eb8d7a394f8205417d">BUTTON5_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97a0ba06af7c68462207bd81d90a75192c6">SUPER_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97acca48cb2202e1e95c77ef4e7d12db4bb">HYPER_MASK</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga734c2979005c87dbe51223a0128cdd97ae9487d0f509173eeee762a73f5098eea">META_MASK</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NotifyType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8af79bb27f97650fb2aa357f7a9b2cdd</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda221efe82951a165d1ac6ccfe5822cbe9">ANCESTOR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda05470727787aa721cf53222b5d3d40f3">VIRTUAL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda4f10abcd0aa37699b72ccf01540a8995">INFERIOR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cddabda8a2bc3f2b11a8313512f84864777f">NONLINEAR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda9f5eb4152a855b0d9f7c439ad215be51">NONLINEAR_VIRTUAL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga8af79bb27f97650fb2aa357f7a9b2cdda696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollDirection</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac2fa2e5a018b29f36448a06f8e8c123c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123cafbaedde498cdead4f2780217646e9ba1">UP</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123cac4e0e4e3118472beeb2ae75827450f1f">DOWN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123ca684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123ca21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac2fa2e5a018b29f36448a06f8e8c123ca464948bf38663fe1c4053f72402b63d5">SMOOTH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TouchpadGesturePhase</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga37bf51065a75849c3f52ecd16fa0bcfb</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga37bf51065a75849c3f52ecd16fa0bcfba19aad9f2fe3ce0023298ab83f7e75775">BEGIN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga37bf51065a75849c3f52ecd16fa0bcfba15a8022d0ed9cd9c2a2e756822703eb4">UPDATE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga37bf51065a75849c3f52ecd16fa0bcfbab1a326c06d88bf042f73d70f50197905">END</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga37bf51065a75849c3f52ecd16fa0bcfba2027c027133e22c8929e2874dc44dd36">CANCEL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollUnit</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2026cdbd2c3d074f815c59956121ac17</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2026cdbd2c3d074f815c59956121ac17a0f0dd2bcb848ba94248d660bada66b34">WHEEL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2026cdbd2c3d074f815c59956121ac17a3513fa1d151ed2fe37341d8e2d86dd8c">SURFACE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeyMatch</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab6a89da620d8a55904ecc19428d7c24d</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6a89da620d8a55904ecc19428d7c24dab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6a89da620d8a55904ecc19428d7c24dafba5cdfa4bcb408f641c743519a0fe19">PARTIAL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6a89da620d8a55904ecc19428d7c24dac41e056424136b6e8c4e23dd6326efa1">EXACT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac975d664f8bc7bf26f158b0a7b849fec</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca32f68a60cef40faedbc6af20298c1a1e">DELETE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaee39299a8dc632d0ad73f8f826b2fe77">MOTION_NOTIFY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca0f7a11c8b7f0f172e62d0a949ee95a0e">BUTTON_PRESS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaa2fad10c887dc8ab2209fbf83526bbef">BUTTON_RELEASE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaffa443ed64dc5ee08ddd51ec6b0cf09e">KEY_PRESS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecada0bda5f3ec88092f0b39c17981538c3">KEY_RELEASE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca80b451718a5f83315f226ec8f54de483">ENTER_NOTIFY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca1be27f71ede006112f44e9b7e16da20a">LEAVE_NOTIFY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca17cc3b816d656f42054012c5c455475a">FOCUS_CHANGE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaf58d89d32a18a217e21f2c59f0b8bb39">PROXIMITY_IN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca88d29d0a7552ab586db6f834ee1c14ce">PROXIMITY_OUT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecac3730b5d131423b74556cfddac8dfc15">DRAG_ENTER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca9ede34c76ce18a1ad6835595f959ca89">DRAG_LEAVE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca45f19d4463cc7655e9c5b20bffa755eb">DRAG_MOTION</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecad3eafa1ec913a20043e8fc9dc6a6e15f">DROP_START</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca71574275cadb387a5082e87e9dd60c25">SCROLL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca6826e58f68e7ec55b61c2a2468add503">GRAB_BROKEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaeeab9b6bf8a005872d294bfa0a20025a">TOUCH_BEGIN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecadd780601646655a5c0e3e4464c309197">TOUCH_UPDATE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca2eb2c753d4070138e8823f538643dbf6">TOUCH_END</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca0763d5920f131a203e1e14b5c207cb95">TOUCH_CANCEL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaa74f40ba0999a95dc53f48f846247c87">TOUCHPAD_SWIPE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca6a8d4ef383e8f6e2a71175e3e0bb0453">TOUCHPAD_PINCH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca9e6d267bac65c4e255e6693210c9a8a0">PAD_BUTTON_PRESS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecabb4c60feff09be64971fb8e6c8561a73">PAD_BUTTON_RELEASE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecabd37cf9748ee8b75defd3f3df67f61f9">PAD_RING</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca5404425a3b79bb69332c456e32491206">PAD_STRIP</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca7ef5950fdfe37f76c5bde6bb4aa0cdfb">PAD_GROUP_MODE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849feca30d2ca4ca1910d4b69484738acd2972f">TOUCHPAD_HOLD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gac975d664f8bc7bf26f158b0a7b849fecaa3bc56b2b6e0e093922989480b94eb79">EVENT_LAST</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Phase</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga125818db4a47441cbff5d7ac1e6b32ae</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aeab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aea8cb52f673f8ad1fcf65083766dc5cdd0">FLUSH_EVENTS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aeaf4db3526368e9c4c5d7662a2ddf1ed3e">BEFORE_PAINT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aea15a8022d0ed9cd9c2a2e756822703eb4">UPDATE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aea2a279a31181940fb63fec9ac5bee340c">LAYOUT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aeaa89a8fd9820d4256f0b101626b40e6a7">PAINT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aea93db2371537409185b622a85d119e56b">RESUME_EVENTS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga125818db4a47441cbff5d7ac1e6b32aeaaee3032279aba6a19340553059876d64">AFTER_PAINT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GLApi</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga768e103a9ff6ae6587583fe4dee496a9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga768e103a9ff6ae6587583fe4dee496a9aad70939237c6f0d638fe79884d91449b">GL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga768e103a9ff6ae6587583fe4dee496a9a7e384ec7ebbb4403911770ab90cd91a1">GLES</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GLAPI</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1e635b6f765f454867b578cd614179d7</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1e635b6f765f454867b578cd614179d7aad70939237c6f0d638fe79884d91449b">GL</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga1e635b6f765f454867b578cd614179d7a7e384ec7ebbb4403911770ab90cd91a1">GLES</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Format</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2505519670fd58d1214795f274b88b37</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a914156aad2dde2b1ec524926d9f53441">B8G8R8A8_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ab632c05a37824780d26ab99f86d193f3">A8R8G8B8_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a16a874a0151982ff1e3abb40b64aff96">R8G8B8A8_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ae215e7db2047be52fc29ac055c67dcc1">B8G8R8A8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37aca88c661141ffa0559f581536bd1da14">A8R8G8B8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a18787043100457c689d4fd80e956472c">R8G8B8A8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37adcbae61e336fdea6cb2525f86eba299c">A8B8G8R8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a11c8bb0f10ad92e8ffe73f7562091cde">R8G8B8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37aae081b4c5637222803ebd851bb41b061">B8G8R8</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ae518bff54f9bc2b4e4cdd4d498adc32e">R16G16B16</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37aec0557c724630af51601b6b9553a1f19">R16G16B16A16_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a7ddfaad28210b8515486eed653011613">R16G16B16A16</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a420c8ad2ed26c21719e5889928c0622c">R16G16B16_FLOAT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a4194f91b1405c776c29e9161b488ed5d">R16G16B16A16_FLOAT_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a8877c88854b09a122f3533a4de543629">R16G16B16A16_FLOAT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ad05d603c5884ae9ccc392513becba305">R32G32B32_FLOAT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37ad80ed99e3a91f8bdae117080e54ed6b4">R32G32B32A32_FLOAT_PREMULTIPLIED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a82bb90f92345314d9299d3e77d87f259">R32G32B32A32_FLOAT</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga2505519670fd58d1214795f274b88b37a154624ce7115582b5ef99fc299a98ea9">N_FORMATS</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SubpixelLayout</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaa</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa3a18a06c8e6bb8a5189c6b244bb7fdd1">HORIZONTAL_RGB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa256f347885f0a29b5415f61c8bb76370">HORIZONTAL_BGR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa4c6a73d4cf585f0fa3c8c727adcb50c7">VERTICAL_RGB</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga78ece0189217fd9faec8f631fd201aaaa5f16e0801f74527caab23e8e8c7b5c48">VERTICAL_BGR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga55708df3e7ed5e1456f9d975884cd4fd</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga55708df3e7ed5e1456f9d975884cd4fda9238f80dd89170c64c3c89a4acc918f5">STATIC_SIZE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga55708df3e7ed5e1456f9d975884cd4fda216d32c720a13b90d7ab9b54ab4594d8">STATIC_CONTENTS</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Colorspace</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga866d716154abb7f5be26bd36b3017d3f</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga866d716154abb7f5be26bd36b3017d3fa889574aebacda6bfd3e534e2b49b8028">RGB</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InterpType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715fac</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga709a35a3eb48c0b819041e3414715facaad135772d7cf93dd0ccf9d2474b34e6a">NEAREST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga709a35a3eb48c0b819041e3414715faca016ffba64e34f1856fc40a0ede6b66e1">TILES</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga709a35a3eb48c0b819041e3414715facaad6fddf718ad19b063e02fdd7e8e3e65">BILINEAR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga709a35a3eb48c0b819041e3414715faca74f67c0302d5888253dce0a5e2462ade">HYPER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Rotation</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7897684c9ab27bd9f71b03ffee002f3e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga7897684c9ab27bd9f71b03ffee002f3eab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga7897684c9ab27bd9f71b03ffee002f3eab437c6ed212434e8984c403374fe494c">COUNTERCLOCKWISE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga7897684c9ab27bd9f71b03ffee002f3ea192dbfc5bfa68184fd40e1587ad89c7e">UPSIDEDOWN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga7897684c9ab27bd9f71b03ffee002f3eacfe39a5621dfe382d2991f32c4ae08da">CLOCKWISE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnchorHints</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ac039a0e505a57a288c0de3334649f17b">FLIP_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ab9b8e06eeba4d9b150c39907b7261a34">FLIP_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940a11ae2bc51a61dd6c7432894cef1d770a">SLIDE_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940af3edc18ff2ffa6821c628e3e5d1d3fae">SLIDE_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ab08f3ab5981a38c93c339fdfb997e535">RESIZE_X</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ac37e45b95b79d3cf7b6c94f83ad24ea3">RESIZE_Y</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ac49dea25c71cd4eb6e7930cc908b347d">FLIP</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940ab4bece16f41bf005ca3fb5358b67b0c6">SLIDE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga5d54454df602915a5e1fb06202b8a940a1acac8984c2139895dee3e8aa928de57">RESIZE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Capabilities</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf0c363f57b016b94f165a85bfb5117fd</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdaa5f41c79d3f86121f0f658eba49128d5">POINTER</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fda2b40a1ea27beb450618885ec87f0ee15">TOUCH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdab14e30776b1ee1510c1b48b6be25932f">TABLET_STYLUS</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdaedda266cdb6345b9f6914cc2e7577475">KEYBOARD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fda824aebf2c6d32530c206fc0c38c5db06">TABLET_PAD</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fdae6ddd62144f3dc3b1add7843f1316e0c">ALL_POINTING</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gaf0c363f57b016b94f165a85bfb5117fda5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SurfaceEdge</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga02c48b5874f5d12617e3651c5d2c7acc</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7accaa284a013a2af9189373c41351330e0d3">NORTH_WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca2bf8f791695c70efa9c14e6f1c326403">NORTH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca9d1250c1be563879340211b990a1297c">NORTH_EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca83c9f5692281bf59471b13dfddb3af91">WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca45ac78bf3d4882ac520f4e7fb08d55c5">EAST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7accaca96c91342c9c847a70b11d29692ec01">SOUTH_WEST</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca96e44fa82e5a5263fb92337be422d3eb">SOUTH</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga02c48b5874f5d12617e3651c5d2c7acca851c1766426329f3aed605f25b08f769">SOUTH_EAST</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FullscreenMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab6878e8f24bf48a74f62573e4f252847</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6878e8f24bf48a74f62573e4f252847a367b346fde329f22e0d445b479150d18">ON_CURRENT_MONITOR</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="gab6878e8f24bf48a74f62573e4f252847a79366c1e28caf8addb3e013caf78b32e">ON_ALL_MONITORS</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0d3b45d7793abb591c907f7118a4a527</anchor>
      <arglist></arglist>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a43245b4788b59a22d5357a7146c06deb">MINIMIZED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a2f33d682f3a4e19c31ced6cb4fd022e3">MAXIMIZED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a27a5fc888f51915241ab4c1fa0ab8157">STICKY</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527ab89c3d897b196ffff1537331bc659a97">FULLSCREEN</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527ac2d92b81beeac9bfc89fb870c1a20767">ABOVE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527aa25949e21299b84cc33c4b00c740f08f">BELOW</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a3bccbab2a35cb78388a0f4a8e2003b07">FOCUSED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527afad40d340617c5a41352ba36b8cdf219">TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a41e923477bd417805a8e37436565fde6">TOP_TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527aca151aa31d56584f50860246123976f1">TOP_RESIZABLE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a380bf7e5f43cbc9cd7c7e183c83840d1">RIGHT_TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a1b9c6698ef54c0401a0d9ba4eca3b554">RIGHT_RESIZABLE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a127fb57a524b25f090d9e5ff4e626963">BOTTOM_TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527ad60b3e58244be682682e6c3e291b3a93">BOTTOM_RESIZABLE</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527ad7c3be858022df5235809a436baa6bea">LEFT_TILED</enumvalue>
      <enumvalue file="group__gdkmmEnums.html" anchor="ga0d3b45d7793abb591c907f7118a4a527a1185c10701e2693d96692a4d28407098">LEFT_RESIZABLE</enumvalue>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3cbd30b32e1a100503398960f4779dee</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae29cee1278e0927f29e5f13f2afcc648</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga63b86bb3648a3c6eaf3f80bc7c8c53d4</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac26bd9e081e5bbdddf758cd63abf6131</anchor>
      <arglist>(AxisFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9e7ad1d8a3aec3c19fbf39e06af12a9a</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga29e9f438ed6380cbd8582d3f243faa7e</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1daa317ebc41b3a6d9bed57ac14ced59</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf3255f44d3f9fccc900f8264b01ca632</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9c856185b733dd03866f1b8cd0d3d7f9</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae19f3b208343da290137dc38d9a32993</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa94621e5a8456f3db149323d793feeca</anchor>
      <arglist>(DragAction flags)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9d8233eb045b3578dc0ee65b71aa4894</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadc215548f83bedbace310af27f3b4f9f</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab1540afa3db90f4b5786796dbb4fc811</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaea5a44032c938042746ad236bd660cb2</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad82a54dfc3606ebaa71c019c0f529845</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0cdb70ae86f6833d530d8342cdea8f4f</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac4cedd5d88bb8edb2777e6bbccfd1b3b</anchor>
      <arglist>(ModifierType flags)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga99cb90b1d68978ab0c006a66382fc1a7</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0639d6eb9650f83675b5195a290a28db</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gacb25d39f0de616dbd29c3202e75c68bb</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaefb05faff52f0140eaaf0b166aa96f42</anchor>
      <arglist>(FrameClock::Phase lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa38c901ed5e96d1f4ca9bca5eb539c38</anchor>
      <arglist>(FrameClock::Phase lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadf5343521a39a1916e113eb89ba6104f</anchor>
      <arglist>(FrameClock::Phase lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab5c5800a4f6aedc0874e359a3e4f05f6</anchor>
      <arglist>(FrameClock::Phase flags)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae826f61ef52e4470d5f0d44f34565a0e</anchor>
      <arglist>(FrameClock::Phase &amp;lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa6edc364a7be4fa226fe4f8ec7815698</anchor>
      <arglist>(FrameClock::Phase &amp;lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClock::Phase &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga39532e0c2f91069345d3cac6d2a83333</anchor>
      <arglist>(FrameClock::Phase &amp;lhs, FrameClock::Phase rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga96907a0107c6fcab72c6b822037e386f</anchor>
      <arglist>(GLApi lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8671595b0425a82a448d3cf678dc3121</anchor>
      <arglist>(GLApi lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4de32b34cb38b208d6de806343f6ff33</anchor>
      <arglist>(GLApi lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab6eae8dc9a2115059d2a72488df6ce8e</anchor>
      <arglist>(GLApi flags)</arglist>
    </member>
    <member kind="function">
      <type>GLApi &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa24ac5f32f10d49af5caac2879998e87</anchor>
      <arglist>(GLApi &amp;lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4ee27581ab2606b8577c95b2bc1a14f0</anchor>
      <arglist>(GLApi &amp;lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLApi &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa3f6e41ffe73c2a2977e664b65d3f521</anchor>
      <arglist>(GLApi &amp;lhs, GLApi rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8fcc2e614977f0d70897c7653b780ef8</anchor>
      <arglist>(GLAPI lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad5f10dc100d5af19e63775741a76a3e3</anchor>
      <arglist>(GLAPI lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gabda89fc8e4943c48e5d21de3be255148</anchor>
      <arglist>(GLAPI lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga29e54a7b7c754df02f84ec0c253a5663</anchor>
      <arglist>(GLAPI flags)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga14c24d9cd7b9df7a65b45eff3ede39bd</anchor>
      <arglist>(GLAPI &amp;lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga429e148c0255afa70a8c32b823ec6657</anchor>
      <arglist>(GLAPI &amp;lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>GLAPI &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga05cae2e9d5eed9fd780b621afb8ee2ad</anchor>
      <arglist>(GLAPI &amp;lhs, GLAPI rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6038c04f7989f52dea77f6c81662942e</anchor>
      <arglist>(Paintable::Flags lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3e48c471aad77a8e525832fefabde43d</anchor>
      <arglist>(Paintable::Flags lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3207e7043d29277a836bf83684ea0772</anchor>
      <arglist>(Paintable::Flags lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae5cffc2f8c20d106bf90b014d001d05a</anchor>
      <arglist>(Paintable::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gabf80996ea77ae313a3d7158cc9965697</anchor>
      <arglist>(Paintable::Flags &amp;lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaca08ede4e8ac88423fd16c172febc0c5</anchor>
      <arglist>(Paintable::Flags &amp;lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Paintable::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga28df8945d7af0422b59d142db991831a</anchor>
      <arglist>(Paintable::Flags &amp;lhs, Paintable::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae484f290e9b5e65cc1477023326d5b7c</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaeab522e4886592c592b0a39cbd2c51ff</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5fba6499c1bef048e61300108ef1961d</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga93766424068809b36648ad03f603e14e</anchor>
      <arglist>(AnchorHints flags)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae52c4490f004aee155140e38957e1c2c</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7bd3cff4750fe4c7eecc247ec1880ecc</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6dc7a116b6e719d67628be53dd32ad42</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga58eadd1585b5797e7151aa39b4d9626b</anchor>
      <arglist>(Seat::Capabilities lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3e7f4acf83c5e58322385d1fdc1747e8</anchor>
      <arglist>(Seat::Capabilities lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga16cae175b197f98eecf69d49d4f9856a</anchor>
      <arglist>(Seat::Capabilities lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad09ae308290060e1f4a1f41ec2b9dd4e</anchor>
      <arglist>(Seat::Capabilities flags)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6951c17082764e8494cb520e72f9ec00</anchor>
      <arglist>(Seat::Capabilities &amp;lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaef910a915cad3e4ccc616b6fd51ae991</anchor>
      <arglist>(Seat::Capabilities &amp;lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Seat::Capabilities &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad1bd479f78f5d2d785bbdb536ce97c1f</anchor>
      <arglist>(Seat::Capabilities &amp;lhs, Seat::Capabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7e3da6720e035cef8d5fbd1a322dbe84</anchor>
      <arglist>(Toplevel::State lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab0ba0d6db47cfdf5bbb8d930301ac8f8</anchor>
      <arglist>(Toplevel::State lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac8165e4e85d0ae54ff8bac2bd9af171a</anchor>
      <arglist>(Toplevel::State lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1e5e8bb6fc7baccfefc42f93f85d49b6</anchor>
      <arglist>(Toplevel::State flags)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga434007d3c62bdb560605b66a92e63f83</anchor>
      <arglist>(Toplevel::State &amp;lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadf10a99e75aecdbb07cba6597bcf14d4</anchor>
      <arglist>(Toplevel::State &amp;lhs, Toplevel::State rhs)</arglist>
    </member>
    <member kind="function">
      <type>Toplevel::State &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga32e308b7a358a836c20a09100621861b</anchor>
      <arglist>(Toplevel::State &amp;lhs, Toplevel::State rhs)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>gtkmmEnums</name>
    <title>gtkmm Enums and Flags</title>
    <filename>group__gtkmmEnums.html</filename>
    <class kind="class">Gtk::Constraint::Strength_Wrapper</class>
    <class kind="class">Gtk::ResponseType_Wrapper</class>
    <member kind="typedef">
      <type>Strength_Wrapper::Strength</type>
      <name>Strength</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga09603bae21786aae8cb8e249c76fecff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ResponseType_Wrapper::ResponseType</type>
      <name>ResponseType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a310c03b74e03af3545fbfb0e17ba87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_ERROR</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga4faafafaf8812caae585e24c610c18f4ae015061ab5e9d50981f488a3e312d435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>License</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ad62ed19bfea19c06b7f7bd7eb7accd58">GPL_2_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a85d2e001767f82b2d32835e3455d5f0c">GPL_3_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ab459be528e41973aaafe4e0748eda088">LGPL_2_1</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4af181e5b5f858198a9d0c76d6a00af45a">LGPL_3_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ac539e03be7b269c8a84f85437bc8d298">BSD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a618ab187de4f43fe4111b0525c1b245b">MIT_X11</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a2ee472f109582677972e6225d6d919df">ARTISTIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ae03be4ef6a2988adbae4deca77d5ea2b">GPL_2_0_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4aa87d9623b391b6051e23f5929352212c">GPL_3_0_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4aef0877588103d357760ed599faf82011">LGPL_2_1_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4ae0ac086d453c7519ec4208a8c37def82">LGPL_3_0_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a7b2d38bd5fa3c2b6f8663e4ae3cee1bc">AGPL_3_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a90f48283538dd6982efee37160e5a32f">AGPL_3_0_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a3ee3064c2d3002a7ab8ad7f92e26cf58">BSD_3</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4aa81f6d86eeac0122f14239f6ecc60e84">APACHE_2_0</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga31c303a3e473b086b1f8225cd6c47db4a88932bac1467ad07c606249a9ffaa631">MPL_2_0</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Role</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1ab58f6e3d8aca72cd1983f549c792dc</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca320f86f60f25459ba5550e000b2c3929">ALERT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae2c1fc3dc24b47b7f543199e1a9d0874">ALERT_DIALOG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca001bd74e24a00403a292608ec2853cb9">BANNER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca57b35198356d373bcd2a6e08abcb3795">BUTTON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca4e817727ebb5d8566c54ee5ba9a1e2dd">CAPTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcadeaa44e5e872be992b4109cf1fbfe41e">CELL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca22ab9eebdf3d8e32268c02e577520333">CHECKBOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac01b0c29636651b53025a16986a09a1a">COLUMN_HEADER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcabdd67efa63416cd121f92526917dc4df">COMBO_BOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca26097a57f572fe88a7cdf80543422cb1">COMMAND</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca817e60c93ea667a3b1f99f516a56fa62">COMPOSITE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca51a2fc9427485236e89ca31fc55d66e5">DIALOG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac231fa48df3ee393c92dccac4dba5e7d">DOCUMENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae352a08d4fba713e5ae1e538bf27258c">FEED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca03c37111e264eee423ada395dd6474aa">FORM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac942dc2a9f958acddc67e11472d3ca0b">GENERIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcabc899ea5d6a94a8e4e60c16244919ba0">GRID</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca73555203545bb4623322fc6bff01cb7d">GRID_CELL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca720909a4b948fc9e33633b61960d6b3c">GROUP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcacc65dd7b535ac7fc2363aeb572cc2a8e">HEADING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcab03d9d40b1fb78805d1552b3d29c9ef3">IMG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaa84cc046d48610b05c21fd3670d0c829">INPUT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca6f434c508ad901b8667ed22f713e52bb">LABEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcada0100dab39349825d3307f72050b72d">LANDMARK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae986ff2a70aff886e574f489aa8d55ee">LEGEND</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca58c0a0e97e6d2f615bc264c2775fda44">LINK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca298cb25408234de02baf2085803a464a">LIST</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca93acd75af8be088fceba3c5a613f7645">LIST_BOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca383ec3822ff1c025e1509afae8fe4d98">LIST_ITEM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca4b5ffcdaf38ce4d463171f5c977c5ab3">LOG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca186495f7da296bf880df3a22a492b378">MAIN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5077fb50cee3bea4422edef805343fd2">MARQUEE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca65571aa0536447fb1cf47a2b5a98954b">MATH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcacc7ab7853e03a21956737fb272615996">METER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca3ed53fbeb1eab0443561b68ca0c0b5cf">MENU</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5077b97d66f96b05615971ccb62797b7">MENU_BAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaf7fb892d03bec2a0e9b44f040ab76266">MENU_ITEM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaa1229e84a68c990ec9341ca08658fab1">MENU_ITEM_CHECKBOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaf1b052ee0002a0c398ebd394c274584f">MENU_ITEM_RADIO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5995d98caf31b9445202b0f054fdc54e">NAVIGATION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca10de4bc81f754b19b0d27246a0589c05">NOTE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae1c4a02aed2e485ae96bc5a5b1d01ee5">OPTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca740819a7dc6b0b1a8a7fa0c871d9b878">PRESENTATION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca0d32e02396c223148b9aadf9894521d8">PROGRESS_BAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaf46d45b52139dc3fa782c53f701ada0d">RADIO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca445f94b595faf015861b8eab1b764b37">RADIO_GROUP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca01036ddcc971d02f6c32c3da31a119f2">RANGE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca69aede266809f89b89fe70681f6a129f">REGION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca54c1ed33c810f895d48c008d89f880b7">ROW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca230e2a2ff4cb04440bb2add619818132">ROW_GROUP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca0cae80a0cf92a708becd8a6d52a53be0">ROW_HEADER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac77177961ab05e4a38832dcd6e30627d">SCROLLBAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca0f544d682c3a664870f025f48c4b04b5">SEARCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcafc4b1ef43ea5f430dcd46e835f976710">SEARCH_BOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca3d0d6f3b89d94934de83ca41b85e6ce4">SECTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaebb61c975ebeec81512a5e96c63f6bd0">SECTION_HEAD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca63225f19fccb18e7c709f1fa11bc738e">SELECT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca70bb8dc90aa233a66b91ae2e9dc1a850">SEPARATOR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca3c93f85078b290625b7c4db299979c4f">SLIDER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5214661864b506ebf144ee02e5946e82">SPIN_BUTTON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca5f241c8c8f985b3c51e05d39cf030f4c">STATUS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca63d18c02d55fa0ce66b6368177bdcd22">STRUCTURE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca4239f063a3d4fb9d38a0182be6e39e76">SWITCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaf684bf05fa3e81528c84d1d281d839f1">TAB</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca34bbae0aee41ddd6a73697584a20afc6">TABLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca483739686769c47853ad5cc1bf56b7ab">TAB_LIST</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca0c059bcc42755f597c9527963b422c21">TAB_PANEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcae9f204874f73deda622034819e9a92ef">TEXT_BOX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca346ff32eaa3c09983fb2ec057816d352">TIME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcab127d163c55a6603f3a37ce3a642c36d">TIMER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcacf4b2ed50ec6bdf4d8e85e76e22f89fb">TOOLBAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcad324c1dd47c2c44f621c1e67dfecb915">TOOLTIP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcac0f8e24cf041639c4fc457ebec9490eb">TREE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca07dab3099643bedf96139aab23321641">TREE_GRID</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dcaa5f85922b5538d224e9ba3d1177fbeab">TREE_ITEM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca14dc79e11f9bdd15c996c5755c7cef4b">WIDGET</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1ab58f6e3d8aca72cd1983f549c792dca70e2a9fa5d5ec49dc67453eab551251d">WINDOW</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga490296d236fbf86a0427ef8b6286d8a2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a802706a9238e2928077f97736854bad4">BUSY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a758f9c8c8110e53f8c8e0c790f855560">CHECKED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a59fd6ceac734b3855e74b57d00a1db1f">EXPANDED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a347e628a8f72626a0611ef842fe9d304">HIDDEN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2accc0377a8afbf50e7094f5c23a8af223">INVALID</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2a5381dc876ab002103a027265bc14ae52">PRESSED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga490296d236fbf86a0427ef8b6286d8a2ac841881b7f65d9e69aa9c932ca4427c8">SELECTED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Property</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac658da0ea0eaa205df39642efa90d564</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a2c7a0318c82cfff19c1802f918e98390">AUTOCOMPLETE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a35ba4a2677442e210c23a00a5601aba3">DESCRIPTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a5713d2c112d751695983bb852f7c9cef">HAS_POPUP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a94455c33d4253390507b6caaad9bb94e">KEY_SHORTCUTS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a6f434c508ad901b8667ed22f713e52bb">LABEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564aec46cfef93df98a48cda0c5df179485e">LEVEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564ac0c047e39e77804b75bbfcb81cb58867">MODAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a8e729acc1d7af6eb333dd399b48a132c">MULTI_LINE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a8c4054b8081405cb7943107b55e339c1">MULTI_SELECTABLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a76b8a0c10dc65011f6062b5172cd2e2c">ORIENTATION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564ae54e6f6ba0c7cbb4eb7a2016e2f17842">PLACEHOLDER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a47c7e7cb36a953a8c47e02000036bb44">READ_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564aebdf9721be38d1fc1cd6db8c737d1be0">REQUIRED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564aa093886d3c4d62d3019d396dfdf27ad3">ROLE_DESCRIPTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564aa7bdfbfac6ba2252b889996b1430abb4">SORT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a7d10f12e8e56d7c8856961516fa67c92">VALUE_MAX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a941489206c4d8a192b5d9f4a94ccd0e3">VALUE_MIN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564af1512f645e5d2ca26a8f8bba82cf6b1f">VALUE_NOW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac658da0ea0eaa205df39642efa90d564a77a51f4bf0f0a08348f015b6ff36e3e2">VALUE_TEXT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Relation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3dcfd9d45f1ca01fde111168f48f5e81</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a44e6ea1efa23a7b6e5da61c105320405">ACTIVE_DESCENDANT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a1cf91b2c1c8f7fc323583af81881c2c6">COL_COUNT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a4328bf406df01a0cabb32a3ab2197222">COL_INDEX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a06a4b43d75f8e85c6ed86cee4c9dcaba">COL_INDEX_TEXT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81ae09d05962857a4722456f6ec73eccda1">COL_SPAN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81ae56516ff34a16dd1ff3515d65371b54f">CONTROLS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81acf8b36dbf69214b1f920322631315b24">DESCRIBED_BY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a3120001274fa32a921770c1b41e6dc0a">DETAILS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a736d9fa7654d470e073a4be93dc65241">ERROR_MESSAGE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a09e795572f3a2851ab186c5f6747c8c2">FLOW_TO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81aaffb20f59d70a9c04cf01be0d8cab781">LABELLED_BY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a22e915b459e6c42e7badf0927035af86">OWNS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a766664d4210b7d5d1b45ff2b6a466426">POS_IN_SET</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a528e714859c0ac8a1c138936f333c66e">ROW_COUNT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81af82301087d58a0ab0f97d7356cdbcf0e">ROW_INDEX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a42f5fa63c9d5979a45cedaa971948219">ROW_INDEX_TEXT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a4c2bd284a9a079315c28d23c69c9c9b1">ROW_SPAN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3dcfd9d45f1ca01fde111168f48f5e81a81fdf91f6a4297444e68789f28129840">SET_SIZE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InhibitFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae278666c28738b2f08e744359fd1210f</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae278666c28738b2f08e744359fd1210fa6b4ea69e17243db95f7b46c384d40370">LOGOUT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae278666c28738b2f08e744359fd1210fa4239f063a3d4fb9d38a0182be6e39e76">SWITCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae278666c28738b2f08e744359fd1210faee93a0b023cef18b34ebfee347881c14">SUSPEND</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae278666c28738b2f08e744359fd1210faa5daf7f2ebbba4975d61dab1c40188c7">IDLE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaba84fe97deaf61cbc7c37b0da747eea8</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8a45685e95985e20822fb2538a522a5ccf">CONTENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8ab467e83d416ac6465e889fd545099865">INTRO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8aa9b685a9e8c2047d4b9faac6217d7b4a">CONFIRM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8a36cbecb886c3fb994669cd10cdbd9f5f">SUMMARY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8aee88634543eb5c2b123bab1abd32c497">PROGRESS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba84fe97deaf61cbc7c37b0da747eea8a72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererState</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877ac841881b7f65d9e69aa9c932ca4427c8">SELECTED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877aae647f1222eb18ac0f5d78a76e3cedeb">PRELIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877a61441d6c841da240b514b8147c6570d3">INSENSITIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877a98c9ebf97fd64620520cc3f0386ebaf0">SORTED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877a3bccbab2a35cb78388a0f4a8e2003b07">FOCUSED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877ada38e4ae9f0772a8d992d805e07c3cd9">EXPANDABLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7061270b7c31ba72e053ab001ec2b877a59fd6ceac734b3855e74b57d00a1db1f">EXPANDED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecf</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf272c01b5a3cb656e373301223b1eecfad045782b31eed09e6224a51be7cda142">INERT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf272c01b5a3cb656e373301223b1eecfa92dd8beddddeafa14dbf175ad049b382">ACTIVATABLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf272c01b5a3cb656e373301223b1eecfa04b2e050ef362244ef798e7d855c74eb">EDITABLE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga37ea379a87aa7113a70d1d5f0e528889</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga37ea379a87aa7113a70d1d5f0e528889a26a9c5c9d126e9d098be533639b5a74b">GTK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga37ea379a87aa7113a70d1d5f0e528889a03570470bad94692ce93e32700d2e1cb">OTHER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Attribute</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad3f8d31e96c5061fd1be350528f079cb</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba6705777b712ee811e76fb07162081d63">TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba1fabf63de5c96c78e2a40805bcdeb73b">BOTTOM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbab078ffd28db767c502ac367053f6e0ac">START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbab1a326c06d88bf042f73d70f50197905">END</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba49da85b69bc6285eeee286ca49fa7195">WIDTH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbad770ba3ce18fa409965dfdf5e7c348e6">HEIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba6945258a54a487a8d099ad845d8a68dc">CENTER_X</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cbac216898c2e6ee2177fda78cbde124658">CENTER_Y</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad3f8d31e96c5061fd1be350528f079cba385881ed58577143e69edf478122d179">BASELINE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Relation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacdda6a1e3edf486ac9c665f3c7edc9e5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacdda6a1e3edf486ac9c665f3c7edc9e5acfe6055d2e0503be378bb63449ec7ba6">LE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacdda6a1e3edf486ac9c665f3c7edc9e5a2dcbad7477fd40561e8b8198f173bd47">EQ</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacdda6a1e3edf486ac9c665f3c7edc9e5af803729628adf4199f224c2a225038e9">GE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Strength</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REQUIRED</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a9907b69b4104df59a65aea75c28009ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRONG</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a2e5c4dc3e291431cd9bb417407c74e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEDIUM</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a39ae00014e9b756b5f89734f17ddbb58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WEAK</name>
      <anchorfile>classGtk_1_1Constraint_1_1Strength__Wrapper.html</anchorfile>
      <anchor>ga89dbdcc8ccfd80b1d81cb8c09ad9cf68a6bf07fbd482cf171b77d0fe743050e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResponseType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daad4ea59f594fd59ad3a852144de261c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REJECT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daae92318c46b56a1d8bbdee574f38cc3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEPT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa93ed784b706347dd88f06512da618b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_EVENT</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa2cb8c76b50fe11a470b68549ad7b7f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OK</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa38593f4d783caf058bacf101ae220a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CANCEL</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa4a4446885b7e1b32c1001b360d389e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOSE</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa4b5bc77caad2c2ae4c341481a6da4218</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YES</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daa37aa515bdfeaec788e619e4d6ebdd5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daad4faff5622f4a9e467b9ad4cc1fa4813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLY</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daadfeb8099e3f7caf3129dfc356f49dd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HELP</name>
      <anchorfile>classGtk_1_1ResponseType__Wrapper.html</anchorfile>
      <anchor>gae853fe65d0a3df931d9448766c05a4daadd2feb12ab27a8b5a83bd9ea95c54baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaeaddb18d36849c71968a6c0084a0e3ff</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaeaddb18d36849c71968a6c0084a0e3ffa428429ba9ea83e4841036fb0508fd6dc">PRIMARY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaeaddb18d36849c71968a6c0084a0e3ffa371b09d93ca01e09a42fbd5a2a423f8e">SECONDARY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Align</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411ae8225b11842409df543692aebed34fd1">FILL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411ab078ffd28db767c502ac367053f6e0ac">START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411ab1a326c06d88bf042f73d70f50197905">END</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411ac397289ee45877be0cd49811fe245b4e">CENTER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga07dda5f4c3d75f3ccb9fbec43a46b411a385881ed58577143e69edf478122d179">BASELINE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ArrowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782a</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aafbaedde498cdead4f2780217646e9ba1">UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aac4e0e4e3118472beeb2ae75827450f1f">DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aa684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aa21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5f1b4259f10ccf40735a017cff64782aab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeleteType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3a</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aadb8615d2de129806499e1c0b9ed16f9f">CHARS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aa82b25208e9e6a9c9e0f60c898d6b142e">WORD_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aac92e63983e5471b830aabea602fd2360">WORDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aad7c369998a9d28efa02e40615f5ad89e">DISPLAY_LINES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aabc6d36ef4c74a07b9576f95dc25faab8">DISPLAY_LINE_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aaa4c18f4c349daba2391f81fe7cbcca44">PARAGRAPH_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aad473f89caa2621cbac56ade8371d45fe">PARAGRAPHS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9c026e86bfa8453a9894d7372046ab3aa52f1e315372b38db1b8f4e3666c4f721">WHITESPACE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DirectionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7bac61a259280534b88be3a4869b6327f31">TAB_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7bafdf9020b004ae74f8b1ac6142e1b9ab4">TAB_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7bafbaedde498cdead4f2780217646e9ba1">UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7bac4e0e4e3118472beeb2ae75827450f1f">DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7ba684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6c754c32a8421f746367b43c277e4d7ba21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconSize</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4dda2576308ca7af1688ff7b7c091e8c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4dda2576308ca7af1688ff7b7c091e8cace138ec8d8aadff7e1db3c13b62c3d16">INHERIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4dda2576308ca7af1688ff7b7c091e8ca1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4dda2576308ca7af1688ff7b7c091e8ca71726adf0ff60cd03eaf3c515883eeb8">LARGE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3d</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabfcae0b9b0cf2aab01ee96352668d3dab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabfcae0b9b0cf2aab01ee96352668d3da3e35661f311d49f66eccb1bc2ea4de46">LTR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabfcae0b9b0cf2aab01ee96352668d3daefe01da942ed68b700b911f5a1b131a7">RTL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Justification</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549be</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5ba228222f6b4bfde1d59eb7134549bea684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5ba228222f6b4bfde1d59eb7134549bea21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5ba228222f6b4bfde1d59eb7134549beac397289ee45877be0cd49811fe245b4e">CENTER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5ba228222f6b4bfde1d59eb7134549beae8225b11842409df543692aebed34fd1">FILL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8698319d7eb64b1f297b04e4e5c7809b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809ba551b723eafd6a31d444fcb2f5920fbd3">INFO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809ba059e9861e0400dfbe05c98a841f3f96b">WARNING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809ba2799482497469e61e6ce62588cc7b71f">QUESTION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809babb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8698319d7eb64b1f297b04e4e5c7809ba03570470bad94692ce93e32700d2e1cb">OTHER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MovementStep</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdec</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca2b04ff879957cf72ee0d8d6ed4d11469">LOGICAL_POSITIONS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca0045267457114c8ef2f5cf286d6080de">VISUAL_POSITIONS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecac92e63983e5471b830aabea602fd2360">WORDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecad7c369998a9d28efa02e40615f5ad89e">DISPLAY_LINES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecabc6d36ef4c74a07b9576f95dc25faab8">DISPLAY_LINE_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecad473f89caa2621cbac56ade8371d45fe">PARAGRAPHS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdecaa4c18f4c349daba2391f81fe7cbcca44">PARAGRAPH_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca9306c07017fd316befdc82b5cd16652f">PAGES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca7f1899ac72381f48fe7843abbdb5d33b">BUFFER_ENDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26a9a2bc22d7c9d4a635c54eecd2bdeca2ae89707d4f986b0965f9b8a2aaf2bff">HORIZONTAL_PAGES</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Orientation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga84179a467b0ed4f61b4e325eb09b0b1c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga84179a467b0ed4f61b4e325eb09b0b1ca86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga84179a467b0ed4f61b4e325eb09b0b1ca3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Overflow</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga30e9efcbf3fddf39c7fed0fafc502d4c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga30e9efcbf3fddf39c7fed0fafc502d4ca510222cdd4bc0b765486ba35b2775e54">VISIBLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga30e9efcbf3fddf39c7fed0fafc502d4ca347e628a8f72626a0611ef842fe9d304">HIDDEN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CornerType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796a</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb771ef9e379831be8ae9711cf01796aa747385047b85ae751f83adb36435a3c1">TOP_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb771ef9e379831be8ae9711cf01796aa8d81ac82421d1b03da58fccb9174892e">BOTTOM_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb771ef9e379831be8ae9711cf01796aa901d87dedda8db733f5e6d34c4eb5fe0">TOP_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb771ef9e379831be8ae9711cf01796aa341b72aaab1308a3e6667af1e52f5def">BOTTOM_RIGHT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PackType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafd31781c802e2887a7898b442780662d</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafd31781c802e2887a7898b442780662dab078ffd28db767c502ac367053f6e0ac">START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafd31781c802e2887a7898b442780662dab1a326c06d88bf042f73d70f50197905">END</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PickFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafad5b9976ce273bc6632075e4fd3d433</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafad5b9976ce273bc6632075e4fd3d433a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafad5b9976ce273bc6632075e4fd3d433a61441d6c841da240b514b8147c6570d3">INSENSITIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gafad5b9976ce273bc6632075e4fd3d433a8846371fcb1b2afc144e36f48cacd7fc">NON_TARGETABLE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PolicyType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb7ebcc442f2bdbeca2bf7436c18ffd9af3fc827ade4b968e50406496907ef962">ALWAYS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb7ebcc442f2bdbeca2bf7436c18ffd9a008f6cdd0c190839e9885cf9f9e2a652">AUTOMATIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb7ebcc442f2bdbeca2bf7436c18ffd9a443475558f0168dff92ecde26b98ae5a">NEVER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacb7ebcc442f2bdbeca2bf7436c18ffd9a3932d629fb5e2be9d09b3a4485b3cc9d">EXTERNAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PositionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3568edcd04af4a2cbd1eb0195513fe6ba684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3568edcd04af4a2cbd1eb0195513fe6ba21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3568edcd04af4a2cbd1eb0195513fe6ba6705777b712ee811e76fb07162081d63">TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3568edcd04af4a2cbd1eb0195513fe6ba1fabf63de5c96c78e2a40805bcdeb73b">BOTTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RevealerTransitionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ac6cd088ce1247a63b5cb265e4ff547f6">CROSSFADE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a152f1036c0739805670d9a146ba55ea4">SLIDE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ad8d6276cf556fd04c990921931f7c8f9">SLIDE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a1fed7c44a85162ae1a819234e4e0b62e">SLIDE_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a543dfeb28adfe9a119ec87df86a2f02d">SLIDE_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ae18cffb65bd85b7fd97b7094752a2556">SWING_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a3f455c00c836c3aa75ae7ba898d8ff81">SWING_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542ad11f823dd2cb07649a0372f1c1bdabf1">SWING_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga027016b2a3cb48c00420bd5c883d2542a4af14ab67148d94d0a77297fd18346ff">SWING_DOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a40222410c7347ec4b6bcaba3bcb21f3b">JUMP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a77848feb272e734f57ef2a467da168bb">STEP_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a2562da1964d4881ee13b4d332169b839">STEP_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a84855ab8774fc617d92c0d3bfa2bc4b7">PAGE_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a59a864aecb8511033ba3029c850b4d5b">PAGE_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a06fb2775ee1c7667a924e617c216efca">STEP_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a47f518d69b15443f1b518a0ee42a8de4">STEP_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ae791d936f894ce58dd18bf603edcb9b4">PAGE_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ae9a23c5ce3d34b40123d65ca14b2e88f">PAGE_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a9df2c203ab55cdb565d1d0736191bc7e">STEP_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ae360df38493d65079ed1e1e0a1616bb1">STEP_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a753c2d32899531224d6da811b617b74b">PAGE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8a34691b980cc62b33b67783f5e32485cc">PAGE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ab078ffd28db767c502ac367053f6e0ac">START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2fd32d0f58465678e475c5cf11b4a0d8ab1a326c06d88bf042f73d70f50197905">END</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3e58167cfed0be4c87474c3bdca80d78ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3e58167cfed0be4c87474c3bdca80d78a0679273e201afd0bf57af3961f8a23b8">SINGLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3e58167cfed0be4c87474c3bdca80d78a81bc07b0b58ddb233dbccd42a7a14d46">BROWSE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3e58167cfed0be4c87474c3bdca80d78a65f405ff27981239b3c296a487786b85">MULTIPLE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StackTransitionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ac6cd088ce1247a63b5cb265e4ff547f6">CROSSFADE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a152f1036c0739805670d9a146ba55ea4">SLIDE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ad8d6276cf556fd04c990921931f7c8f9">SLIDE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a1fed7c44a85162ae1a819234e4e0b62e">SLIDE_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a543dfeb28adfe9a119ec87df86a2f02d">SLIDE_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ac78dee3132b64a1852d92bf3d84d2cb4">SLIDE_LEFT_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a4f9e0cb595730fe558f0c29b7fcc39a6">SLIDE_UP_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290aac74928ae0582a6d2d496afad5c6dd74">OVER_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290afd0dc80f690d5b34b0badb73d739fa6a">OVER_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ae9e7be80d5d140394b2002a8810c7f18">OVER_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ac84f7e7ebb49f99c2dcd47f6942fa4a8">OVER_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a1fcc712a4313b1a464bc27c81e094b03">UNDER_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290aa9efb04a22194d60299a977370f5b971">UNDER_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a73ac647b7db2fbe77537a32e20a52bd8">UNDER_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290abc0ea4a83b79393c1c4d41cb9a44b54c">UNDER_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ab82759f118cbdd6a9a255e8bf6df3562">OVER_UP_DOWN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a47aed8f242fd6993ebefdfa05e298a64">OVER_DOWN_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ad2e0766420009569403f3c44df92b73a">OVER_LEFT_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290ac5347fdbdfd30e0c4590ac8f461278db">OVER_RIGHT_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a5d167d235f5a8880ec432fc13206106f">ROTATE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290a17ac59a0d27b38c77bd02f3bcefd5728">ROTATE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4d63c0ba7f51164e14950146b30ad290aab98ef36772da284b27836063dab7f20">ROTATE_LEFT_RIGHT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WrapMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad4b21987a45f87bbdae74d63d92e543b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad4b21987a45f87bbdae74d63d92e543bab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad4b21987a45f87bbdae74d63d92e543ba027acd3aa6b1dd7f26119d3cf0f9a063">CHAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad4b21987a45f87bbdae74d63d92e543babdde29e3c0fe7b687d69a696bbaf71ac">WORD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad4b21987a45f87bbdae74d63d92e543ba747e9563254d052b55ceef37bcf8de50">WORD_CHAR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NaturalWrapMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabe369d1ed66fb3387e34fe8dbbcd62f5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gabe369d1ed66fb3387e34fe8dbbcd62f5ace138ec8d8aadff7e1db3c13b62c3d16">INHERIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gabe369d1ed66fb3387e34fe8dbbcd62f5ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gabe369d1ed66fb3387e34fe8dbbcd62f5abdde29e3c0fe7b687d69a696bbaf71ac">WORD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6052510d27fae00eed4aaa3640ff9fbe</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6052510d27fae00eed4aaa3640ff9fbea83ec681a20197326c163ea3b39ef7c32">ASCENDING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6052510d27fae00eed4aaa3640ff9fbeacff818f0ae4cef845577e39283886a53">DESCENDING</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Ordering</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaabda831565bf9011ccfdd6dd8579966b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabda831565bf9011ccfdd6dd8579966ba24090feb3da5cdc786897cfe709a9f2b">SMALLER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabda831565bf9011ccfdd6dd8579966ba969f331a87d8c958473c32b4d0e61a44">EQUAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaabda831565bf9011ccfdd6dd8579966ba0b05bcaf8d36c43568ed40ff4098bc76">LARGER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PageOrientation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bf</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga466045b8876a149482ab0034c53302bfa7dbb530820039c270faf100d3f6ff027">PORTRAIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga466045b8876a149482ab0034c53302bfa20287e25ffb71f92af9803e4c3a53928">LANDSCAPE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga466045b8876a149482ab0034c53302bfa77ef580b02607c3670912ae096a2d7e9">REVERSE_PORTRAIT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga466045b8876a149482ab0034c53302bfa08856dc7ac138f20776636dfbfe7b877">REVERSE_LANDSCAPE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SensitivityType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baa</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga20c60e5d15f0bd720bdbd72567414baaae1f2d5134ed2543d38a0de9751cf75d9">AUTO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga20c60e5d15f0bd720bdbd72567414baaa90651ebea9a35ec4e018c8157492e17c">ON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga20c60e5d15f0bd720bdbd72567414baaa88559a0cfd8250c9d65970cc145c92d4">OFF</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SizeRequestMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga35be6d001d814dbf37bd405433b06cf5a5b0843da6f9c935945dfa2414d3bb0fd">HEIGHT_FOR_WIDTH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga35be6d001d814dbf37bd405433b06cf5af7c9ec2e2edbcefb4f54cd4a94ddf47d">WIDTH_FOR_HEIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga35be6d001d814dbf37bd405433b06cf5a7948d919713bdd26caa8fa84d86d2d81">CONSTANT_SIZE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a18ff74f43da410c5529f7d6fca84f115">ACTIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a36c1a4573b5a639d07fe3a483d525a60">PRELIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8ac841881b7f65d9e69aa9c932ca4427c8">SELECTED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a61441d6c841da240b514b8147c6570d3">INSENSITIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a311b0dffee5d76ae9d32401832da100b">INCONSISTENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a3bccbab2a35cb78388a0f4a8e2003b07">FOCUSED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a212ce5af0d9ebd4ecdf6defe7c982882">BACKDROP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a7933faaed3f6cab7068a04a891e42f68">DIR_LTR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a580fdcf2015437e27c075ac66e9a2bda">DIR_RTL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a58c0a0e97e6d2f615bc264c2775fda44">LINK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8aa6ec08e871b6a4151dc143082d826cd2">VISITED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a758f9c8c8110e53f8c8e0c790f855560">CHECKED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8acede43a7d12021fb24c8bb0d337b3e60">DROP_ACTIVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a793d33a91df9b60577fbf16c30b699cf">FOCUS_VISIBLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga0a5e26de0d09b403a8487431c69c29e8a9062ef80ed5425408ded0095aff2c1bc">FOCUS_WITHIN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputPurpose</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a1af05990625447458f0ca2af23f9c94d">FREE_FORM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a002101f8725e5c78d9f30d87f3fa4c87">ALPHA</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6af9be5b7d870f8c68a8f1de3ef940bf31">DIGITS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a34f55eca38e0605a84f169ff61a2a396">NUMBER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6af9dd946cc89c1f3b41a0edbe0f36931d">PHONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6ae6b391a8d2c4d45902a23a8b6585703d">URL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a61a649a33f2869e5e35fbb7aff3a80d9">EMAIL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6aad32e604e17467fc435538334fbddf3e">NAME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a319f4d26e3c536b5dd871bb2c52e3178">PASSWORD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6acdbc895d08b5d92db04174533a8548f7">PIN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaf17b1622b867a2fddd3e0d89641dc5b6a6c7748bd0ad3fbdff996e81581ad64d6">TERMINAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputHints</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a697c7b3f271fd8e9c63dc6ca6004ba2a">SPELLCHECK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5ac888b8aa14a7ed05b98140c68478f7ce">NO_SPELLCHECK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a6382f1777eef31b47211c79be0197f58">WORD_COMPLETION</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a13740c53e0080fab7e5d80ac3cb5d6c7">LOWERCASE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a652c41eba2c45879dcde99d946f0f25a">UPPERCASE_CHARS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a23cfa62652f3af4fdf047804514c2b59">UPPERCASE_WORDS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a7eecb826f2b77dfcdd2eabe153f154bf">UPPERCASE_SENTENCES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a80689142af8cf2bd7d104bc7904e5207">INHIBIT_OSK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5ab035df10136becb427a75fd00e57acde">VERTICAL_WRITING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a3d5a8e602b2db6ec81688075668247f5">EMOJI</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a1320d041756fab0be4b3024403d9942e">NO_EMOJI</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae29290d8d4e5fa9c44bfa8682bfd20d5a84c6d22cfdf3772e66b07bde636e0571">PRIVATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BaselinePosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga00fac330ed16cf77e1f1e2744d6dcdf2a6705777b712ee811e76fb07162081d63">TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga00fac330ed16cf77e1f1e2744d6dcdf2ac397289ee45877be0cd49811fe245b4e">CENTER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga00fac330ed16cf77e1f1e2744d6dcdf2a1fabf63de5c96c78e2a40805bcdeb73b">BOTTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShortcutScope</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga129a7769d1432f63cf004a29387d5172</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga129a7769d1432f63cf004a29387d5172a54b4c4075463b2e02cd69f5cd139b5b2">LOCAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga129a7769d1432f63cf004a29387d5172af59a25f2594f469f0bfccad7f8f13744">MANAGED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga129a7769d1432f63cf004a29387d5172a6eecfba72d12922ee1dead07a0ef3334">GLOBAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContentFit</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4b947ccb193a81c9246f8c6205930606</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4b947ccb193a81c9246f8c6205930606ae8225b11842409df543692aebed34fd1">FILL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4b947ccb193a81c9246f8c6205930606a6c8c93b0cd657e2fd400f2c61acc6f42">CONTAIN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4b947ccb193a81c9246f8c6205930606a901b03ba0232d92accb3426e9acddfee">COVER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4b947ccb193a81c9246f8c6205930606abc583ad00af23561f79a0855821cda73">SCALE_DOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropagationPhase</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3f2ccdc42fe620ab04147029242efb57ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3f2ccdc42fe620ab04147029242efb57ab72f08e0732365cac9599b5c42157bf9">CAPTURE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3f2ccdc42fe620ab04147029242efb57a5e8d29c977ac65a782e594abae4bcbb2">BUBBLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3f2ccdc42fe620ab04147029242efb57a730950ad798a77ad508aa9e2564d013f">TARGET</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropagationLimit</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad9c2c418dcd294fb6a3b09edc34dd0f5</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad9c2c418dcd294fb6a3b09edc34dd0f5ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad9c2c418dcd294fb6a3b09edc34dd0f5a8e83da138016212adcc854f55d4bac1c">SAME_NATIVE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2f4ea68ca5589be50d127b8986af5ed6</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6a3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6a86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6a947436f2927405d3b5997a9ffbaee5c1">DISCRETE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6ac0893282d183a6fa7fd80184fa3c55b5">KINETIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga2f4ea68ca5589be50d127b8986af5ed6a09c53ae3ab29ec3163646260f1718fe4">BOTH_AXES</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Action</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga57f46e9703df51c17120a1ae66013c64</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57f46e9703df51c17120a1ae66013c64aa38bd5138bf35514df41a1795ebbf5c3">OPEN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57f46e9703df51c17120a1ae66013c64af5cf47ab06d0d98b0d16d10c82d87953">SAVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57f46e9703df51c17120a1ae66013c64a5fbf65adb266b6de8f2f52e5b69d9741">SELECT_FOLDER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Match</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacf3ae0254df1758e5c2e31e595623473</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacf3ae0254df1758e5c2e31e595623473a7c3e1ce969660271ac92e0a5796f5006">SOME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacf3ae0254df1758e5c2e31e595623473ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gacf3ae0254df1758e5c2e31e595623473a5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Change</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1edfeef044a3ebf31d50b073d06567a9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1edfeef044a3ebf31d50b073d06567a9a0b744563be36b7a48a74c50ca8cb6086">DIFFERENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1edfeef044a3ebf31d50b073d06567a9abcc8a989e619cf65df48a50a91683252">LESS_STRICT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1edfeef044a3ebf31d50b073d06567a9a5efeef338b2c0e8b36bef3ee2ce65e5a">MORE_STRICT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Level</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3733404e877c764250e07774a0e0e01b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01ba499a1fe16898531e2422c704a0288797">FAMILY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01ba264709ebce8699b21d39a308b1f9d32c">STYLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01ba62e5cef85d46f1a5a2144d9fd463b79e">SIZE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01bacf88d392b0f0838b288a189e17af99e4">VARIATIONS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3733404e877c764250e07774a0e0e01bab1fa6b4767532c2e890022101221bd08">FEATURES</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventSequenceState</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac6cd8c73d758289d36ce3ead17b42b8eab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac6cd8c73d758289d36ce3ead17b42b8eaae96222dd53eeb49ff325d44bf84898b">CLAIMED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gac6cd8c73d758289d36ce3ead17b42b8ea66d5e0b0ce726b4aeb4ddf6c25b6c12b">DENIED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PanDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccf</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga69b6d95718a927fa162896019abf6ccfa684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga69b6d95718a927fa162896019abf6ccfa21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga69b6d95718a927fa162896019abf6ccfafbaedde498cdead4f2780217646e9ba1">UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga69b6d95718a927fa162896019abf6ccfac4e0e4e3118472beeb2ae75827450f1f">DOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconLookupFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6d0c2193613cfb97ab313746a5bacaa2a68f736522b9cec790ffac6173a7fd890">FORCE_REGULAR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6d0c2193613cfb97ab313746a5bacaa2a7461f0e2fd5cb759c2b9f90199d09c04">FORCE_SYMBOLIC</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6d0c2193613cfb97ab313746a5bacaa2ac88a7ff977d4250f490213c08fb1d8e8">PRELOAD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DropPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad6b7ea49f82faf60410da94295ef0c31</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31aed1461e5a1dfcd9cc2a2c1256cbc12ba">NO_DROP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31a73bb093b4e2ce554f38759894e2f19e2">DROP_INTO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31a3554608aad81e502f3730fb3111b3ace">DROP_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31a351b645b0cde94e2a6ad7c59d297b6de">DROP_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31a0608e83286dbf456757ed066c259f0d5">DROP_ABOVE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad6b7ea49f82faf60410da94295ef0c31ab11f8a2240d2a7fd3efc5bc3bcdd6577">DROP_BELOW</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8ed6bbffba0750d512037c52c41241c9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8ed6bbffba0750d512037c52c41241c9aba2b45bdc11e2a4a6e86aab2ac693cbb">EMPTY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8ed6bbffba0750d512037c52c41241c9a484797e70bef449836ab6cca9aea0251">ICON_NAME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8ed6bbffba0750d512037c52c41241c9a5ad54c521e286a5e5afb7167f44a45fa">GICON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8ed6bbffba0750d512037c52c41241c9a9e57b212c433a4c4d4fab8f3ccf4f59e">PAINTABLE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Overflow</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae790dfa333cb7f309f46b15ef81d108b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae790dfa333cb7f309f46b15ef81d108ba960f0b6c4711bd0a42965edec68192d8">CLIP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae790dfa333cb7f309f46b15ef81d108ba230936fc88abe698e0a81a2fba0bac8a">ELLIPSIZE_START</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae790dfa333cb7f309f46b15ef81d108bacfa3955b5914d1e353a2e383f99a7387">ELLIPSIZE_MIDDLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gae790dfa333cb7f309f46b15ef81d108bada3f7691594116cf83f2f4218a27b7a0">ELLIPSIZE_END</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6325bddf3cabc28df0072be9b3a8a62c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6325bddf3cabc28df0072be9b3a8a62cab1fa9dd3af034b3ef4291579aa673c07">CONTINUOUS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga6325bddf3cabc28df0072be9b3a8a62ca947436f2927405d3b5997a9ffbaee5c1">DISCRETE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ButtonsType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094ab</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094abab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094abae0aa021e21dddbd6d8cecec71e9cf564">OK</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094aba7286293c9125ac7d7bace94c190bc16d">CLOSE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094aba2027c027133e22c8929e2874dc44dd36">CANCEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094abaa8a862c880ca436e818ab6fba32e8f82">YES_NO</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga13107e98e788d2cd5f823a58dcb094abacb1315790b542732dedb0c77e73d5d68">OK_CANCEL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadActionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8c0adb8db3023099859105acf38d056b</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8c0adb8db3023099859105acf38d056ba57b35198356d373bcd2a6e08abcb3795">BUTTON</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8c0adb8db3023099859105acf38d056bae69b8a2544417fb71e2767e95d7ac8f3">RING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga8c0adb8db3023099859105acf38d056ba6989032db1002ec3fb0b2de2c970f184">STRIP</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Unit</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fb</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9cdd3adb4017a5c706e205aa914ba6fbab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9cdd3adb4017a5c706e205aa914ba6fba70b71cabeeaf8c2bf473c896d5442ddb">POINTS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9cdd3adb4017a5c706e205aa914ba6fba30a479d5d88158a7f4248944ccbf72b0">INCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga9cdd3adb4017a5c706e205aa914ba6fbaad05f78187c942f9dd521605fa81f1ba">MM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad58ce7e8f69cfe0805c467851e5716f9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad58ce7e8f69cfe0805c467851e5716f9a7398e1727dc7944c94c699b50b30ab10">NESTED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintStatus</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a91d26e4b2b105c74655093c9becd30b7">INITIAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2abd6a3a60251e4e52cdc9c393f33cbe10">PREPARING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a0276249b1bed372c591ca9b9ba0427c5">GENERATING_DATA</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2abb06c7633e3f218d4bdaa98908f4ac47">SENDING_DATA</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2ac69f06e1a9b016d133907b4e5f5864d2">PENDING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2aa93e92d3ca62e31700ec784e8b811d25">PENDING_ISSUE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a80740a1b51505a3f7697e6c4e532ba81">PRINTING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a2c616b2713e2e0aed04b4c4752c88133">FINISHED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga55cc984b17f826539f78a64c4b9022a2a9f8764895271c8ac1f624461c218b3bb">FINISHED_ABORTED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Result</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4aedb78e0b9fa987ddce905b1fb4cb4e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4aedb78e0b9fa987ddce905b1fb4cb4eabb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4aedb78e0b9fa987ddce905b1fb4cb4ea2919bace3a09a7700313ddaa94bfada9">APPLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4aedb78e0b9fa987ddce905b1fb4cb4ea2027c027133e22c8929e2874dc44dd36">CANCEL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4aedb78e0b9fa987ddce905b1fb4cb4eaca69f96c768067fbff6c911ca87bccc9">IN_PROGRESS</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Action</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga08b82aa3839b05d5e73e8bc8bea530ee</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga08b82aa3839b05d5e73e8bc8bea530eea263adae4b3f637c0bede71c59448cb29">PRINT_DIALOG</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga08b82aa3839b05d5e73e8bc8bea530eeaf96eee4e48ee90430f17fb3a8388507b">PRINT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga08b82aa3839b05d5e73e8bc8bea530eea16146de8c60e5b0d74bf6d2a78d4f576">PREVIEW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga08b82aa3839b05d5e73e8bc8bea530eea0ceefc7f4aa071a30dd85c5b5bd14852">EXPORT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintDuplex</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga50af48ce5ffc122b50924230939b78e3abc424b28fbff73745ea330d848bcc668">SIMPLEX</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga50af48ce5ffc122b50924230939b78e3a86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga50af48ce5ffc122b50924230939b78e3a3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintQuality</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gab282abd83fff59a70ddba9e26cd30e04a41bc94cbd8eebea13ce0491b2ac11b88">LOW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gab282abd83fff59a70ddba9e26cd30e04a1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gab282abd83fff59a70ddba9e26cd30e04ab89de3b4b81c4facfac906edf29aec8c">HIGH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gab282abd83fff59a70ddba9e26cd30e04a521019040a0f4f7773357aa6bc22180b">DRAFT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintPages</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga003abcb0f8711428f85e3c54c68ee25ea5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga003abcb0f8711428f85e3c54c68ee25eaa2770969c827f0f2910f6179418462df">CURRENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga003abcb0f8711428f85e3c54c68ee25eaa38e66ffb7ec3fbbd28bcbedeec0cd7d">RANGES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga003abcb0f8711428f85e3c54c68ee25ea0a2dba942c08df9fd12a10acc7f19a78">SELECTION</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PageSet</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26726525983cb55ec0633b7485143cf3a5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26726525983cb55ec0633b7485143cf3a6634c67f28ba9a80efe941b9519aa106">EVEN</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga26726525983cb55ec0633b7485143cf3a57a1355d5527355458c7cc08ba70bf94">ODD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NumberUpLayout</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9adeabc6f363f5f7395989ec5ecba971ba">LEFT_TO_RIGHT_TOP_TO_BOTTOM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9a1c8e0cb420bc1387e349ac7c00f6b65d">LEFT_TO_RIGHT_BOTTOM_TO_TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9a18b01b26be272743d5a8275fb910359b">RIGHT_TO_LEFT_TOP_TO_BOTTOM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9aa2626d64408fd37e3535313806ad24b9">RIGHT_TO_LEFT_BOTTOM_TO_TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9ad0d32dc8040f9efbea1641c2009c7bdd">TOP_TO_BOTTOM_LEFT_TO_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9adc300b18229aea7bbb12555ee05faabc">TOP_TO_BOTTOM_RIGHT_TO_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9a0ba1f2ebdd474598941ec0fef2fa24e6">BOTTOM_TO_TOP_LEFT_TO_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga439c4b003562e9c4f6e20f76134d9da9a3443c6090746c10ac90eca0b4d6f3df1">BOTTOM_TO_TOP_RIGHT_TO_LEFT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Policy</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga57b4de8e5ec822b289c97425e166b515</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57b4de8e5ec822b289c97425e166b515acf0ee111afe9889278a772d631dfa150">MINIMUM</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga57b4de8e5ec822b289c97425e166b515a5309059cbdbae2a0551437827203ad0f">NATURAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4a792efb57139359d7bc4e297ca3cd69</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga4a792efb57139359d7bc4e297ca3cd69af45c3a0bb3687ed8e221253b3fd4a2ce">EXCLUSIVE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShortcutType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02abf6ceeb63dd0c59cf68f18bb85d62b2d">ACCELERATOR</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a115c8f01be400a85bf6913ce675e4055">GESTURE_PINCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a3fbc2b2c789ff4e8a1703d02fdca0e99">GESTURE_STRETCH</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02abf2a7916e04b8f2311eb7fe9d7b0bdb4">GESTURE_ROTATE_CLOCKWISE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a42517f7f21ed422a3ecd689f0917ded8">GESTURE_ROTATE_COUNTERCLOCKWISE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a39186febfd7afaab988bcf9b76c0a38c">GESTURE_TWO_FINGER_SWIPE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02ad33abe7a449cf860a905f6baa79ef7f1">GESTURE_TWO_FINGER_SWIPE_RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a18ab6eb876a304305b5a09208567680c">GESTURE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a85c572f65fc91e3a2826e2815da6cc1b">GESTURE_SWIPE_LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga379230abb3c93aad74b3d2859960db02a893e00ba8004a994f4b078c14ef38353">GESTURE_SWIPE_RIGHT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga29a4a38f862c3d596fe44d2c55882730</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga29a4a38f862c3d596fe44d2c55882730ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga29a4a38f862c3d596fe44d2c55882730a86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga29a4a38f862c3d596fe44d2c55882730a3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga29a4a38f862c3d596fe44d2c55882730a6328e5e3186c227a021ef2ff77e40197">BOTH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Order</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga32d91a07c2942c4bcc0c8811ff6e4ca9</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga32d91a07c2942c4bcc0c8811ff6e4ca9afba5cdfa4bcb408f641c743519a0fe19">PARTIAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga32d91a07c2942c4bcc0c8811ff6e4ca9ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga32d91a07c2942c4bcc0c8811ff6e4ca9a3af22b59f4641bc5501998297f9ac70d">TOTAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Change</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5408a7c6f2ea6ac055b2bef81e8d4e5d</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5408a7c6f2ea6ac055b2bef81e8d4e5da0b744563be36b7a48a74c50ca8cb6086">DIFFERENT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5408a7c6f2ea6ac055b2bef81e8d4e5da3b1b4a4827c05897abb3915b5c8f8139">INVERTED</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5408a7c6f2ea6ac055b2bef81e8d4e5dabcc8a989e619cf65df48a50a91683252">LESS_STRICT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga5408a7c6f2ea6ac055b2bef81e8d4e5da5efeef338b2c0e8b36bef3ee2ce65e5a">MORE_STRICT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpinType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575c</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca2562da1964d4881ee13b4d332169b839">STEP_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca77848feb272e734f57ef2a467da168bb">STEP_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca59a864aecb8511033ba3029c850b4d5b">PAGE_FORWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca84855ab8774fc617d92c0d3bfa2bc4b7">PAGE_BACKWARD</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca710533dd879dd1202e5c73b27705bf02">HOME</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575cab1a326c06d88bf042f73d70f50197905">END</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga1fdcff1634130369780165ddce65575ca5123cb514ff95a726922950380866e00">USER_DEFINED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UpdatePolicy</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaebf700edeb39a06fc0f95f8f877523f2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaebf700edeb39a06fc0f95f8f877523f2af3fc827ade4b968e50406496907ef962">ALWAYS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaebf700edeb39a06fc0f95f8f877523f2a3ccc8225dfb3c701d6fac4be2d4407f6">IF_VALID</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MatchMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3962827261f1c86a66556b5baa85237a</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3962827261f1c86a66556b5baa85237aac41e056424136b6e8c4e23dd6326efa1">EXACT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3962827261f1c86a66556b5baa85237aaa07774c4ba1e6908ad5aed2b17a03db5">SUBSTRING</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3962827261f1c86a66556b5baa85237aa4e076080d87888ac96f19b271a6ee406">PREFIX</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3518e1efe174b74435de789628a4547f</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3518e1efe174b74435de789628a4547fab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3518e1efe174b74435de789628a4547fa48151c242bcd15fa2fdecba3fda0c2eb">RECURSE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3518e1efe174b74435de789628a4547fa3639885a4401dfcec50656335f707d50">SHOW_STYLE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3518e1efe174b74435de789628a4547fa22370f6606f4c091a1f261d713eac8d2">SHOW_CHANGE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextSearchFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga45bb48ef86a7da2535de94066029bc29a75847e4f17fade6de4955ebe9fe996c0">VISIBLE_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga45bb48ef86a7da2535de94066029bc29a3e380f5fb3b2482487df3ae4244de2d8">TEXT_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga45bb48ef86a7da2535de94066029bc29a2144545143b2322969cdd90988e5b4bc">CASE_INSENSITIVE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextWindowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a14dc79e11f9bdd15c996c5755c7cef4b">WIDGET</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a61a96ffcb251bb9bf0abf8fec19d0ea8">TEXT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a684d325a7303f52e64011467ff5c5758">LEFT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a21507b40c80068eda19865706fdc2403">RIGHT</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a6705777b712ee811e76fb07162081d63">TOP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a67e20499adf4787fa20ca51cb848c4a1fabf63de5c96c78e2a40805bcdeb73b">BOTTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a86e009cc39c176e1966fa00a74d861</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a86e009cc39c176e1966fa00a74d861a58e421eaf5a6b2057a106d08aa83c433">ITERS_PERSIST</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga7a86e009cc39c176e1966fa00a74d861a6842aca958d33d116d261b1b1ca88abd">LIST_ONLY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DropPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadb904813894a2fdb92ebf452437a0c5e</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gadb904813894a2fdb92ebf452437a0c5ea3525317285c6126ce3b62a8df8c00b07">BEFORE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gadb904813894a2fdb92ebf452437a0c5eac130fda0cb93540bf1574912e78964fb">AFTER</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gadb904813894a2fdb92ebf452437a0c5ea65ed068b7cf7b85ca6639541156d6733">INTO_OR_BEFORE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gadb904813894a2fdb92ebf452437a0c5eafd38abad70e822b8e3f0a54ca5d4f662">INTO_OR_AFTER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GridLines</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3b07b40498ca9f9e96203c646ab62cba</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3b07b40498ca9f9e96203c646ab62cbaab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3b07b40498ca9f9e96203c646ab62cbaa86e5d0d8407ce71f7e2004ef3949894e">HORIZONTAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3b07b40498ca9f9e96203c646ab62cbaa3e1b74251c07310c5f1b968145bf00dc">VERTICAL</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="ga3b07b40498ca9f9e96203c646ab62cbaa6328e5e3186c227a021ef2ff77e40197">BOTH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Sizing</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad38642b1b42fad0f81583122be117fb2</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad38642b1b42fad0f81583122be117fb2ac258357a20bd22e0442145a7144de9ca">GROW_ONLY</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad38642b1b42fad0f81583122be117fb2afaf1ef2435f2843f123c49e47288e5f1">AUTOSIZE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gad38642b1b42fad0f81583122be117fb2ac6e6dc18b53b4c2681394b9d8aefcec7">FIXED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintCapabilities</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcb</anchor>
      <arglist></arglist>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbafab1b9baa2e24c2792a93f0d2780df40">PAGE_SET</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbaf02148c811fd8c3232b840ef6a2390c3">COPIES</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbadcb8f1b0c17da8a5a259440bcbe46c92">COLLATE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcba642e0b6684e6165e142c074f1cd8d55c">REVERSE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcba127ea1d20becc4dba06d9d152db0c2e5">SCALE</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbab18c422d890777dc9b6160603065652c">GENERATE_PDF</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbac281a9c7735967492a9d79018db2da50">GENERATE_PS</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcba16146de8c60e5b0d74bf6d2a78d4f576">PREVIEW</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcba8c1247ebc830ae5162b0bb09bedc33ad">NUMBER_UP</enumvalue>
      <enumvalue file="group__gtkmmEnums.html" anchor="gaba4fee25db9350d20b61ec5c3f468bcbaeff7a10f8dbd4e022753fbec33d82d50">NUMBER_UP_LAYOUT</enumvalue>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga875c4250a627fe2fb6106c62a33fe505</anchor>
      <arglist>(Application::InhibitFlags lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafa16bc517d0d1ad3fc195f51aa90fae8</anchor>
      <arglist>(Application::InhibitFlags lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga92983bca7fb11ee943692f541a0ec7d1</anchor>
      <arglist>(Application::InhibitFlags lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf3e6f5c5bf529b0ad18bfbac48333cb5</anchor>
      <arglist>(Application::InhibitFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga856e61c5a1f55ab30c8bbce51660b15a</anchor>
      <arglist>(Application::InhibitFlags &amp;lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac4c4e76300e78ae5e7c28311fb365351</anchor>
      <arglist>(Application::InhibitFlags &amp;lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Application::InhibitFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8ae7de71ac9a5758fc505c3d07bd1e18</anchor>
      <arglist>(Application::InhibitFlags &amp;lhs, Application::InhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga95ae2f1836dd939955d64dfda0734032</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga347757f95f45cafb39eff727d14b22fa</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga55d02129ec54aed65c659d1ef73261e5</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5afd3653c32defe9fc0c788ba865ed0d</anchor>
      <arglist>(CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1c2c79ca5b77d866e386bc29560ba66c</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga73c38048d39ad525c36ac18208c0b5d3</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac60535e95befe7132bc7a2a29ebbc2ce</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaaa6501f8f2eaf5dcbc6568182e4db1cb</anchor>
      <arglist>(PickFlags lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5a25b8496b54fdf1be8b53744fa07705</anchor>
      <arglist>(PickFlags lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae8d5c4c0ea9d73770daf755ef1698b34</anchor>
      <arglist>(PickFlags lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga93619bc87aa79a64e1acb7ecdaa37ce8</anchor>
      <arglist>(PickFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1ad05815b7b0a1c6ae470ff9e7cfcb4a</anchor>
      <arglist>(PickFlags &amp;lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab1f15465723cc26786edd1758c897ce6</anchor>
      <arglist>(PickFlags &amp;lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PickFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaad54f16347f98449003b6c082a0e1c9d</anchor>
      <arglist>(PickFlags &amp;lhs, PickFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa430c6d062989989c878a4f1409376f8</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2cbf355a938231d81ffe937654fd4599</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadf47fccda70b738a0e6b6dde1dbb2ea9</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2c413d343ec83522dd8a42c6987fc0eb</anchor>
      <arglist>(StateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga37d7a45c257f87eb52d62dbae44255dc</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac2be079f075e21089339425f4c3f6a3b</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga46591e2dc834d86e904e55fa39e9f8e8</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6ba3c52bbebec0f97b48f59b9f84a3a8</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae5bb58fae80b9d328ffeabaeace1ded9</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9ed94f7dab42eacdb9de8713c965bad1</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacaad3c53584466e69c8f244367e977c6</anchor>
      <arglist>(InputHints flags)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae8ca47a4563565d1f33971ad81cfce4c</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1e13e262c767b57c682bc11f155adcef</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6b376ffed88b71a4f7ded7a0389775b3</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae7ea829519a6e36816975d706d28c20d</anchor>
      <arglist>(EventControllerScroll::Flags lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6a7d3ada355ccfcbb88ffe0faae8be74</anchor>
      <arglist>(EventControllerScroll::Flags lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga783bc5b23caa06399c05b08fe1f7d9c0</anchor>
      <arglist>(EventControllerScroll::Flags lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0e00fbc1eebc5f8466917b4e4d6b4a9e</anchor>
      <arglist>(EventControllerScroll::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0a39f09a86e787cf36c34cb60b918309</anchor>
      <arglist>(EventControllerScroll::Flags &amp;lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga99b91d2fd33022f2ddd35014906df230</anchor>
      <arglist>(EventControllerScroll::Flags &amp;lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventControllerScroll::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf6e0fe4495135f75032fee829977d2b7</anchor>
      <arglist>(EventControllerScroll::Flags &amp;lhs, EventControllerScroll::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga17d56bfccc04152d0fd985677ab27f6b</anchor>
      <arglist>(FontChooser::Level lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga47538f01790b093ffdd7f7a0495052cb</anchor>
      <arglist>(FontChooser::Level lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabfb0febc07feade8dea08b6cad212487</anchor>
      <arglist>(FontChooser::Level lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5c0454d1a7b9bb1284b544f0241cf9f7</anchor>
      <arglist>(FontChooser::Level flags)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2d7eba0dcac65cd0ef4e85285b817971</anchor>
      <arglist>(FontChooser::Level &amp;lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab9c2aa4ba8acd72e37074672b0156a87</anchor>
      <arglist>(FontChooser::Level &amp;lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>FontChooser::Level &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaff92c7c1ae1763b04ac0f657c5448787</anchor>
      <arglist>(FontChooser::Level &amp;lhs, FontChooser::Level rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae43eefc56e404acd25aa5088fa9eab40</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga396c2a966305f85991a6a63247438d4b</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5042237701d1e7cb3210bb46cdb41b87</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8f097ce72dcecce314f18303ed06bfac</anchor>
      <arglist>(IconLookupFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4151cc515d6ce6b6d99c5f9c7c3822f1</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9037d2bb6e8f05b4210a596cfd8fda9c</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab5daff6317f96dc6602f9d300d597eef</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga31614e6b23688da2ed69b5d54be41f22</anchor>
      <arglist>(PopoverMenu::Flags lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad97f2fb50c73f72acf8fc4edfe9acdd4</anchor>
      <arglist>(PopoverMenu::Flags lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf224fe29c8d933c24a65c847f5c8289d</anchor>
      <arglist>(PopoverMenu::Flags lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga93a63e64efde8eedf23a9b9214833a70</anchor>
      <arglist>(PopoverMenu::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5008341d6f22b1bb4d11ce2a719bb942</anchor>
      <arglist>(PopoverMenu::Flags &amp;lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf326fddc2ef880e2247563bcc65797af</anchor>
      <arglist>(PopoverMenu::Flags &amp;lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga086ba77dfbc90a3978eec543c88b470c</anchor>
      <arglist>(PopoverMenu::Flags &amp;lhs, PopoverMenu::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga116156a171b8d20719ee7dc47f942c99</anchor>
      <arglist>(ShortcutAction::Flags lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad5b19f262633c8426cf67f7ad34976a8</anchor>
      <arglist>(ShortcutAction::Flags lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga646c2cd8b7618dae084c0f3902bdca33</anchor>
      <arglist>(ShortcutAction::Flags lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga78f36f85904d62d93bf8396b5f33ed71</anchor>
      <arglist>(ShortcutAction::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa97f29c1fe8dee76eb5f1656f9d1ab1d</anchor>
      <arglist>(ShortcutAction::Flags &amp;lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga92c6366033f6c92edc37647d3898087a</anchor>
      <arglist>(ShortcutAction::Flags &amp;lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ShortcutAction::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga292c19f32a97c9fabe661f351d2d22e2</anchor>
      <arglist>(ShortcutAction::Flags &amp;lhs, ShortcutAction::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3191dfe30a797835afb4138d1f1359b0</anchor>
      <arglist>(StyleContext::PrintFlags lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1d449e1491bef5c9d3532c75cab08833</anchor>
      <arglist>(StyleContext::PrintFlags lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacbc696fb3f40d1aa0ee6ec5b181bf3d3</anchor>
      <arglist>(StyleContext::PrintFlags lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaad383ec5fe6b4392daf278f44eadc720</anchor>
      <arglist>(StyleContext::PrintFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa6176d06dc766f6af96a53183d9dafd7</anchor>
      <arglist>(StyleContext::PrintFlags &amp;lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7e01c03812c836d742bd27a1256b7789</anchor>
      <arglist>(StyleContext::PrintFlags &amp;lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StyleContext::PrintFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadf7b4e645e768344bb445dac5aff2937</anchor>
      <arglist>(StyleContext::PrintFlags &amp;lhs, StyleContext::PrintFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga00496c69b32a8eddccf163fb11e00327</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7360481e7db3ee22b52891b45b801f89</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaac266d954271ea5fe49d534864f2d5f1</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0f9d38cf1bed3e028260e13b8fbc9870</anchor>
      <arglist>(TextSearchFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae0035cd1212a0d562b3c4dc774282b69</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad8778fcc2c2c67aa28abdec698207600</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3171b3210f43ed5468a094117b7c36eb</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf53b4964aa02b5891829410f45643239</anchor>
      <arglist>(TreeModel::Flags lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacfd11a91aae02011666bbf241447b791</anchor>
      <arglist>(TreeModel::Flags lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0dc3d66f8e6140430e416c2d16d1198d</anchor>
      <arglist>(TreeModel::Flags lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9ab0f14eb4d09fa1ec1ffe461d40a738</anchor>
      <arglist>(TreeModel::Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2300bb8d3fecd3132c520e56f4bcd7ac</anchor>
      <arglist>(TreeModel::Flags &amp;lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga93887731186ac13c17d41c50f98e8cef</anchor>
      <arglist>(TreeModel::Flags &amp;lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Flags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7f69944a15758301c01cee2ec123b5ac</anchor>
      <arglist>(TreeModel::Flags &amp;lhs, TreeModel::Flags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaad61a9471f6ee6484f965ad54b5afb80</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga76b2f115d9c93812b98e55c298fa5a88</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga89e437a62c5057f51524d52555f83208</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga45759a0732ecd7ebcf69e83924465de5</anchor>
      <arglist>(PrintCapabilities flags)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaacc1cca7058c9611b24e6f631e07a4e2</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga828daae7b326f2fedde6b21401fb05fa</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae5d504a32337e05514b2fb747d61d058</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>gtkmm Reference Manual</title>
    <filename>index.html</filename>
  </compound>
</tagfile>
